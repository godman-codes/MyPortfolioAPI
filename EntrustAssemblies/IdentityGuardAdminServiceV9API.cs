//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 
namespace IdentityGuardAdminServiceV9API {
    using System.Diagnostics;
    using System;
    using System.Xml;
    using System.Collections;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AdminServiceBinding", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class AdminService : System.Web.Services.Protocols.SoapHttpClientProtocol {
	private bool useKeepAlive = false;

        /// <summary>
        /// Allow overriding of the socket keep alive behavior.
        /// The default is not to use keep alive, which is more
        /// reliable, but synchronizing socket keep alive times
        /// with the server and turning on keep alive may improve
        /// performance.
        /// </summary>
        public bool UseKeepAlive
        {
            get { return useKeepAlive; }
            set { useKeepAlive = value; }
        }

        /// <summary>
        /// Overrides the GetWebRequest method to allow setting of the
        /// socket keep alive behavior. See http://blogs.msdn.com/engelsr/articles/497902.aspx
        /// and http://seroter.wordpress.com/2007/08/06/troubleshooting-canceled-web-request/
        /// for details. The UseKeepAlive property can be used to control whether or
        /// not socket keep alive is used or not.
        /// </summary>
        protected override System.Net.WebRequest GetWebRequest(Uri uri)
        {
            System.Net.HttpWebRequest webRequest = (System.Net.HttpWebRequest)base.GetWebRequest(uri);

            if (this.UseKeepAlive)
            {
                webRequest.KeepAlive = true;
            }
            else
            {
                webRequest.KeepAlive = false;
            }
            return webRequest;
        }

       /// <summary>
       ///   Convert a SoapException to an AdminServiceFault.
       ///   Return null if the conversion fails.
       /// </summary>
       /// <param name="soapEx">
       ///   the SoapException returned by IG server
       /// </param>
       /// <returns type="AdminServiceFault">
       ///   the AdminServiceFault
       /// </returns>
       public static AdminServiceFault getFault(SoapException soapEx)
       {
          XmlDocument doc = new XmlDocument();
          if (soapEx.Detail == null)
          {
             return null;
          }
          doc.LoadXml(soapEx.Detail.OuterXml);
          if (!doc.FirstChild.HasChildNodes)
          {
             return null;
          }
          XmlNode node = doc.FirstChild.FirstChild;
          string name = node.Name;
          AdminServiceFault fault = null;
          if (name.Contains("AdminServiceFault"))
          {
             fault = new AdminServiceFault();
          }
          else if (name.Contains("AdminPasswordChangeRequiredFault"))
          {
             fault = new AdminPasswordChangeRequiredFault();
          }

          if (fault != null)
          {
             if (fault is AdminPasswordChangeRequiredFault)
             {
                AdminPasswordChangeRequiredFault pswdFault =
                    (AdminPasswordChangeRequiredFault)fault;
                pswdFault.PasswordRules = getPasswordRulesFromFault(node);

                pswdFault.errorMessage = getValueFromFault(node, "errorMessage");
                pswdFault.id = getValueFromFault(node, "id");
                pswdFault.InternalCode = getValueFromFault(node, "InternalCode");
                pswdFault.ErrorCode = getErrorCodeFromFault(node);
                pswdFault.Params = getListFromFault(node, "Params");

                return pswdFault;
             }
             else
             {
                fault.errorMessage = getValueFromFault(node, "errorMessage");
                fault.id = getValueFromFault(node, "id");
                fault.InternalCode = getValueFromFault(node, "InternalCode");
                fault.ErrorCode = getErrorCodeFromFault(node);
                fault.Params = getListFromFault(node, "Params");

                return fault;
             }
          }
          return null;
       }

       private static XmlNode getNodeForTag(XmlNode node, string tag)
       {
          string xpath = "*[local-name()='" + tag +"']";
          return node.SelectSingleNode(xpath);
       }

       private static string getValueFromFault(XmlNode node, string tag)
       {
          XmlNode n = getNodeForTag(node, tag);
          if (n != null)
          {
             return n.InnerText;
          }
          else
          {
             return null;
          }
       }

       private static string[] getListFromFault(XmlNode node, string tag)
       {
          XmlNode n = getNodeForTag(node, tag);
          if ((n == null) || (! n.HasChildNodes)) return null;

          ArrayList list = new ArrayList();
          for (int i=0; i<n.ChildNodes.Count; i++)
          {
              XmlNode child = n.ChildNodes[i];
              if (child.LocalName.Equals("item"))
              {
                 list.Add(child.InnerText);
              }
          }

          return (string []) list.ToArray(typeof(string));
       }

       private static PasswordRulesInfo getPasswordRulesFromFault(XmlNode node)
       {
          XmlNode pwdRules = getNodeForTag(node, "PasswordRules");
          if (pwdRules == null)
          {
             return null;
          }
          // construct PasswordRules
          PasswordRulesInfo rules = new PasswordRulesInfo();
          XmlDocument rulesDoc = new XmlDocument();
          rulesDoc.LoadXml(pwdRules.OuterXml);
          if (!rulesDoc.HasChildNodes)
          {
             return null;
          }

          XmlNode rulesNode = rulesDoc.FirstChild;

          rules.comment = getValueFromFault(rulesNode, "comment");
          rules.history = Int32.Parse(getValueFromFault(rulesNode, "history"));
          string idleTimeout = getValueFromFault(rulesNode, "idleTimeout");
          if (idleTimeout != null)
          {
             rules.idleTimeout = Int32.Parse(idleTimeout);
          }
          rules.lifetime = Int32.Parse(getValueFromFault(rulesNode, "lifetime"));
          rules.minLength = Int32.Parse(getValueFromFault(rulesNode, "minLength"));
          rules.minLifetime = Int32.Parse(getValueFromFault(rulesNode, "minLifetime"));
          rules.maxRepeatedChars = Int32.Parse(getValueFromFault(rulesNode, "maxRepeatedChars"));
          rules.maxPasswordChangeTime = Int32.Parse(getValueFromFault(rulesNode, "maxPasswordChangeTime"));
          rules.maxPasswordFailures = Int32.Parse(getValueFromFault(rulesNode, "maxPasswordFailures"));
          rules.name = getValueFromFault(rulesNode, "name");
          string number = getValueFromFault(rulesNode, "number");
          if (number != null)
          {
             rules.number =
               (PasswordCharacterType) Enum.Parse(typeof(PasswordCharacterType),
                                                  number);
          }
          string special = getValueFromFault(rulesNode, "special");
          if (special != null)
          {
             rules.special =
               (PasswordCharacterType) Enum.Parse(typeof(PasswordCharacterType),
                                                  special);
          }
          string uppercase = getValueFromFault(rulesNode, "uppercase");
          if (uppercase != null)
          {
             rules.uppercase =
               (PasswordCharacterType) Enum.Parse(typeof(PasswordCharacterType),
                                                  uppercase);
          }
          string lowercase = getValueFromFault(rulesNode, "lowercase");
          if (lowercase != null)
          {
             rules.lowercase =
               (PasswordCharacterType) Enum.Parse(typeof(PasswordCharacterType),
                                                  lowercase);
          }
          string firstAuth = getValueFromFault(rulesNode, "firstAuth");
          if (firstAuth != null)
          {
             rules.firstAuth =
               (AuthenticationType) Enum.Parse(typeof(AuthenticationType),
                                               firstAuth);
          }
          else
          {
             rules.firstAuth = AuthenticationType.NONE;
          }
          string secondAuth = getValueFromFault(rulesNode, "secondAuth");
          if (secondAuth != null)
          {
             rules.secondAuth =
               (AuthenticationType) Enum.Parse(typeof(AuthenticationType),
                                               secondAuth);
          }
          else
          {
             rules.secondAuth = AuthenticationType.NONE;
          }
          string storage = getValueFromFault(rulesNode, "storage");
          if (storage != null)
          {
             rules.storage =
               (PasswordStorage) Enum.Parse(typeof(PasswordStorage),
                                            storage);
          }

          return rules;
       }

       private static ErrorCode getErrorCodeFromFault(XmlNode node)
       {
          string errorCode = getValueFromFault(node, "ErrorCode");
          if (errorCode == null)
          {
             return ErrorCode.MISC;
          }

          return (ErrorCode) Enum.Parse(typeof(ErrorCode), errorCode);
       }



        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback keepAliveOperationCompleted;
        
        private System.Threading.SendOrPostCallback pingOperationCompleted;
        
        private System.Threading.SendOrPostCallback versionGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback licenseGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback licenseGetExOperationCompleted;
        
        private System.Threading.SendOrPostCallback licenseSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback licenseCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback licenseSetExOperationCompleted;
        
        private System.Threading.SendOrPostCallback licenseCheckExOperationCompleted;
        
        private System.Threading.SendOrPostCallback tokenLicenseGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback tokenLicenseSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback tokenLicenseCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialLicenseGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialLicenseSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialLicenseCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback systemInfoGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback partitionCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback partitionDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback partitionGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback partitionSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback partitionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ipLocationGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback countryGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback countryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback regionGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback regionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback tokenVendorGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback tokenVendorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback policyCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback policyDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback policyGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback policyGetExOperationCompleted;
        
        private System.Threading.SendOrPostCallback policySetOperationCompleted;
        
        private System.Threading.SendOrPostCallback policyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSpecGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback cardSpecGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback pinSpecGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback passwordRulesGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback permissionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ownRoleGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback roleCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback roleDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback roleGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback roleSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback roleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback groupCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback groupDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback groupGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback groupSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback groupListOperationCompleted;
        
        private System.Threading.SendOrPostCallback managedCaUserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManagedCaCertificateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback managedCaScepRaEncryptionCertificateGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback managedCaScepRaCertificateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback managedCaScepRaDecryptDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback managedCaScepRaSignContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback userRegistrationPasswordGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userRegistrationPasswordAuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userRegistrationPasswordGetExOperationCompleted;
        
        private System.Threading.SendOrPostCallback userRegistrationPasswordAuthenticateExOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialDefinitionCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialDefinitionDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialDefinitionGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialDefinitionTemplateGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialDefinitionSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialDefinitionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialDefinitionTemplateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialVariableCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialVariableDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialVariableSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialDeliveryGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialDeliveryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback userDeliveryGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userDeliveryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialAppletCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialAppletDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialAppletGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialAppletSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialAppletListOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialAppletTemplateGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialAppletTemplateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback pacsCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback pacsDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback pacsGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback pacsSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback pacsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback proxyCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback proxyDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback proxyGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback proxySetOperationCompleted;
        
        private System.Threading.SendOrPostCallback proxyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback riskEngineGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback riskEngineListOperationCompleted;
        
        private System.Threading.SendOrPostCallback biometricVendorGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback biometricVendorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialGraphicCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialGraphicDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialGraphicGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialGraphicSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialGraphicListOperationCompleted;
        
        private System.Threading.SendOrPostCallback digitalIdConfigCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback digitalIdConfigDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback digitalIdConfigGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback digitalIdConfigSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback digitalIdConfigListOperationCompleted;
        
        private System.Threading.SendOrPostCallback digitalIdConfigTemplateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialLayoutCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialLayoutDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialLayoutGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialLayoutTemplateGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialLayoutSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialLayoutListOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialLayoutTemplateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialPrintModuleCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialPrintModuleDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialPrintModuleGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialPrintModuleSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialPrintModuleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialPrintModuleWipeOperationCompleted;
        
        private System.Threading.SendOrPostCallback repositoryGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback repositoryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userDeliverOperationCompleted;
        
        private System.Threading.SendOrPostCallback userGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userListOperationCompleted;
        
        private System.Threading.SendOrPostCallback userLockoutGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userLockoutSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userEnrollListOperationCompleted;
        
        private System.Threading.SendOrPostCallback deliveryConfigListOperationCompleted;
        
        private System.Threading.SendOrPostCallback userContactInfoCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userContactInfoDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userContactInfoGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userContactInfoSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPINCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPINDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPINDeliverOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPINGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPINSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userMachineSecretCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userMachineSecretDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userMachineSecretGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userMachineSecretSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userMachineSecretListOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPreferenceCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPreferenceDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPreferenceGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPreferenceSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPreferenceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback userOTPCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userOTPDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userOTPDeliverOperationCompleted;
        
        private System.Threading.SendOrPostCallback userOTPGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userOTPSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPasswordCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPasswordSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPasswordGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPasswordListOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPasswordDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPasswordDeliverOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPVNCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPVNSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPVNDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPVNDeliverOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPVNGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCardCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCardDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCardDeliverOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCardGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCardSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCardUnassignOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCardListOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCardExportOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenAssignOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenUnassignOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenChallengeGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenAuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenChallengeAuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenUnlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenUnlockExOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenResponseGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenActivateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenActivateExOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenActivateCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenTransactionValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userTokenListOperationCompleted;
        
        private System.Threading.SendOrPostCallback userBiometricCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userBiometricDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userBiometricGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userBiometricSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialCreateExOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialGetExOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialChallengeGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialChallengeAuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialChallengeOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialTransactionValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialSignStartOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialSignCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialSetExOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialUnblockOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialDigitalIdCreateRecoverOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialDigitalIdCreateRecoverExOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialTokenCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialPACSGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialPACSRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialPACSSuspendOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialUnassignOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialHoldOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialUnholdOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialIssueOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialDeliverOperationCompleted;
        
        private System.Threading.SendOrPostCallback userSmartCredentialListOperationCompleted;
        
        private System.Threading.SendOrPostCallback userDigitalIdCreateRecoverPolicyGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userDigitalIdCreateRecoverOperationCompleted;
        
        private System.Threading.SendOrPostCallback userDigitalIdDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userDigitalIdSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userDigitalIdGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userDigitalIdCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback userDigitalIdHoldOperationCompleted;
        
        private System.Threading.SendOrPostCallback userDigitalIdUnholdOperationCompleted;
        
        private System.Threading.SendOrPostCallback userDigitalIdListOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCertificateAssignOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCertificateAssignVerifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCertificateExportOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCertificateDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCertificateGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCertificateSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCertificateChallengeOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCertificateAuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCertificateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback preproducedCardCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback preproducedCardDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback preproducedCardGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback preproducedCardSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback preproducedCardListOperationCompleted;
        
        private System.Threading.SendOrPostCallback preproducedCardExportOperationCompleted;
        
        private System.Threading.SendOrPostCallback tokenLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback tokenDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback tokenInitializeStartOperationCompleted;
        
        private System.Threading.SendOrPostCallback tokenInitializeCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback tokenInitializeCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback tokenGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback tokenSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback tokenListOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialChallengeGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialChallengeAuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback smartCredentialListOperationCompleted;
        
        private System.Threading.SendOrPostCallback challengeGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback challengeAuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ipListAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback ipListDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ipListGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ipListListOperationCompleted;
        
        private System.Threading.SendOrPostCallback auditGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback auditListOperationCompleted;
        
        private System.Threading.SendOrPostCallback auditCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback auditDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback transactionCertificateGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback transactionCertificateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback transactionCertificateCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback transactionCertificateDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback transactionCertificateSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback transactionCertificateExportOperationCompleted;
        
        private System.Threading.SendOrPostCallback transactionCertificateImportVerifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback transactionCertificateImportOperationCompleted;
        
        private System.Threading.SendOrPostCallback caCertificateGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback caCertificateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback caCertificateValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback caCertificateLDAPGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback caCertificateLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback caCertificateDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback caCertificateSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback caCertificateExportOperationCompleted;
        
        private System.Threading.SendOrPostCallback caCertificateLoadVerifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback reportDefinitionGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback reportDefinitionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback reportCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback reportGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback reportListOperationCompleted;
        
        private System.Threading.SendOrPostCallback reportDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userFederationCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userFederationDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback userFederationGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userFederationSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback userFederationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback managedCaCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback managedCaDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback managedCaGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback managedCaSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback managedCaListOperationCompleted;
        
        private System.Threading.SendOrPostCallback managedCaPivSignContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback isMicrosoftCaSupportAvailableOperationCompleted;
        
        private System.Threading.SendOrPostCallback managedCaIsCertRevokedOperationCompleted;
        
    /// <summary>
    ///   Default constructor
    /// </summary>
        public AdminService() {
            this.SoapVersion = System.Web.Services.Protocols.SoapProtocolVersion.Soap12;
            this.Url = "https://localhost:8444/IdentityGuardAdminService/services/AdminServiceV9";
        }
        
    ///  <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
    ///  <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
    ///  <remarks/>
        public event changePasswordCompletedEventHandler changePasswordCompleted;
        
    ///  <remarks/>
        public event keepAliveCompletedEventHandler keepAliveCompleted;
        
    ///  <remarks/>
        public event pingCompletedEventHandler pingCompleted;
        
    ///  <remarks/>
        public event versionGetCompletedEventHandler versionGetCompleted;
        
    ///  <remarks/>
        public event licenseGetCompletedEventHandler licenseGetCompleted;
        
    ///  <remarks/>
        public event licenseGetExCompletedEventHandler licenseGetExCompleted;
        
    ///  <remarks/>
        public event licenseSetCompletedEventHandler licenseSetCompleted;
        
    ///  <remarks/>
        public event licenseCheckCompletedEventHandler licenseCheckCompleted;
        
    ///  <remarks/>
        public event licenseSetExCompletedEventHandler licenseSetExCompleted;
        
    ///  <remarks/>
        public event licenseCheckExCompletedEventHandler licenseCheckExCompleted;
        
    ///  <remarks/>
        public event tokenLicenseGetCompletedEventHandler tokenLicenseGetCompleted;
        
    ///  <remarks/>
        public event tokenLicenseSetCompletedEventHandler tokenLicenseSetCompleted;
        
    ///  <remarks/>
        public event tokenLicenseCheckCompletedEventHandler tokenLicenseCheckCompleted;
        
    ///  <remarks/>
        public event smartCredentialLicenseGetCompletedEventHandler smartCredentialLicenseGetCompleted;
        
    ///  <remarks/>
        public event smartCredentialLicenseSetCompletedEventHandler smartCredentialLicenseSetCompleted;
        
    ///  <remarks/>
        public event smartCredentialLicenseCheckCompletedEventHandler smartCredentialLicenseCheckCompleted;
        
    ///  <remarks/>
        public event systemInfoGetCompletedEventHandler systemInfoGetCompleted;
        
    ///  <remarks/>
        public event partitionCreateCompletedEventHandler partitionCreateCompleted;
        
    ///  <remarks/>
        public event partitionDeleteCompletedEventHandler partitionDeleteCompleted;
        
    ///  <remarks/>
        public event partitionGetCompletedEventHandler partitionGetCompleted;
        
    ///  <remarks/>
        public event partitionSetCompletedEventHandler partitionSetCompleted;
        
    ///  <remarks/>
        public event partitionListCompletedEventHandler partitionListCompleted;
        
    ///  <remarks/>
        public event ipLocationGetCompletedEventHandler ipLocationGetCompleted;
        
    ///  <remarks/>
        public event countryGetCompletedEventHandler countryGetCompleted;
        
    ///  <remarks/>
        public event countryListCompletedEventHandler countryListCompleted;
        
    ///  <remarks/>
        public event regionGetCompletedEventHandler regionGetCompleted;
        
    ///  <remarks/>
        public event regionListCompletedEventHandler regionListCompleted;
        
    ///  <remarks/>
        public event tokenVendorGetCompletedEventHandler tokenVendorGetCompleted;
        
    ///  <remarks/>
        public event tokenVendorListCompletedEventHandler tokenVendorListCompleted;
        
    ///  <remarks/>
        public event policyCreateCompletedEventHandler policyCreateCompleted;
        
    ///  <remarks/>
        public event policyDeleteCompletedEventHandler policyDeleteCompleted;
        
    ///  <remarks/>
        public event policyGetCompletedEventHandler policyGetCompleted;
        
    ///  <remarks/>
        public event policyGetExCompletedEventHandler policyGetExCompleted;
        
    ///  <remarks/>
        public event policySetCompletedEventHandler policySetCompleted;
        
    ///  <remarks/>
        public event policyListCompletedEventHandler policyListCompleted;
        
    ///  <remarks/>
        public event userSpecGetCompletedEventHandler userSpecGetCompleted;
        
    ///  <remarks/>
        public event cardSpecGetCompletedEventHandler cardSpecGetCompleted;
        
    ///  <remarks/>
        public event pinSpecGetCompletedEventHandler pinSpecGetCompleted;
        
    ///  <remarks/>
        public event passwordRulesGetCompletedEventHandler passwordRulesGetCompleted;
        
    ///  <remarks/>
        public event permissionListCompletedEventHandler permissionListCompleted;
        
    ///  <remarks/>
        public event ownRoleGetCompletedEventHandler ownRoleGetCompleted;
        
    ///  <remarks/>
        public event roleCreateCompletedEventHandler roleCreateCompleted;
        
    ///  <remarks/>
        public event roleDeleteCompletedEventHandler roleDeleteCompleted;
        
    ///  <remarks/>
        public event roleGetCompletedEventHandler roleGetCompleted;
        
    ///  <remarks/>
        public event roleSetCompletedEventHandler roleSetCompleted;
        
    ///  <remarks/>
        public event roleListCompletedEventHandler roleListCompleted;
        
    ///  <remarks/>
        public event groupCreateCompletedEventHandler groupCreateCompleted;
        
    ///  <remarks/>
        public event groupDeleteCompletedEventHandler groupDeleteCompleted;
        
    ///  <remarks/>
        public event groupGetCompletedEventHandler groupGetCompleted;
        
    ///  <remarks/>
        public event groupSetCompletedEventHandler groupSetCompleted;
        
    ///  <remarks/>
        public event groupListCompletedEventHandler groupListCompleted;
        
    ///  <remarks/>
        public event managedCaUserListCompletedEventHandler managedCaUserListCompleted;
        
    ///  <remarks/>
        public event ManagedCaCertificateListCompletedEventHandler ManagedCaCertificateListCompleted;
        
    ///  <remarks/>
        public event managedCaScepRaEncryptionCertificateGetCompletedEventHandler managedCaScepRaEncryptionCertificateGetCompleted;
        
    ///  <remarks/>
        public event managedCaScepRaCertificateListCompletedEventHandler managedCaScepRaCertificateListCompleted;
        
    ///  <remarks/>
        public event managedCaScepRaDecryptDataCompletedEventHandler managedCaScepRaDecryptDataCompleted;
        
    ///  <remarks/>
        public event managedCaScepRaSignContentCompletedEventHandler managedCaScepRaSignContentCompleted;
        
    ///  <remarks/>
        public event userRegistrationPasswordGetCompletedEventHandler userRegistrationPasswordGetCompleted;
        
    ///  <remarks/>
        public event userRegistrationPasswordAuthenticateCompletedEventHandler userRegistrationPasswordAuthenticateCompleted;
        
    ///  <remarks/>
        public event userRegistrationPasswordGetExCompletedEventHandler userRegistrationPasswordGetExCompleted;
        
    ///  <remarks/>
        public event userRegistrationPasswordAuthenticateExCompletedEventHandler userRegistrationPasswordAuthenticateExCompleted;
        
    ///  <remarks/>
        public event smartCredentialDefinitionCreateCompletedEventHandler smartCredentialDefinitionCreateCompleted;
        
    ///  <remarks/>
        public event smartCredentialDefinitionDeleteCompletedEventHandler smartCredentialDefinitionDeleteCompleted;
        
    ///  <remarks/>
        public event smartCredentialDefinitionGetCompletedEventHandler smartCredentialDefinitionGetCompleted;
        
    ///  <remarks/>
        public event smartCredentialDefinitionTemplateGetCompletedEventHandler smartCredentialDefinitionTemplateGetCompleted;
        
    ///  <remarks/>
        public event smartCredentialDefinitionSetCompletedEventHandler smartCredentialDefinitionSetCompleted;
        
    ///  <remarks/>
        public event smartCredentialDefinitionListCompletedEventHandler smartCredentialDefinitionListCompleted;
        
    ///  <remarks/>
        public event smartCredentialDefinitionTemplateListCompletedEventHandler smartCredentialDefinitionTemplateListCompleted;
        
    ///  <remarks/>
        public event smartCredentialVariableCreateCompletedEventHandler smartCredentialVariableCreateCompleted;
        
    ///  <remarks/>
        public event smartCredentialVariableDeleteCompletedEventHandler smartCredentialVariableDeleteCompleted;
        
    ///  <remarks/>
        public event smartCredentialVariableSetCompletedEventHandler smartCredentialVariableSetCompleted;
        
    ///  <remarks/>
        public event smartCredentialDeliveryGetCompletedEventHandler smartCredentialDeliveryGetCompleted;
        
    ///  <remarks/>
        public event smartCredentialDeliveryListCompletedEventHandler smartCredentialDeliveryListCompleted;
        
    ///  <remarks/>
        public event userDeliveryGetCompletedEventHandler userDeliveryGetCompleted;
        
    ///  <remarks/>
        public event userDeliveryListCompletedEventHandler userDeliveryListCompleted;
        
    ///  <remarks/>
        public event smartCredentialAppletCreateCompletedEventHandler smartCredentialAppletCreateCompleted;
        
    ///  <remarks/>
        public event smartCredentialAppletDeleteCompletedEventHandler smartCredentialAppletDeleteCompleted;
        
    ///  <remarks/>
        public event smartCredentialAppletGetCompletedEventHandler smartCredentialAppletGetCompleted;
        
    ///  <remarks/>
        public event smartCredentialAppletSetCompletedEventHandler smartCredentialAppletSetCompleted;
        
    ///  <remarks/>
        public event smartCredentialAppletListCompletedEventHandler smartCredentialAppletListCompleted;
        
    ///  <remarks/>
        public event smartCredentialAppletTemplateGetCompletedEventHandler smartCredentialAppletTemplateGetCompleted;
        
    ///  <remarks/>
        public event smartCredentialAppletTemplateListCompletedEventHandler smartCredentialAppletTemplateListCompleted;
        
    ///  <remarks/>
        public event pacsCreateCompletedEventHandler pacsCreateCompleted;
        
    ///  <remarks/>
        public event pacsDeleteCompletedEventHandler pacsDeleteCompleted;
        
    ///  <remarks/>
        public event pacsGetCompletedEventHandler pacsGetCompleted;
        
    ///  <remarks/>
        public event pacsSetCompletedEventHandler pacsSetCompleted;
        
    ///  <remarks/>
        public event pacsListCompletedEventHandler pacsListCompleted;
        
    ///  <remarks/>
        public event proxyCreateCompletedEventHandler proxyCreateCompleted;
        
    ///  <remarks/>
        public event proxyDeleteCompletedEventHandler proxyDeleteCompleted;
        
    ///  <remarks/>
        public event proxyGetCompletedEventHandler proxyGetCompleted;
        
    ///  <remarks/>
        public event proxySetCompletedEventHandler proxySetCompleted;
        
    ///  <remarks/>
        public event proxyListCompletedEventHandler proxyListCompleted;
        
    ///  <remarks/>
        public event riskEngineGetCompletedEventHandler riskEngineGetCompleted;
        
    ///  <remarks/>
        public event riskEngineListCompletedEventHandler riskEngineListCompleted;
        
    ///  <remarks/>
        public event biometricVendorGetCompletedEventHandler biometricVendorGetCompleted;
        
    ///  <remarks/>
        public event biometricVendorListCompletedEventHandler biometricVendorListCompleted;
        
    ///  <remarks/>
        public event smartCredentialGraphicCreateCompletedEventHandler smartCredentialGraphicCreateCompleted;
        
    ///  <remarks/>
        public event smartCredentialGraphicDeleteCompletedEventHandler smartCredentialGraphicDeleteCompleted;
        
    ///  <remarks/>
        public event smartCredentialGraphicGetCompletedEventHandler smartCredentialGraphicGetCompleted;
        
    ///  <remarks/>
        public event smartCredentialGraphicSetCompletedEventHandler smartCredentialGraphicSetCompleted;
        
    ///  <remarks/>
        public event smartCredentialGraphicListCompletedEventHandler smartCredentialGraphicListCompleted;
        
    ///  <remarks/>
        public event digitalIdConfigCreateCompletedEventHandler digitalIdConfigCreateCompleted;
        
    ///  <remarks/>
        public event digitalIdConfigDeleteCompletedEventHandler digitalIdConfigDeleteCompleted;
        
    ///  <remarks/>
        public event digitalIdConfigGetCompletedEventHandler digitalIdConfigGetCompleted;
        
    ///  <remarks/>
        public event digitalIdConfigSetCompletedEventHandler digitalIdConfigSetCompleted;
        
    ///  <remarks/>
        public event digitalIdConfigListCompletedEventHandler digitalIdConfigListCompleted;
        
    ///  <remarks/>
        public event digitalIdConfigTemplateListCompletedEventHandler digitalIdConfigTemplateListCompleted;
        
    ///  <remarks/>
        public event smartCredentialLayoutCreateCompletedEventHandler smartCredentialLayoutCreateCompleted;
        
    ///  <remarks/>
        public event smartCredentialLayoutDeleteCompletedEventHandler smartCredentialLayoutDeleteCompleted;
        
    ///  <remarks/>
        public event smartCredentialLayoutGetCompletedEventHandler smartCredentialLayoutGetCompleted;
        
    ///  <remarks/>
        public event smartCredentialLayoutTemplateGetCompletedEventHandler smartCredentialLayoutTemplateGetCompleted;
        
    ///  <remarks/>
        public event smartCredentialLayoutSetCompletedEventHandler smartCredentialLayoutSetCompleted;
        
    ///  <remarks/>
        public event smartCredentialLayoutListCompletedEventHandler smartCredentialLayoutListCompleted;
        
    ///  <remarks/>
        public event smartCredentialLayoutTemplateListCompletedEventHandler smartCredentialLayoutTemplateListCompleted;
        
    ///  <remarks/>
        public event smartCredentialPrintModuleCreateCompletedEventHandler smartCredentialPrintModuleCreateCompleted;
        
    ///  <remarks/>
        public event smartCredentialPrintModuleDeleteCompletedEventHandler smartCredentialPrintModuleDeleteCompleted;
        
    ///  <remarks/>
        public event smartCredentialPrintModuleGetCompletedEventHandler smartCredentialPrintModuleGetCompleted;
        
    ///  <remarks/>
        public event smartCredentialPrintModuleSetCompletedEventHandler smartCredentialPrintModuleSetCompleted;
        
    ///  <remarks/>
        public event smartCredentialPrintModuleListCompletedEventHandler smartCredentialPrintModuleListCompleted;
        
    ///  <remarks/>
        public event smartCredentialPrintModuleWipeCompletedEventHandler smartCredentialPrintModuleWipeCompleted;
        
    ///  <remarks/>
        public event repositoryGetCompletedEventHandler repositoryGetCompleted;
        
    ///  <remarks/>
        public event repositoryListCompletedEventHandler repositoryListCompleted;
        
    ///  <remarks/>
        public event userCreateCompletedEventHandler userCreateCompleted;
        
    ///  <remarks/>
        public event userDeleteCompletedEventHandler userDeleteCompleted;
        
    ///  <remarks/>
        public event userDeliverCompletedEventHandler userDeliverCompleted;
        
    ///  <remarks/>
        public event userGetCompletedEventHandler userGetCompleted;
        
    ///  <remarks/>
        public event userSetCompletedEventHandler userSetCompleted;
        
    ///  <remarks/>
        public event userListCompletedEventHandler userListCompleted;
        
    ///  <remarks/>
        public event userLockoutGetCompletedEventHandler userLockoutGetCompleted;
        
    ///  <remarks/>
        public event userLockoutSetCompletedEventHandler userLockoutSetCompleted;
        
    ///  <remarks/>
        public event userEnrollListCompletedEventHandler userEnrollListCompleted;
        
    ///  <remarks/>
        public event deliveryConfigListCompletedEventHandler deliveryConfigListCompleted;
        
    ///  <remarks/>
        public event userContactInfoCreateCompletedEventHandler userContactInfoCreateCompleted;
        
    ///  <remarks/>
        public event userContactInfoDeleteCompletedEventHandler userContactInfoDeleteCompleted;
        
    ///  <remarks/>
        public event userContactInfoGetCompletedEventHandler userContactInfoGetCompleted;
        
    ///  <remarks/>
        public event userContactInfoSetCompletedEventHandler userContactInfoSetCompleted;
        
    ///  <remarks/>
        public event userPINCreateCompletedEventHandler userPINCreateCompleted;
        
    ///  <remarks/>
        public event userPINDeleteCompletedEventHandler userPINDeleteCompleted;
        
    ///  <remarks/>
        public event userPINDeliverCompletedEventHandler userPINDeliverCompleted;
        
    ///  <remarks/>
        public event userPINGetCompletedEventHandler userPINGetCompleted;
        
    ///  <remarks/>
        public event userPINSetCompletedEventHandler userPINSetCompleted;
        
    ///  <remarks/>
        public event userMachineSecretCreateCompletedEventHandler userMachineSecretCreateCompleted;
        
    ///  <remarks/>
        public event userMachineSecretDeleteCompletedEventHandler userMachineSecretDeleteCompleted;
        
    ///  <remarks/>
        public event userMachineSecretGetCompletedEventHandler userMachineSecretGetCompleted;
        
    ///  <remarks/>
        public event userMachineSecretSetCompletedEventHandler userMachineSecretSetCompleted;
        
    ///  <remarks/>
        public event userMachineSecretListCompletedEventHandler userMachineSecretListCompleted;
        
    ///  <remarks/>
        public event userPreferenceCreateCompletedEventHandler userPreferenceCreateCompleted;
        
    ///  <remarks/>
        public event userPreferenceDeleteCompletedEventHandler userPreferenceDeleteCompleted;
        
    ///  <remarks/>
        public event userPreferenceGetCompletedEventHandler userPreferenceGetCompleted;
        
    ///  <remarks/>
        public event userPreferenceSetCompletedEventHandler userPreferenceSetCompleted;
        
    ///  <remarks/>
        public event userPreferenceListCompletedEventHandler userPreferenceListCompleted;
        
    ///  <remarks/>
        public event userOTPCreateCompletedEventHandler userOTPCreateCompleted;
        
    ///  <remarks/>
        public event userOTPDeleteCompletedEventHandler userOTPDeleteCompleted;
        
    ///  <remarks/>
        public event userOTPDeliverCompletedEventHandler userOTPDeliverCompleted;
        
    ///  <remarks/>
        public event userOTPGetCompletedEventHandler userOTPGetCompleted;
        
    ///  <remarks/>
        public event userOTPSetCompletedEventHandler userOTPSetCompleted;
        
    ///  <remarks/>
        public event userPasswordCreateCompletedEventHandler userPasswordCreateCompleted;
        
    ///  <remarks/>
        public event userPasswordSetCompletedEventHandler userPasswordSetCompleted;
        
    ///  <remarks/>
        public event userPasswordGetCompletedEventHandler userPasswordGetCompleted;
        
    ///  <remarks/>
        public event userPasswordListCompletedEventHandler userPasswordListCompleted;
        
    ///  <remarks/>
        public event userPasswordDeleteCompletedEventHandler userPasswordDeleteCompleted;
        
    ///  <remarks/>
        public event userPasswordDeliverCompletedEventHandler userPasswordDeliverCompleted;
        
    ///  <remarks/>
        public event userPVNCreateCompletedEventHandler userPVNCreateCompleted;
        
    ///  <remarks/>
        public event userPVNSetCompletedEventHandler userPVNSetCompleted;
        
    ///  <remarks/>
        public event userPVNDeleteCompletedEventHandler userPVNDeleteCompleted;
        
    ///  <remarks/>
        public event userPVNDeliverCompletedEventHandler userPVNDeliverCompleted;
        
    ///  <remarks/>
        public event userPVNGetCompletedEventHandler userPVNGetCompleted;
        
    ///  <remarks/>
        public event userCardCreateCompletedEventHandler userCardCreateCompleted;
        
    ///  <remarks/>
        public event userCardDeleteCompletedEventHandler userCardDeleteCompleted;
        
    ///  <remarks/>
        public event userCardDeliverCompletedEventHandler userCardDeliverCompleted;
        
    ///  <remarks/>
        public event userCardGetCompletedEventHandler userCardGetCompleted;
        
    ///  <remarks/>
        public event userCardSetCompletedEventHandler userCardSetCompleted;
        
    ///  <remarks/>
        public event userCardUnassignCompletedEventHandler userCardUnassignCompleted;
        
    ///  <remarks/>
        public event userCardListCompletedEventHandler userCardListCompleted;
        
    ///  <remarks/>
        public event userCardExportCompletedEventHandler userCardExportCompleted;
        
    ///  <remarks/>
        public event userTokenAssignCompletedEventHandler userTokenAssignCompleted;
        
    ///  <remarks/>
        public event userTokenCreateCompletedEventHandler userTokenCreateCompleted;
        
    ///  <remarks/>
        public event userTokenDeleteCompletedEventHandler userTokenDeleteCompleted;
        
    ///  <remarks/>
        public event userTokenGetCompletedEventHandler userTokenGetCompleted;
        
    ///  <remarks/>
        public event userTokenSetCompletedEventHandler userTokenSetCompleted;
        
    ///  <remarks/>
        public event userTokenUnassignCompletedEventHandler userTokenUnassignCompleted;
        
    ///  <remarks/>
        public event userTokenChallengeGetCompletedEventHandler userTokenChallengeGetCompleted;
        
    ///  <remarks/>
        public event userTokenAuthenticateCompletedEventHandler userTokenAuthenticateCompleted;
        
    ///  <remarks/>
        public event userTokenChallengeAuthenticateCompletedEventHandler userTokenChallengeAuthenticateCompleted;
        
    ///  <remarks/>
        public event userTokenUnlockCompletedEventHandler userTokenUnlockCompleted;
        
    ///  <remarks/>
        public event userTokenUnlockExCompletedEventHandler userTokenUnlockExCompleted;
        
    ///  <remarks/>
        public event userTokenResponseGetCompletedEventHandler userTokenResponseGetCompleted;
        
    ///  <remarks/>
        public event userTokenActivateCompletedEventHandler userTokenActivateCompleted;
        
    ///  <remarks/>
        public event userTokenActivateExCompletedEventHandler userTokenActivateExCompleted;
        
    ///  <remarks/>
        public event userTokenActivateCompleteCompletedEventHandler userTokenActivateCompleteCompleted;
        
    ///  <remarks/>
        public event userTokenTransactionValidateCompletedEventHandler userTokenTransactionValidateCompleted;
        
    ///  <remarks/>
        public event userTokenListCompletedEventHandler userTokenListCompleted;
        
    ///  <remarks/>
        public event userBiometricCreateCompletedEventHandler userBiometricCreateCompleted;
        
    ///  <remarks/>
        public event userBiometricDeleteCompletedEventHandler userBiometricDeleteCompleted;
        
    ///  <remarks/>
        public event userBiometricGetCompletedEventHandler userBiometricGetCompleted;
        
    ///  <remarks/>
        public event userBiometricSetCompletedEventHandler userBiometricSetCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialCreateCompletedEventHandler userSmartCredentialCreateCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialCreateExCompletedEventHandler userSmartCredentialCreateExCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialDeleteCompletedEventHandler userSmartCredentialDeleteCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialGetCompletedEventHandler userSmartCredentialGetCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialGetExCompletedEventHandler userSmartCredentialGetExCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialChallengeGetCompletedEventHandler userSmartCredentialChallengeGetCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialChallengeAuthenticateCompletedEventHandler userSmartCredentialChallengeAuthenticateCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialChallengeCompletedEventHandler userSmartCredentialChallengeCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialValidateCompletedEventHandler userSmartCredentialValidateCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialTransactionValidateCompletedEventHandler userSmartCredentialTransactionValidateCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialSignStartCompletedEventHandler userSmartCredentialSignStartCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialSignCompleteCompletedEventHandler userSmartCredentialSignCompleteCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialSetCompletedEventHandler userSmartCredentialSetCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialSetExCompletedEventHandler userSmartCredentialSetExCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialUnblockCompletedEventHandler userSmartCredentialUnblockCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialDigitalIdCreateRecoverCompletedEventHandler userSmartCredentialDigitalIdCreateRecoverCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialDigitalIdCreateRecoverExCompletedEventHandler userSmartCredentialDigitalIdCreateRecoverExCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialTokenCreateCompletedEventHandler userSmartCredentialTokenCreateCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialPACSGetCompletedEventHandler userSmartCredentialPACSGetCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialPACSRegisterCompletedEventHandler userSmartCredentialPACSRegisterCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialPACSSuspendCompletedEventHandler userSmartCredentialPACSSuspendCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialUnassignCompletedEventHandler userSmartCredentialUnassignCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialCancelCompletedEventHandler userSmartCredentialCancelCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialHoldCompletedEventHandler userSmartCredentialHoldCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialUnholdCompletedEventHandler userSmartCredentialUnholdCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialIssueCompletedEventHandler userSmartCredentialIssueCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialDeliverCompletedEventHandler userSmartCredentialDeliverCompleted;
        
    ///  <remarks/>
        public event userSmartCredentialListCompletedEventHandler userSmartCredentialListCompleted;
        
    ///  <remarks/>
        public event userDigitalIdCreateRecoverPolicyGetCompletedEventHandler userDigitalIdCreateRecoverPolicyGetCompleted;
        
    ///  <remarks/>
        public event userDigitalIdCreateRecoverCompletedEventHandler userDigitalIdCreateRecoverCompleted;
        
    ///  <remarks/>
        public event userDigitalIdDeleteCompletedEventHandler userDigitalIdDeleteCompleted;
        
    ///  <remarks/>
        public event userDigitalIdSetCompletedEventHandler userDigitalIdSetCompleted;
        
    ///  <remarks/>
        public event userDigitalIdGetCompletedEventHandler userDigitalIdGetCompleted;
        
    ///  <remarks/>
        public event userDigitalIdCancelCompletedEventHandler userDigitalIdCancelCompleted;
        
    ///  <remarks/>
        public event userDigitalIdHoldCompletedEventHandler userDigitalIdHoldCompleted;
        
    ///  <remarks/>
        public event userDigitalIdUnholdCompletedEventHandler userDigitalIdUnholdCompleted;
        
    ///  <remarks/>
        public event userDigitalIdListCompletedEventHandler userDigitalIdListCompleted;
        
    ///  <remarks/>
        public event userCertificateAssignCompletedEventHandler userCertificateAssignCompleted;
        
    ///  <remarks/>
        public event userCertificateAssignVerifyCompletedEventHandler userCertificateAssignVerifyCompleted;
        
    ///  <remarks/>
        public event userCertificateExportCompletedEventHandler userCertificateExportCompleted;
        
    ///  <remarks/>
        public event userCertificateDeleteCompletedEventHandler userCertificateDeleteCompleted;
        
    ///  <remarks/>
        public event userCertificateGetCompletedEventHandler userCertificateGetCompleted;
        
    ///  <remarks/>
        public event userCertificateSetCompletedEventHandler userCertificateSetCompleted;
        
    ///  <remarks/>
        public event userCertificateChallengeCompletedEventHandler userCertificateChallengeCompleted;
        
    ///  <remarks/>
        public event userCertificateAuthenticateCompletedEventHandler userCertificateAuthenticateCompleted;
        
    ///  <remarks/>
        public event userCertificateListCompletedEventHandler userCertificateListCompleted;
        
    ///  <remarks/>
        public event preproducedCardCreateCompletedEventHandler preproducedCardCreateCompleted;
        
    ///  <remarks/>
        public event preproducedCardDeleteCompletedEventHandler preproducedCardDeleteCompleted;
        
    ///  <remarks/>
        public event preproducedCardGetCompletedEventHandler preproducedCardGetCompleted;
        
    ///  <remarks/>
        public event preproducedCardSetCompletedEventHandler preproducedCardSetCompleted;
        
    ///  <remarks/>
        public event preproducedCardListCompletedEventHandler preproducedCardListCompleted;
        
    ///  <remarks/>
        public event preproducedCardExportCompletedEventHandler preproducedCardExportCompleted;
        
    ///  <remarks/>
        public event tokenLoadCompletedEventHandler tokenLoadCompleted;
        
    ///  <remarks/>
        public event tokenDeleteCompletedEventHandler tokenDeleteCompleted;
        
    ///  <remarks/>
        public event tokenInitializeStartCompletedEventHandler tokenInitializeStartCompleted;
        
    ///  <remarks/>
        public event tokenInitializeCompleteCompletedEventHandler tokenInitializeCompleteCompleted;
        
    ///  <remarks/>
        public event tokenInitializeCancelCompletedEventHandler tokenInitializeCancelCompleted;
        
    ///  <remarks/>
        public event tokenGetCompletedEventHandler tokenGetCompleted;
        
    ///  <remarks/>
        public event tokenSetCompletedEventHandler tokenSetCompleted;
        
    ///  <remarks/>
        public event tokenListCompletedEventHandler tokenListCompleted;
        
    ///  <remarks/>
        public event smartCredentialLoadCompletedEventHandler smartCredentialLoadCompleted;
        
    ///  <remarks/>
        public event smartCredentialDeleteCompletedEventHandler smartCredentialDeleteCompleted;
        
    ///  <remarks/>
        public event smartCredentialGetCompletedEventHandler smartCredentialGetCompleted;
        
    ///  <remarks/>
        public event smartCredentialChallengeGetCompletedEventHandler smartCredentialChallengeGetCompleted;
        
    ///  <remarks/>
        public event smartCredentialChallengeAuthenticateCompletedEventHandler smartCredentialChallengeAuthenticateCompleted;
        
    ///  <remarks/>
        public event smartCredentialSetCompletedEventHandler smartCredentialSetCompleted;
        
    ///  <remarks/>
        public event smartCredentialListCompletedEventHandler smartCredentialListCompleted;
        
    ///  <remarks/>
        public event challengeGetCompletedEventHandler challengeGetCompleted;
        
    ///  <remarks/>
        public event challengeAuthenticateCompletedEventHandler challengeAuthenticateCompleted;
        
    ///  <remarks/>
        public event ipListAddCompletedEventHandler ipListAddCompleted;
        
    ///  <remarks/>
        public event ipListDeleteCompletedEventHandler ipListDeleteCompleted;
        
    ///  <remarks/>
        public event ipListGetCompletedEventHandler ipListGetCompleted;
        
    ///  <remarks/>
        public event ipListListCompletedEventHandler ipListListCompleted;
        
    ///  <remarks/>
        public event auditGetCompletedEventHandler auditGetCompleted;
        
    ///  <remarks/>
        public event auditListCompletedEventHandler auditListCompleted;
        
    ///  <remarks/>
        public event auditCreateCompletedEventHandler auditCreateCompleted;
        
    ///  <remarks/>
        public event auditDeleteCompletedEventHandler auditDeleteCompleted;
        
    ///  <remarks/>
        public event transactionCertificateGetCompletedEventHandler transactionCertificateGetCompleted;
        
    ///  <remarks/>
        public event transactionCertificateListCompletedEventHandler transactionCertificateListCompleted;
        
    ///  <remarks/>
        public event transactionCertificateCreateCompletedEventHandler transactionCertificateCreateCompleted;
        
    ///  <remarks/>
        public event transactionCertificateDeleteCompletedEventHandler transactionCertificateDeleteCompleted;
        
    ///  <remarks/>
        public event transactionCertificateSetCompletedEventHandler transactionCertificateSetCompleted;
        
    ///  <remarks/>
        public event transactionCertificateExportCompletedEventHandler transactionCertificateExportCompleted;
        
    ///  <remarks/>
        public event transactionCertificateImportVerifyCompletedEventHandler transactionCertificateImportVerifyCompleted;
        
    ///  <remarks/>
        public event transactionCertificateImportCompletedEventHandler transactionCertificateImportCompleted;
        
    ///  <remarks/>
        public event caCertificateGetCompletedEventHandler caCertificateGetCompleted;
        
    ///  <remarks/>
        public event caCertificateListCompletedEventHandler caCertificateListCompleted;
        
    ///  <remarks/>
        public event caCertificateValidateCompletedEventHandler caCertificateValidateCompleted;
        
    ///  <remarks/>
        public event caCertificateLDAPGetCompletedEventHandler caCertificateLDAPGetCompleted;
        
    ///  <remarks/>
        public event caCertificateLoadCompletedEventHandler caCertificateLoadCompleted;
        
    ///  <remarks/>
        public event caCertificateDeleteCompletedEventHandler caCertificateDeleteCompleted;
        
    ///  <remarks/>
        public event caCertificateSetCompletedEventHandler caCertificateSetCompleted;
        
    ///  <remarks/>
        public event caCertificateExportCompletedEventHandler caCertificateExportCompleted;
        
    ///  <remarks/>
        public event caCertificateLoadVerifyCompletedEventHandler caCertificateLoadVerifyCompleted;
        
    ///  <remarks/>
        public event reportDefinitionGetCompletedEventHandler reportDefinitionGetCompleted;
        
    ///  <remarks/>
        public event reportDefinitionListCompletedEventHandler reportDefinitionListCompleted;
        
    ///  <remarks/>
        public event reportCreateCompletedEventHandler reportCreateCompleted;
        
    ///  <remarks/>
        public event reportGetCompletedEventHandler reportGetCompleted;
        
    ///  <remarks/>
        public event reportListCompletedEventHandler reportListCompleted;
        
    ///  <remarks/>
        public event reportDeleteCompletedEventHandler reportDeleteCompleted;
        
    ///  <remarks/>
        public event userFederationCreateCompletedEventHandler userFederationCreateCompleted;
        
    ///  <remarks/>
        public event userFederationDeleteCompletedEventHandler userFederationDeleteCompleted;
        
    ///  <remarks/>
        public event userFederationGetCompletedEventHandler userFederationGetCompleted;
        
    ///  <remarks/>
        public event userFederationSetCompletedEventHandler userFederationSetCompleted;
        
    ///  <remarks/>
        public event userFederationListCompletedEventHandler userFederationListCompleted;
        
    ///  <remarks/>
        public event managedCaCreateCompletedEventHandler managedCaCreateCompleted;
        
    ///  <remarks/>
        public event managedCaDeleteCompletedEventHandler managedCaDeleteCompleted;
        
    ///  <remarks/>
        public event managedCaGetCompletedEventHandler managedCaGetCompleted;
        
    ///  <remarks/>
        public event managedCaSetCompletedEventHandler managedCaSetCompleted;
        
    ///  <remarks/>
        public event managedCaListCompletedEventHandler managedCaListCompleted;
        
    ///  <remarks/>
        public event managedCaPivSignContentCompletedEventHandler managedCaPivSignContentCompleted;
        
    ///  <remarks/>
        public event isMicrosoftCaSupportAvailableCompletedEventHandler isMicrosoftCaSupportAvailableCompleted;
        
    ///  <remarks/>
        public event managedCaIsCertRevokedCompletedEventHandler managedCaIsCertRevokedCompleted;
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("loginReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public LoginResult login([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] LoginCallParms loginCallParms) {
            object[] results = this.Invoke("login", new object[] {
                        loginCallParms});
            return ((LoginResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult Beginlogin(LoginCallParms loginCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("login", new object[] {
                        loginCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public LoginResult Endlogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LoginResult)(results[0]));
        }
        
    ///  <remarks/>
        public void loginAsync(LoginCallParms loginCallParms) {
            this.loginAsync(loginCallParms, null);
        }
        
    ///  <remarks/>
        public void loginAsync(LoginCallParms loginCallParms, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        loginCallParms}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void logout() {
            this.Invoke("logout", new object[0]);
        }
        
    ///  <remarks/>
        public System.IAsyncResult Beginlogout(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("logout", new object[0], callback, asyncState);
        }
        
    ///  <remarks/>
        public void Endlogout(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void logoutAsync() {
            this.logoutAsync(null);
        }
        
    ///  <remarks/>
        public void logoutAsync(object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[0], this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("changePasswordReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public LoginResult changePassword([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ChangePasswordCallParms changePasswordCallParms) {
            object[] results = this.Invoke("changePassword", new object[] {
                        changePasswordCallParms});
            return ((LoginResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginchangePassword(ChangePasswordCallParms changePasswordCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("changePassword", new object[] {
                        changePasswordCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public LoginResult EndchangePassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LoginResult)(results[0]));
        }
        
    ///  <remarks/>
        public void changePasswordAsync(ChangePasswordCallParms changePasswordCallParms) {
            this.changePasswordAsync(changePasswordCallParms, null);
        }
        
    ///  <remarks/>
        public void changePasswordAsync(ChangePasswordCallParms changePasswordCallParms, object userState) {
            if ((this.changePasswordOperationCompleted == null)) {
                this.changePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePasswordOperationCompleted);
            }
            this.InvokeAsync("changePassword", new object[] {
                        changePasswordCallParms}, this.changePasswordOperationCompleted, userState);
        }
        
        private void OnchangePasswordOperationCompleted(object arg) {
            if ((this.changePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePasswordCompleted(this, new changePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void keepAlive([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] keepAliveCallParms) {
            this.Invoke("keepAlive", new object[] {
                        keepAliveCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginkeepAlive(NameValue[] keepAliveCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("keepAlive", new object[] {
                        keepAliveCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndkeepAlive(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void keepAliveAsync(NameValue[] keepAliveCallParms) {
            this.keepAliveAsync(keepAliveCallParms, null);
        }
        
    ///  <remarks/>
        public void keepAliveAsync(NameValue[] keepAliveCallParms, object userState) {
            if ((this.keepAliveOperationCompleted == null)) {
                this.keepAliveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnkeepAliveOperationCompleted);
            }
            this.InvokeAsync("keepAlive", new object[] {
                        keepAliveCallParms}, this.keepAliveOperationCompleted, userState);
        }
        
        private void OnkeepAliveOperationCompleted(object arg) {
            if ((this.keepAliveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.keepAliveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void ping([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] pingCallParms) {
            this.Invoke("ping", new object[] {
                        pingCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult Beginping(NameValue[] pingCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ping", new object[] {
                        pingCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void Endping(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void pingAsync(NameValue[] pingCallParms) {
            this.pingAsync(pingCallParms, null);
        }
        
    ///  <remarks/>
        public void pingAsync(NameValue[] pingCallParms, object userState) {
            if ((this.pingOperationCompleted == null)) {
                this.pingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpingOperationCompleted);
            }
            this.InvokeAsync("ping", new object[] {
                        pingCallParms}, this.pingOperationCompleted, userState);
        }
        
        private void OnpingOperationCompleted(object arg) {
            if ((this.pingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("versionGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public VersionInfo versionGet([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] versionGetCallParms) {
            object[] results = this.Invoke("versionGet", new object[] {
                        versionGetCallParms});
            return ((VersionInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginversionGet(NameValue[] versionGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("versionGet", new object[] {
                        versionGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public VersionInfo EndversionGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VersionInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void versionGetAsync(NameValue[] versionGetCallParms) {
            this.versionGetAsync(versionGetCallParms, null);
        }
        
    ///  <remarks/>
        public void versionGetAsync(NameValue[] versionGetCallParms, object userState) {
            if ((this.versionGetOperationCompleted == null)) {
                this.versionGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnversionGetOperationCompleted);
            }
            this.InvokeAsync("versionGet", new object[] {
                        versionGetCallParms}, this.versionGetOperationCompleted, userState);
        }
        
        private void OnversionGetOperationCompleted(object arg) {
            if ((this.versionGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.versionGetCompleted(this, new versionGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("licenseGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public LicenseInfo licenseGet([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] licenseGetCallParms) {
            object[] results = this.Invoke("licenseGet", new object[] {
                        licenseGetCallParms});
            return ((LicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginlicenseGet(NameValue[] licenseGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("licenseGet", new object[] {
                        licenseGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public LicenseInfo EndlicenseGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void licenseGetAsync(NameValue[] licenseGetCallParms) {
            this.licenseGetAsync(licenseGetCallParms, null);
        }
        
    ///  <remarks/>
        public void licenseGetAsync(NameValue[] licenseGetCallParms, object userState) {
            if ((this.licenseGetOperationCompleted == null)) {
                this.licenseGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlicenseGetOperationCompleted);
            }
            this.InvokeAsync("licenseGet", new object[] {
                        licenseGetCallParms}, this.licenseGetOperationCompleted, userState);
        }
        
        private void OnlicenseGetOperationCompleted(object arg) {
            if ((this.licenseGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.licenseGetCompleted(this, new licenseGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("licenseGetExReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public LicenseInfoEx[] licenseGetEx([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] licenseGetExCallParms) {
            object[] results = this.Invoke("licenseGetEx", new object[] {
                        licenseGetExCallParms});
            return ((LicenseInfoEx[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginlicenseGetEx(NameValue[] licenseGetExCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("licenseGetEx", new object[] {
                        licenseGetExCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public LicenseInfoEx[] EndlicenseGetEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LicenseInfoEx[])(results[0]));
        }
        
    ///  <remarks/>
        public void licenseGetExAsync(NameValue[] licenseGetExCallParms) {
            this.licenseGetExAsync(licenseGetExCallParms, null);
        }
        
    ///  <remarks/>
        public void licenseGetExAsync(NameValue[] licenseGetExCallParms, object userState) {
            if ((this.licenseGetExOperationCompleted == null)) {
                this.licenseGetExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlicenseGetExOperationCompleted);
            }
            this.InvokeAsync("licenseGetEx", new object[] {
                        licenseGetExCallParms}, this.licenseGetExOperationCompleted, userState);
        }
        
        private void OnlicenseGetExOperationCompleted(object arg) {
            if ((this.licenseGetExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.licenseGetExCompleted(this, new licenseGetExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("licenseSetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public LicenseInfo licenseSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] LicenseSetCallParms licenseSetCallParms) {
            object[] results = this.Invoke("licenseSet", new object[] {
                        licenseSetCallParms});
            return ((LicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginlicenseSet(LicenseSetCallParms licenseSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("licenseSet", new object[] {
                        licenseSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public LicenseInfo EndlicenseSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void licenseSetAsync(LicenseSetCallParms licenseSetCallParms) {
            this.licenseSetAsync(licenseSetCallParms, null);
        }
        
    ///  <remarks/>
        public void licenseSetAsync(LicenseSetCallParms licenseSetCallParms, object userState) {
            if ((this.licenseSetOperationCompleted == null)) {
                this.licenseSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlicenseSetOperationCompleted);
            }
            this.InvokeAsync("licenseSet", new object[] {
                        licenseSetCallParms}, this.licenseSetOperationCompleted, userState);
        }
        
        private void OnlicenseSetOperationCompleted(object arg) {
            if ((this.licenseSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.licenseSetCompleted(this, new licenseSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("licenseCheckReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public LicenseInfo licenseCheck([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] LicenseCheckCallParms licenseCheckCallParms) {
            object[] results = this.Invoke("licenseCheck", new object[] {
                        licenseCheckCallParms});
            return ((LicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginlicenseCheck(LicenseCheckCallParms licenseCheckCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("licenseCheck", new object[] {
                        licenseCheckCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public LicenseInfo EndlicenseCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void licenseCheckAsync(LicenseCheckCallParms licenseCheckCallParms) {
            this.licenseCheckAsync(licenseCheckCallParms, null);
        }
        
    ///  <remarks/>
        public void licenseCheckAsync(LicenseCheckCallParms licenseCheckCallParms, object userState) {
            if ((this.licenseCheckOperationCompleted == null)) {
                this.licenseCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlicenseCheckOperationCompleted);
            }
            this.InvokeAsync("licenseCheck", new object[] {
                        licenseCheckCallParms}, this.licenseCheckOperationCompleted, userState);
        }
        
        private void OnlicenseCheckOperationCompleted(object arg) {
            if ((this.licenseCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.licenseCheckCompleted(this, new licenseCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("licenseSetExReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public LicenseInfoEx[] licenseSetEx([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] LicenseSetExCallParms licenseSetExCallParms) {
            object[] results = this.Invoke("licenseSetEx", new object[] {
                        licenseSetExCallParms});
            return ((LicenseInfoEx[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginlicenseSetEx(LicenseSetExCallParms licenseSetExCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("licenseSetEx", new object[] {
                        licenseSetExCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public LicenseInfoEx[] EndlicenseSetEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LicenseInfoEx[])(results[0]));
        }
        
    ///  <remarks/>
        public void licenseSetExAsync(LicenseSetExCallParms licenseSetExCallParms) {
            this.licenseSetExAsync(licenseSetExCallParms, null);
        }
        
    ///  <remarks/>
        public void licenseSetExAsync(LicenseSetExCallParms licenseSetExCallParms, object userState) {
            if ((this.licenseSetExOperationCompleted == null)) {
                this.licenseSetExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlicenseSetExOperationCompleted);
            }
            this.InvokeAsync("licenseSetEx", new object[] {
                        licenseSetExCallParms}, this.licenseSetExOperationCompleted, userState);
        }
        
        private void OnlicenseSetExOperationCompleted(object arg) {
            if ((this.licenseSetExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.licenseSetExCompleted(this, new licenseSetExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("licenseCheckExReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public LicenseInfoEx[] licenseCheckEx([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] LicenseCheckExCallParms licenseCheckExCallParms) {
            object[] results = this.Invoke("licenseCheckEx", new object[] {
                        licenseCheckExCallParms});
            return ((LicenseInfoEx[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginlicenseCheckEx(LicenseCheckExCallParms licenseCheckExCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("licenseCheckEx", new object[] {
                        licenseCheckExCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public LicenseInfoEx[] EndlicenseCheckEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LicenseInfoEx[])(results[0]));
        }
        
    ///  <remarks/>
        public void licenseCheckExAsync(LicenseCheckExCallParms licenseCheckExCallParms) {
            this.licenseCheckExAsync(licenseCheckExCallParms, null);
        }
        
    ///  <remarks/>
        public void licenseCheckExAsync(LicenseCheckExCallParms licenseCheckExCallParms, object userState) {
            if ((this.licenseCheckExOperationCompleted == null)) {
                this.licenseCheckExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlicenseCheckExOperationCompleted);
            }
            this.InvokeAsync("licenseCheckEx", new object[] {
                        licenseCheckExCallParms}, this.licenseCheckExOperationCompleted, userState);
        }
        
        private void OnlicenseCheckExOperationCompleted(object arg) {
            if ((this.licenseCheckExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.licenseCheckExCompleted(this, new licenseCheckExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("tokenLicenseGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public TokenLicenseInfo tokenLicenseGet([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] tokenLicenseGetCallParms) {
            object[] results = this.Invoke("tokenLicenseGet", new object[] {
                        tokenLicenseGetCallParms});
            return ((TokenLicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintokenLicenseGet(NameValue[] tokenLicenseGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("tokenLicenseGet", new object[] {
                        tokenLicenseGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public TokenLicenseInfo EndtokenLicenseGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TokenLicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void tokenLicenseGetAsync(NameValue[] tokenLicenseGetCallParms) {
            this.tokenLicenseGetAsync(tokenLicenseGetCallParms, null);
        }
        
    ///  <remarks/>
        public void tokenLicenseGetAsync(NameValue[] tokenLicenseGetCallParms, object userState) {
            if ((this.tokenLicenseGetOperationCompleted == null)) {
                this.tokenLicenseGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OntokenLicenseGetOperationCompleted);
            }
            this.InvokeAsync("tokenLicenseGet", new object[] {
                        tokenLicenseGetCallParms}, this.tokenLicenseGetOperationCompleted, userState);
        }
        
        private void OntokenLicenseGetOperationCompleted(object arg) {
            if ((this.tokenLicenseGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tokenLicenseGetCompleted(this, new tokenLicenseGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("tokenLicenseSetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public TokenLicenseInfo tokenLicenseSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TokenLicenseSetCallParms tokenLicenseSetCallParms) {
            object[] results = this.Invoke("tokenLicenseSet", new object[] {
                        tokenLicenseSetCallParms});
            return ((TokenLicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintokenLicenseSet(TokenLicenseSetCallParms tokenLicenseSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("tokenLicenseSet", new object[] {
                        tokenLicenseSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public TokenLicenseInfo EndtokenLicenseSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TokenLicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void tokenLicenseSetAsync(TokenLicenseSetCallParms tokenLicenseSetCallParms) {
            this.tokenLicenseSetAsync(tokenLicenseSetCallParms, null);
        }
        
    ///  <remarks/>
        public void tokenLicenseSetAsync(TokenLicenseSetCallParms tokenLicenseSetCallParms, object userState) {
            if ((this.tokenLicenseSetOperationCompleted == null)) {
                this.tokenLicenseSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OntokenLicenseSetOperationCompleted);
            }
            this.InvokeAsync("tokenLicenseSet", new object[] {
                        tokenLicenseSetCallParms}, this.tokenLicenseSetOperationCompleted, userState);
        }
        
        private void OntokenLicenseSetOperationCompleted(object arg) {
            if ((this.tokenLicenseSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tokenLicenseSetCompleted(this, new tokenLicenseSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("tokenLicenseCheckReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public TokenLicenseInfo tokenLicenseCheck([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TokenLicenseCheckCallParms tokenLicenseCheckCallParms) {
            object[] results = this.Invoke("tokenLicenseCheck", new object[] {
                        tokenLicenseCheckCallParms});
            return ((TokenLicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintokenLicenseCheck(TokenLicenseCheckCallParms tokenLicenseCheckCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("tokenLicenseCheck", new object[] {
                        tokenLicenseCheckCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public TokenLicenseInfo EndtokenLicenseCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TokenLicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void tokenLicenseCheckAsync(TokenLicenseCheckCallParms tokenLicenseCheckCallParms) {
            this.tokenLicenseCheckAsync(tokenLicenseCheckCallParms, null);
        }
        
    ///  <remarks/>
        public void tokenLicenseCheckAsync(TokenLicenseCheckCallParms tokenLicenseCheckCallParms, object userState) {
            if ((this.tokenLicenseCheckOperationCompleted == null)) {
                this.tokenLicenseCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OntokenLicenseCheckOperationCompleted);
            }
            this.InvokeAsync("tokenLicenseCheck", new object[] {
                        tokenLicenseCheckCallParms}, this.tokenLicenseCheckOperationCompleted, userState);
        }
        
        private void OntokenLicenseCheckOperationCompleted(object arg) {
            if ((this.tokenLicenseCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tokenLicenseCheckCompleted(this, new tokenLicenseCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialLicenseGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialLicenseInfo smartCredentialLicenseGet([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] smartCredentialLicenseGetCallParms) {
            object[] results = this.Invoke("smartCredentialLicenseGet", new object[] {
                        smartCredentialLicenseGetCallParms});
            return ((SmartCredentialLicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialLicenseGet(NameValue[] smartCredentialLicenseGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialLicenseGet", new object[] {
                        smartCredentialLicenseGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialLicenseInfo EndsmartCredentialLicenseGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialLicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialLicenseGetAsync(NameValue[] smartCredentialLicenseGetCallParms) {
            this.smartCredentialLicenseGetAsync(smartCredentialLicenseGetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialLicenseGetAsync(NameValue[] smartCredentialLicenseGetCallParms, object userState) {
            if ((this.smartCredentialLicenseGetOperationCompleted == null)) {
                this.smartCredentialLicenseGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialLicenseGetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialLicenseGet", new object[] {
                        smartCredentialLicenseGetCallParms}, this.smartCredentialLicenseGetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialLicenseGetOperationCompleted(object arg) {
            if ((this.smartCredentialLicenseGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialLicenseGetCompleted(this, new smartCredentialLicenseGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialLicenseSetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialLicenseInfo smartCredentialLicenseSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialLicenseSetCallParms smartCredentialLicenseSetCallParms) {
            object[] results = this.Invoke("smartCredentialLicenseSet", new object[] {
                        smartCredentialLicenseSetCallParms});
            return ((SmartCredentialLicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialLicenseSet(SmartCredentialLicenseSetCallParms smartCredentialLicenseSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialLicenseSet", new object[] {
                        smartCredentialLicenseSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialLicenseInfo EndsmartCredentialLicenseSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialLicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialLicenseSetAsync(SmartCredentialLicenseSetCallParms smartCredentialLicenseSetCallParms) {
            this.smartCredentialLicenseSetAsync(smartCredentialLicenseSetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialLicenseSetAsync(SmartCredentialLicenseSetCallParms smartCredentialLicenseSetCallParms, object userState) {
            if ((this.smartCredentialLicenseSetOperationCompleted == null)) {
                this.smartCredentialLicenseSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialLicenseSetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialLicenseSet", new object[] {
                        smartCredentialLicenseSetCallParms}, this.smartCredentialLicenseSetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialLicenseSetOperationCompleted(object arg) {
            if ((this.smartCredentialLicenseSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialLicenseSetCompleted(this, new smartCredentialLicenseSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialLicenseCheckReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialLicenseInfo smartCredentialLicenseCheck([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialLicenseCheckCallParms smartCredentialLicenseCheckCallParms) {
            object[] results = this.Invoke("smartCredentialLicenseCheck", new object[] {
                        smartCredentialLicenseCheckCallParms});
            return ((SmartCredentialLicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialLicenseCheck(SmartCredentialLicenseCheckCallParms smartCredentialLicenseCheckCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialLicenseCheck", new object[] {
                        smartCredentialLicenseCheckCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialLicenseInfo EndsmartCredentialLicenseCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialLicenseInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialLicenseCheckAsync(SmartCredentialLicenseCheckCallParms smartCredentialLicenseCheckCallParms) {
            this.smartCredentialLicenseCheckAsync(smartCredentialLicenseCheckCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialLicenseCheckAsync(SmartCredentialLicenseCheckCallParms smartCredentialLicenseCheckCallParms, object userState) {
            if ((this.smartCredentialLicenseCheckOperationCompleted == null)) {
                this.smartCredentialLicenseCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialLicenseCheckOperationCompleted);
            }
            this.InvokeAsync("smartCredentialLicenseCheck", new object[] {
                        smartCredentialLicenseCheckCallParms}, this.smartCredentialLicenseCheckOperationCompleted, userState);
        }
        
        private void OnsmartCredentialLicenseCheckOperationCompleted(object arg) {
            if ((this.smartCredentialLicenseCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialLicenseCheckCompleted(this, new smartCredentialLicenseCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("systemInfoGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SystemInfo systemInfoGet([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] systemInfoGetCallParms) {
            object[] results = this.Invoke("systemInfoGet", new object[] {
                        systemInfoGetCallParms});
            return ((SystemInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsystemInfoGet(NameValue[] systemInfoGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("systemInfoGet", new object[] {
                        systemInfoGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SystemInfo EndsystemInfoGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SystemInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void systemInfoGetAsync(NameValue[] systemInfoGetCallParms) {
            this.systemInfoGetAsync(systemInfoGetCallParms, null);
        }
        
    ///  <remarks/>
        public void systemInfoGetAsync(NameValue[] systemInfoGetCallParms, object userState) {
            if ((this.systemInfoGetOperationCompleted == null)) {
                this.systemInfoGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsystemInfoGetOperationCompleted);
            }
            this.InvokeAsync("systemInfoGet", new object[] {
                        systemInfoGetCallParms}, this.systemInfoGetOperationCompleted, userState);
        }
        
        private void OnsystemInfoGetOperationCompleted(object arg) {
            if ((this.systemInfoGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.systemInfoGetCompleted(this, new systemInfoGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void partitionCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PartitionCreateCallParms partitionCreateCallParms) {
            this.Invoke("partitionCreate", new object[] {
                        partitionCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpartitionCreate(PartitionCreateCallParms partitionCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("partitionCreate", new object[] {
                        partitionCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndpartitionCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void partitionCreateAsync(PartitionCreateCallParms partitionCreateCallParms) {
            this.partitionCreateAsync(partitionCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void partitionCreateAsync(PartitionCreateCallParms partitionCreateCallParms, object userState) {
            if ((this.partitionCreateOperationCompleted == null)) {
                this.partitionCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpartitionCreateOperationCompleted);
            }
            this.InvokeAsync("partitionCreate", new object[] {
                        partitionCreateCallParms}, this.partitionCreateOperationCompleted, userState);
        }
        
        private void OnpartitionCreateOperationCompleted(object arg) {
            if ((this.partitionCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.partitionCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void partitionDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PartitionDeleteCallParms partitionDeleteCallParms) {
            this.Invoke("partitionDelete", new object[] {
                        partitionDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpartitionDelete(PartitionDeleteCallParms partitionDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("partitionDelete", new object[] {
                        partitionDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndpartitionDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void partitionDeleteAsync(PartitionDeleteCallParms partitionDeleteCallParms) {
            this.partitionDeleteAsync(partitionDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void partitionDeleteAsync(PartitionDeleteCallParms partitionDeleteCallParms, object userState) {
            if ((this.partitionDeleteOperationCompleted == null)) {
                this.partitionDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpartitionDeleteOperationCompleted);
            }
            this.InvokeAsync("partitionDelete", new object[] {
                        partitionDeleteCallParms}, this.partitionDeleteOperationCompleted, userState);
        }
        
        private void OnpartitionDeleteOperationCompleted(object arg) {
            if ((this.partitionDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.partitionDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("partitionGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public PartitionInfo partitionGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PartitionGetCallParms partitionGetCallParms) {
            object[] results = this.Invoke("partitionGet", new object[] {
                        partitionGetCallParms});
            return ((PartitionInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpartitionGet(PartitionGetCallParms partitionGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("partitionGet", new object[] {
                        partitionGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public PartitionInfo EndpartitionGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PartitionInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void partitionGetAsync(PartitionGetCallParms partitionGetCallParms) {
            this.partitionGetAsync(partitionGetCallParms, null);
        }
        
    ///  <remarks/>
        public void partitionGetAsync(PartitionGetCallParms partitionGetCallParms, object userState) {
            if ((this.partitionGetOperationCompleted == null)) {
                this.partitionGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpartitionGetOperationCompleted);
            }
            this.InvokeAsync("partitionGet", new object[] {
                        partitionGetCallParms}, this.partitionGetOperationCompleted, userState);
        }
        
        private void OnpartitionGetOperationCompleted(object arg) {
            if ((this.partitionGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.partitionGetCompleted(this, new partitionGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void partitionSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PartitionSetCallParms partitionSetCallParms) {
            this.Invoke("partitionSet", new object[] {
                        partitionSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpartitionSet(PartitionSetCallParms partitionSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("partitionSet", new object[] {
                        partitionSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndpartitionSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void partitionSetAsync(PartitionSetCallParms partitionSetCallParms) {
            this.partitionSetAsync(partitionSetCallParms, null);
        }
        
    ///  <remarks/>
        public void partitionSetAsync(PartitionSetCallParms partitionSetCallParms, object userState) {
            if ((this.partitionSetOperationCompleted == null)) {
                this.partitionSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpartitionSetOperationCompleted);
            }
            this.InvokeAsync("partitionSet", new object[] {
                        partitionSetCallParms}, this.partitionSetOperationCompleted, userState);
        }
        
        private void OnpartitionSetOperationCompleted(object arg) {
            if ((this.partitionSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.partitionSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("partitionListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public PartitionInfoList partitionList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] partitionListCallParms) {
            object[] results = this.Invoke("partitionList", new object[] {
                        partitionListCallParms});
            return ((PartitionInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpartitionList(NameValue[] partitionListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("partitionList", new object[] {
                        partitionListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public PartitionInfoList EndpartitionList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PartitionInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void partitionListAsync(NameValue[] partitionListCallParms) {
            this.partitionListAsync(partitionListCallParms, null);
        }
        
    ///  <remarks/>
        public void partitionListAsync(NameValue[] partitionListCallParms, object userState) {
            if ((this.partitionListOperationCompleted == null)) {
                this.partitionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpartitionListOperationCompleted);
            }
            this.InvokeAsync("partitionList", new object[] {
                        partitionListCallParms}, this.partitionListOperationCompleted, userState);
        }
        
        private void OnpartitionListOperationCompleted(object arg) {
            if ((this.partitionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.partitionListCompleted(this, new partitionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("ipLocationGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public IPLocation ipLocationGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] IPLocationGetCallParms ipLocationGetCallParms) {
            object[] results = this.Invoke("ipLocationGet", new object[] {
                        ipLocationGetCallParms});
            return ((IPLocation)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginipLocationGet(IPLocationGetCallParms ipLocationGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ipLocationGet", new object[] {
                        ipLocationGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public IPLocation EndipLocationGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((IPLocation)(results[0]));
        }
        
    ///  <remarks/>
        public void ipLocationGetAsync(IPLocationGetCallParms ipLocationGetCallParms) {
            this.ipLocationGetAsync(ipLocationGetCallParms, null);
        }
        
    ///  <remarks/>
        public void ipLocationGetAsync(IPLocationGetCallParms ipLocationGetCallParms, object userState) {
            if ((this.ipLocationGetOperationCompleted == null)) {
                this.ipLocationGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnipLocationGetOperationCompleted);
            }
            this.InvokeAsync("ipLocationGet", new object[] {
                        ipLocationGetCallParms}, this.ipLocationGetOperationCompleted, userState);
        }
        
        private void OnipLocationGetOperationCompleted(object arg) {
            if ((this.ipLocationGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ipLocationGetCompleted(this, new ipLocationGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("countryGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public CountryInfo countryGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] CountryGetCallParms countryGetCallParms) {
            object[] results = this.Invoke("countryGet", new object[] {
                        countryGetCallParms});
            return ((CountryInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegincountryGet(CountryGetCallParms countryGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("countryGet", new object[] {
                        countryGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public CountryInfo EndcountryGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CountryInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void countryGetAsync(CountryGetCallParms countryGetCallParms) {
            this.countryGetAsync(countryGetCallParms, null);
        }
        
    ///  <remarks/>
        public void countryGetAsync(CountryGetCallParms countryGetCallParms, object userState) {
            if ((this.countryGetOperationCompleted == null)) {
                this.countryGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncountryGetOperationCompleted);
            }
            this.InvokeAsync("countryGet", new object[] {
                        countryGetCallParms}, this.countryGetOperationCompleted, userState);
        }
        
        private void OncountryGetOperationCompleted(object arg) {
            if ((this.countryGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.countryGetCompleted(this, new countryGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("countryListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CountryInfo[] countryList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] countryListCallParms) {
            object[] results = this.Invoke("countryList", new object[] {
                        countryListCallParms});
            return ((CountryInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegincountryList(NameValue[] countryListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("countryList", new object[] {
                        countryListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public CountryInfo[] EndcountryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CountryInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public void countryListAsync(NameValue[] countryListCallParms) {
            this.countryListAsync(countryListCallParms, null);
        }
        
    ///  <remarks/>
        public void countryListAsync(NameValue[] countryListCallParms, object userState) {
            if ((this.countryListOperationCompleted == null)) {
                this.countryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OncountryListOperationCompleted);
            }
            this.InvokeAsync("countryList", new object[] {
                        countryListCallParms}, this.countryListOperationCompleted, userState);
        }
        
        private void OncountryListOperationCompleted(object arg) {
            if ((this.countryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.countryListCompleted(this, new countryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("regionGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public RegionInfo regionGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] RegionGetCallParms regionGetCallParms) {
            object[] results = this.Invoke("regionGet", new object[] {
                        regionGetCallParms});
            return ((RegionInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginregionGet(RegionGetCallParms regionGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("regionGet", new object[] {
                        regionGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public RegionInfo EndregionGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RegionInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void regionGetAsync(RegionGetCallParms regionGetCallParms) {
            this.regionGetAsync(regionGetCallParms, null);
        }
        
    ///  <remarks/>
        public void regionGetAsync(RegionGetCallParms regionGetCallParms, object userState) {
            if ((this.regionGetOperationCompleted == null)) {
                this.regionGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregionGetOperationCompleted);
            }
            this.InvokeAsync("regionGet", new object[] {
                        regionGetCallParms}, this.regionGetOperationCompleted, userState);
        }
        
        private void OnregionGetOperationCompleted(object arg) {
            if ((this.regionGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.regionGetCompleted(this, new regionGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("regionListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public RegionInfo[] regionList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] RegionListCallParms regionListCallParms) {
            object[] results = this.Invoke("regionList", new object[] {
                        regionListCallParms});
            return ((RegionInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginregionList(RegionListCallParms regionListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("regionList", new object[] {
                        regionListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public RegionInfo[] EndregionList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RegionInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public void regionListAsync(RegionListCallParms regionListCallParms) {
            this.regionListAsync(regionListCallParms, null);
        }
        
    ///  <remarks/>
        public void regionListAsync(RegionListCallParms regionListCallParms, object userState) {
            if ((this.regionListOperationCompleted == null)) {
                this.regionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregionListOperationCompleted);
            }
            this.InvokeAsync("regionList", new object[] {
                        regionListCallParms}, this.regionListOperationCompleted, userState);
        }
        
        private void OnregionListOperationCompleted(object arg) {
            if ((this.regionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.regionListCompleted(this, new regionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("tokenVendorGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public TokenVendorInfo tokenVendorGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TokenVendorGetCallParms tokenVendorGetCallParms) {
            object[] results = this.Invoke("tokenVendorGet", new object[] {
                        tokenVendorGetCallParms});
            return ((TokenVendorInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintokenVendorGet(TokenVendorGetCallParms tokenVendorGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("tokenVendorGet", new object[] {
                        tokenVendorGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public TokenVendorInfo EndtokenVendorGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TokenVendorInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void tokenVendorGetAsync(TokenVendorGetCallParms tokenVendorGetCallParms) {
            this.tokenVendorGetAsync(tokenVendorGetCallParms, null);
        }
        
    ///  <remarks/>
        public void tokenVendorGetAsync(TokenVendorGetCallParms tokenVendorGetCallParms, object userState) {
            if ((this.tokenVendorGetOperationCompleted == null)) {
                this.tokenVendorGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OntokenVendorGetOperationCompleted);
            }
            this.InvokeAsync("tokenVendorGet", new object[] {
                        tokenVendorGetCallParms}, this.tokenVendorGetOperationCompleted, userState);
        }
        
        private void OntokenVendorGetOperationCompleted(object arg) {
            if ((this.tokenVendorGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tokenVendorGetCompleted(this, new tokenVendorGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("tokenVendorListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public TokenVendorInfo[] tokenVendorList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] tokenVendorListCallParms) {
            object[] results = this.Invoke("tokenVendorList", new object[] {
                        tokenVendorListCallParms});
            return ((TokenVendorInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintokenVendorList(NameValue[] tokenVendorListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("tokenVendorList", new object[] {
                        tokenVendorListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public TokenVendorInfo[] EndtokenVendorList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TokenVendorInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public void tokenVendorListAsync(NameValue[] tokenVendorListCallParms) {
            this.tokenVendorListAsync(tokenVendorListCallParms, null);
        }
        
    ///  <remarks/>
        public void tokenVendorListAsync(NameValue[] tokenVendorListCallParms, object userState) {
            if ((this.tokenVendorListOperationCompleted == null)) {
                this.tokenVendorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OntokenVendorListOperationCompleted);
            }
            this.InvokeAsync("tokenVendorList", new object[] {
                        tokenVendorListCallParms}, this.tokenVendorListOperationCompleted, userState);
        }
        
        private void OntokenVendorListOperationCompleted(object arg) {
            if ((this.tokenVendorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tokenVendorListCompleted(this, new tokenVendorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void policyCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PolicyCreateCallParms policyCreateCallParms) {
            this.Invoke("policyCreate", new object[] {
                        policyCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpolicyCreate(PolicyCreateCallParms policyCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("policyCreate", new object[] {
                        policyCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndpolicyCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void policyCreateAsync(PolicyCreateCallParms policyCreateCallParms) {
            this.policyCreateAsync(policyCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void policyCreateAsync(PolicyCreateCallParms policyCreateCallParms, object userState) {
            if ((this.policyCreateOperationCompleted == null)) {
                this.policyCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpolicyCreateOperationCompleted);
            }
            this.InvokeAsync("policyCreate", new object[] {
                        policyCreateCallParms}, this.policyCreateOperationCompleted, userState);
        }
        
        private void OnpolicyCreateOperationCompleted(object arg) {
            if ((this.policyCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.policyCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void policyDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PolicyDeleteCallParms policyDeleteCallParms) {
            this.Invoke("policyDelete", new object[] {
                        policyDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpolicyDelete(PolicyDeleteCallParms policyDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("policyDelete", new object[] {
                        policyDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndpolicyDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void policyDeleteAsync(PolicyDeleteCallParms policyDeleteCallParms) {
            this.policyDeleteAsync(policyDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void policyDeleteAsync(PolicyDeleteCallParms policyDeleteCallParms, object userState) {
            if ((this.policyDeleteOperationCompleted == null)) {
                this.policyDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpolicyDeleteOperationCompleted);
            }
            this.InvokeAsync("policyDelete", new object[] {
                        policyDeleteCallParms}, this.policyDeleteOperationCompleted, userState);
        }
        
        private void OnpolicyDeleteOperationCompleted(object arg) {
            if ((this.policyDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.policyDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("policyGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public PolicyInfo policyGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PolicyGetCallParms policyGetCallParms) {
            object[] results = this.Invoke("policyGet", new object[] {
                        policyGetCallParms});
            return ((PolicyInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpolicyGet(PolicyGetCallParms policyGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("policyGet", new object[] {
                        policyGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public PolicyInfo EndpolicyGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PolicyInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void policyGetAsync(PolicyGetCallParms policyGetCallParms) {
            this.policyGetAsync(policyGetCallParms, null);
        }
        
    ///  <remarks/>
        public void policyGetAsync(PolicyGetCallParms policyGetCallParms, object userState) {
            if ((this.policyGetOperationCompleted == null)) {
                this.policyGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpolicyGetOperationCompleted);
            }
            this.InvokeAsync("policyGet", new object[] {
                        policyGetCallParms}, this.policyGetOperationCompleted, userState);
        }
        
        private void OnpolicyGetOperationCompleted(object arg) {
            if ((this.policyGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.policyGetCompleted(this, new policyGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("policyGetExReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public PolicyInfoEx policyGetEx([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PolicyGetExCallParms policyGetExCallParms) {
            object[] results = this.Invoke("policyGetEx", new object[] {
                        policyGetExCallParms});
            return ((PolicyInfoEx)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpolicyGetEx(PolicyGetExCallParms policyGetExCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("policyGetEx", new object[] {
                        policyGetExCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public PolicyInfoEx EndpolicyGetEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PolicyInfoEx)(results[0]));
        }
        
    ///  <remarks/>
        public void policyGetExAsync(PolicyGetExCallParms policyGetExCallParms) {
            this.policyGetExAsync(policyGetExCallParms, null);
        }
        
    ///  <remarks/>
        public void policyGetExAsync(PolicyGetExCallParms policyGetExCallParms, object userState) {
            if ((this.policyGetExOperationCompleted == null)) {
                this.policyGetExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpolicyGetExOperationCompleted);
            }
            this.InvokeAsync("policyGetEx", new object[] {
                        policyGetExCallParms}, this.policyGetExOperationCompleted, userState);
        }
        
        private void OnpolicyGetExOperationCompleted(object arg) {
            if ((this.policyGetExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.policyGetExCompleted(this, new policyGetExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void policySet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PolicySetCallParms policySetCallParms) {
            this.Invoke("policySet", new object[] {
                        policySetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpolicySet(PolicySetCallParms policySetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("policySet", new object[] {
                        policySetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndpolicySet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void policySetAsync(PolicySetCallParms policySetCallParms) {
            this.policySetAsync(policySetCallParms, null);
        }
        
    ///  <remarks/>
        public void policySetAsync(PolicySetCallParms policySetCallParms, object userState) {
            if ((this.policySetOperationCompleted == null)) {
                this.policySetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpolicySetOperationCompleted);
            }
            this.InvokeAsync("policySet", new object[] {
                        policySetCallParms}, this.policySetOperationCompleted, userState);
        }
        
        private void OnpolicySetOperationCompleted(object arg) {
            if ((this.policySetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.policySetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("policyListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public PolicyInfoList policyList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] policyListCallParms) {
            object[] results = this.Invoke("policyList", new object[] {
                        policyListCallParms});
            return ((PolicyInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpolicyList(NameValue[] policyListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("policyList", new object[] {
                        policyListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public PolicyInfoList EndpolicyList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PolicyInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void policyListAsync(NameValue[] policyListCallParms) {
            this.policyListAsync(policyListCallParms, null);
        }
        
    ///  <remarks/>
        public void policyListAsync(NameValue[] policyListCallParms, object userState) {
            if ((this.policyListOperationCompleted == null)) {
                this.policyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpolicyListOperationCompleted);
            }
            this.InvokeAsync("policyList", new object[] {
                        policyListCallParms}, this.policyListOperationCompleted, userState);
        }
        
        private void OnpolicyListOperationCompleted(object arg) {
            if ((this.policyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.policyListCompleted(this, new policyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSpecGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserSpecInfo userSpecGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSpecGetCallParms userSpecGetCallParms) {
            object[] results = this.Invoke("userSpecGet", new object[] {
                        userSpecGetCallParms});
            return ((UserSpecInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSpecGet(UserSpecGetCallParms userSpecGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSpecGet", new object[] {
                        userSpecGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserSpecInfo EnduserSpecGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserSpecInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void userSpecGetAsync(UserSpecGetCallParms userSpecGetCallParms) {
            this.userSpecGetAsync(userSpecGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userSpecGetAsync(UserSpecGetCallParms userSpecGetCallParms, object userState) {
            if ((this.userSpecGetOperationCompleted == null)) {
                this.userSpecGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSpecGetOperationCompleted);
            }
            this.InvokeAsync("userSpecGet", new object[] {
                        userSpecGetCallParms}, this.userSpecGetOperationCompleted, userState);
        }
        
        private void OnuserSpecGetOperationCompleted(object arg) {
            if ((this.userSpecGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSpecGetCompleted(this, new userSpecGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("cardSpecGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public CardSpecInfo cardSpecGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] CardSpecGetCallParms cardSpecGetCallParms) {
            object[] results = this.Invoke("cardSpecGet", new object[] {
                        cardSpecGetCallParms});
            return ((CardSpecInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegincardSpecGet(CardSpecGetCallParms cardSpecGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("cardSpecGet", new object[] {
                        cardSpecGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public CardSpecInfo EndcardSpecGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CardSpecInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void cardSpecGetAsync(CardSpecGetCallParms cardSpecGetCallParms) {
            this.cardSpecGetAsync(cardSpecGetCallParms, null);
        }
        
    ///  <remarks/>
        public void cardSpecGetAsync(CardSpecGetCallParms cardSpecGetCallParms, object userState) {
            if ((this.cardSpecGetOperationCompleted == null)) {
                this.cardSpecGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncardSpecGetOperationCompleted);
            }
            this.InvokeAsync("cardSpecGet", new object[] {
                        cardSpecGetCallParms}, this.cardSpecGetOperationCompleted, userState);
        }
        
        private void OncardSpecGetOperationCompleted(object arg) {
            if ((this.cardSpecGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cardSpecGetCompleted(this, new cardSpecGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("pinSpecGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public PINSpecInfo pinSpecGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PinSpecGetCallParms pinSpecGetCallParms) {
            object[] results = this.Invoke("pinSpecGet", new object[] {
                        pinSpecGetCallParms});
            return ((PINSpecInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpinSpecGet(PinSpecGetCallParms pinSpecGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("pinSpecGet", new object[] {
                        pinSpecGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public PINSpecInfo EndpinSpecGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PINSpecInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void pinSpecGetAsync(PinSpecGetCallParms pinSpecGetCallParms) {
            this.pinSpecGetAsync(pinSpecGetCallParms, null);
        }
        
    ///  <remarks/>
        public void pinSpecGetAsync(PinSpecGetCallParms pinSpecGetCallParms, object userState) {
            if ((this.pinSpecGetOperationCompleted == null)) {
                this.pinSpecGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpinSpecGetOperationCompleted);
            }
            this.InvokeAsync("pinSpecGet", new object[] {
                        pinSpecGetCallParms}, this.pinSpecGetOperationCompleted, userState);
        }
        
        private void OnpinSpecGetOperationCompleted(object arg) {
            if ((this.pinSpecGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pinSpecGetCompleted(this, new pinSpecGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("passwordRulesGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public PasswordRulesInfo passwordRulesGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PasswordRulesGetCallParms passwordRulesGetCallParms) {
            object[] results = this.Invoke("passwordRulesGet", new object[] {
                        passwordRulesGetCallParms});
            return ((PasswordRulesInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpasswordRulesGet(PasswordRulesGetCallParms passwordRulesGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("passwordRulesGet", new object[] {
                        passwordRulesGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public PasswordRulesInfo EndpasswordRulesGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PasswordRulesInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void passwordRulesGetAsync(PasswordRulesGetCallParms passwordRulesGetCallParms) {
            this.passwordRulesGetAsync(passwordRulesGetCallParms, null);
        }
        
    ///  <remarks/>
        public void passwordRulesGetAsync(PasswordRulesGetCallParms passwordRulesGetCallParms, object userState) {
            if ((this.passwordRulesGetOperationCompleted == null)) {
                this.passwordRulesGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpasswordRulesGetOperationCompleted);
            }
            this.InvokeAsync("passwordRulesGet", new object[] {
                        passwordRulesGetCallParms}, this.passwordRulesGetOperationCompleted, userState);
        }
        
        private void OnpasswordRulesGetOperationCompleted(object arg) {
            if ((this.passwordRulesGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.passwordRulesGetCompleted(this, new passwordRulesGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("permissionListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public PermissionsList permissionList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] permissionListCallParms) {
            object[] results = this.Invoke("permissionList", new object[] {
                        permissionListCallParms});
            return ((PermissionsList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpermissionList(NameValue[] permissionListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("permissionList", new object[] {
                        permissionListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public PermissionsList EndpermissionList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PermissionsList)(results[0]));
        }
        
    ///  <remarks/>
        public void permissionListAsync(NameValue[] permissionListCallParms) {
            this.permissionListAsync(permissionListCallParms, null);
        }
        
    ///  <remarks/>
        public void permissionListAsync(NameValue[] permissionListCallParms, object userState) {
            if ((this.permissionListOperationCompleted == null)) {
                this.permissionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpermissionListOperationCompleted);
            }
            this.InvokeAsync("permissionList", new object[] {
                        permissionListCallParms}, this.permissionListOperationCompleted, userState);
        }
        
        private void OnpermissionListOperationCompleted(object arg) {
            if ((this.permissionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.permissionListCompleted(this, new permissionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("ownRoleGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public RoleInfoList ownRoleGet([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] ownRoleGetCallParms) {
            object[] results = this.Invoke("ownRoleGet", new object[] {
                        ownRoleGetCallParms});
            return ((RoleInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginownRoleGet(NameValue[] ownRoleGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ownRoleGet", new object[] {
                        ownRoleGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public RoleInfoList EndownRoleGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RoleInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void ownRoleGetAsync(NameValue[] ownRoleGetCallParms) {
            this.ownRoleGetAsync(ownRoleGetCallParms, null);
        }
        
    ///  <remarks/>
        public void ownRoleGetAsync(NameValue[] ownRoleGetCallParms, object userState) {
            if ((this.ownRoleGetOperationCompleted == null)) {
                this.ownRoleGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnownRoleGetOperationCompleted);
            }
            this.InvokeAsync("ownRoleGet", new object[] {
                        ownRoleGetCallParms}, this.ownRoleGetOperationCompleted, userState);
        }
        
        private void OnownRoleGetOperationCompleted(object arg) {
            if ((this.ownRoleGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ownRoleGetCompleted(this, new ownRoleGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void roleCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] RoleCreateCallParms roleCreateCallParms) {
            this.Invoke("roleCreate", new object[] {
                        roleCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginroleCreate(RoleCreateCallParms roleCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("roleCreate", new object[] {
                        roleCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndroleCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void roleCreateAsync(RoleCreateCallParms roleCreateCallParms) {
            this.roleCreateAsync(roleCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void roleCreateAsync(RoleCreateCallParms roleCreateCallParms, object userState) {
            if ((this.roleCreateOperationCompleted == null)) {
                this.roleCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnroleCreateOperationCompleted);
            }
            this.InvokeAsync("roleCreate", new object[] {
                        roleCreateCallParms}, this.roleCreateOperationCompleted, userState);
        }
        
        private void OnroleCreateOperationCompleted(object arg) {
            if ((this.roleCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.roleCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void roleDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] RoleDeleteCallParms roleDeleteCallParms) {
            this.Invoke("roleDelete", new object[] {
                        roleDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginroleDelete(RoleDeleteCallParms roleDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("roleDelete", new object[] {
                        roleDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndroleDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void roleDeleteAsync(RoleDeleteCallParms roleDeleteCallParms) {
            this.roleDeleteAsync(roleDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void roleDeleteAsync(RoleDeleteCallParms roleDeleteCallParms, object userState) {
            if ((this.roleDeleteOperationCompleted == null)) {
                this.roleDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnroleDeleteOperationCompleted);
            }
            this.InvokeAsync("roleDelete", new object[] {
                        roleDeleteCallParms}, this.roleDeleteOperationCompleted, userState);
        }
        
        private void OnroleDeleteOperationCompleted(object arg) {
            if ((this.roleDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.roleDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("roleGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public RoleInfo roleGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] RoleGetCallParms roleGetCallParms) {
            object[] results = this.Invoke("roleGet", new object[] {
                        roleGetCallParms});
            return ((RoleInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginroleGet(RoleGetCallParms roleGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("roleGet", new object[] {
                        roleGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public RoleInfo EndroleGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RoleInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void roleGetAsync(RoleGetCallParms roleGetCallParms) {
            this.roleGetAsync(roleGetCallParms, null);
        }
        
    ///  <remarks/>
        public void roleGetAsync(RoleGetCallParms roleGetCallParms, object userState) {
            if ((this.roleGetOperationCompleted == null)) {
                this.roleGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnroleGetOperationCompleted);
            }
            this.InvokeAsync("roleGet", new object[] {
                        roleGetCallParms}, this.roleGetOperationCompleted, userState);
        }
        
        private void OnroleGetOperationCompleted(object arg) {
            if ((this.roleGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.roleGetCompleted(this, new roleGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void roleSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] RoleSetCallParms roleSetCallParms) {
            this.Invoke("roleSet", new object[] {
                        roleSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginroleSet(RoleSetCallParms roleSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("roleSet", new object[] {
                        roleSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndroleSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void roleSetAsync(RoleSetCallParms roleSetCallParms) {
            this.roleSetAsync(roleSetCallParms, null);
        }
        
    ///  <remarks/>
        public void roleSetAsync(RoleSetCallParms roleSetCallParms, object userState) {
            if ((this.roleSetOperationCompleted == null)) {
                this.roleSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnroleSetOperationCompleted);
            }
            this.InvokeAsync("roleSet", new object[] {
                        roleSetCallParms}, this.roleSetOperationCompleted, userState);
        }
        
        private void OnroleSetOperationCompleted(object arg) {
            if ((this.roleSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.roleSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("roleListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public RoleInfoList roleList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] RoleListCallParms roleListCallParms) {
            object[] results = this.Invoke("roleList", new object[] {
                        roleListCallParms});
            return ((RoleInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginroleList(RoleListCallParms roleListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("roleList", new object[] {
                        roleListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public RoleInfoList EndroleList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RoleInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void roleListAsync(RoleListCallParms roleListCallParms) {
            this.roleListAsync(roleListCallParms, null);
        }
        
    ///  <remarks/>
        public void roleListAsync(RoleListCallParms roleListCallParms, object userState) {
            if ((this.roleListOperationCompleted == null)) {
                this.roleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnroleListOperationCompleted);
            }
            this.InvokeAsync("roleList", new object[] {
                        roleListCallParms}, this.roleListOperationCompleted, userState);
        }
        
        private void OnroleListOperationCompleted(object arg) {
            if ((this.roleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.roleListCompleted(this, new roleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void groupCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] GroupCreateCallParms groupCreateCallParms) {
            this.Invoke("groupCreate", new object[] {
                        groupCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegingroupCreate(GroupCreateCallParms groupCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("groupCreate", new object[] {
                        groupCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndgroupCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void groupCreateAsync(GroupCreateCallParms groupCreateCallParms) {
            this.groupCreateAsync(groupCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void groupCreateAsync(GroupCreateCallParms groupCreateCallParms, object userState) {
            if ((this.groupCreateOperationCompleted == null)) {
                this.groupCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngroupCreateOperationCompleted);
            }
            this.InvokeAsync("groupCreate", new object[] {
                        groupCreateCallParms}, this.groupCreateOperationCompleted, userState);
        }
        
        private void OngroupCreateOperationCompleted(object arg) {
            if ((this.groupCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.groupCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void groupDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] GroupDeleteCallParms groupDeleteCallParms) {
            this.Invoke("groupDelete", new object[] {
                        groupDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegingroupDelete(GroupDeleteCallParms groupDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("groupDelete", new object[] {
                        groupDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndgroupDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void groupDeleteAsync(GroupDeleteCallParms groupDeleteCallParms) {
            this.groupDeleteAsync(groupDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void groupDeleteAsync(GroupDeleteCallParms groupDeleteCallParms, object userState) {
            if ((this.groupDeleteOperationCompleted == null)) {
                this.groupDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngroupDeleteOperationCompleted);
            }
            this.InvokeAsync("groupDelete", new object[] {
                        groupDeleteCallParms}, this.groupDeleteOperationCompleted, userState);
        }
        
        private void OngroupDeleteOperationCompleted(object arg) {
            if ((this.groupDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.groupDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("groupGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public GroupInfo groupGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] GroupGetCallParms groupGetCallParms) {
            object[] results = this.Invoke("groupGet", new object[] {
                        groupGetCallParms});
            return ((GroupInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegingroupGet(GroupGetCallParms groupGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("groupGet", new object[] {
                        groupGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public GroupInfo EndgroupGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GroupInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void groupGetAsync(GroupGetCallParms groupGetCallParms) {
            this.groupGetAsync(groupGetCallParms, null);
        }
        
    ///  <remarks/>
        public void groupGetAsync(GroupGetCallParms groupGetCallParms, object userState) {
            if ((this.groupGetOperationCompleted == null)) {
                this.groupGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngroupGetOperationCompleted);
            }
            this.InvokeAsync("groupGet", new object[] {
                        groupGetCallParms}, this.groupGetOperationCompleted, userState);
        }
        
        private void OngroupGetOperationCompleted(object arg) {
            if ((this.groupGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.groupGetCompleted(this, new groupGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void groupSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] GroupSetCallParms groupSetCallParms) {
            this.Invoke("groupSet", new object[] {
                        groupSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegingroupSet(GroupSetCallParms groupSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("groupSet", new object[] {
                        groupSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndgroupSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void groupSetAsync(GroupSetCallParms groupSetCallParms) {
            this.groupSetAsync(groupSetCallParms, null);
        }
        
    ///  <remarks/>
        public void groupSetAsync(GroupSetCallParms groupSetCallParms, object userState) {
            if ((this.groupSetOperationCompleted == null)) {
                this.groupSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngroupSetOperationCompleted);
            }
            this.InvokeAsync("groupSet", new object[] {
                        groupSetCallParms}, this.groupSetOperationCompleted, userState);
        }
        
        private void OngroupSetOperationCompleted(object arg) {
            if ((this.groupSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.groupSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("groupListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public GroupInfoList groupList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] GroupListCallParms groupListCallParms) {
            object[] results = this.Invoke("groupList", new object[] {
                        groupListCallParms});
            return ((GroupInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegingroupList(GroupListCallParms groupListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("groupList", new object[] {
                        groupListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public GroupInfoList EndgroupList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GroupInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void groupListAsync(GroupListCallParms groupListCallParms) {
            this.groupListAsync(groupListCallParms, null);
        }
        
    ///  <remarks/>
        public void groupListAsync(GroupListCallParms groupListCallParms, object userState) {
            if ((this.groupListOperationCompleted == null)) {
                this.groupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngroupListOperationCompleted);
            }
            this.InvokeAsync("groupList", new object[] {
                        groupListCallParms}, this.groupListOperationCompleted, userState);
        }
        
        private void OngroupListOperationCompleted(object arg) {
            if ((this.groupListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.groupListCompleted(this, new groupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("managedCaUserListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ManagedCaUserInfo[] managedCaUserList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ManagedCaUserListCallParms managedCaUserListCallParms) {
            object[] results = this.Invoke("managedCaUserList", new object[] {
                        managedCaUserListCallParms});
            return ((ManagedCaUserInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginmanagedCaUserList(ManagedCaUserListCallParms managedCaUserListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("managedCaUserList", new object[] {
                        managedCaUserListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public ManagedCaUserInfo[] EndmanagedCaUserList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ManagedCaUserInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public void managedCaUserListAsync(ManagedCaUserListCallParms managedCaUserListCallParms) {
            this.managedCaUserListAsync(managedCaUserListCallParms, null);
        }
        
    ///  <remarks/>
        public void managedCaUserListAsync(ManagedCaUserListCallParms managedCaUserListCallParms, object userState) {
            if ((this.managedCaUserListOperationCompleted == null)) {
                this.managedCaUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmanagedCaUserListOperationCompleted);
            }
            this.InvokeAsync("managedCaUserList", new object[] {
                        managedCaUserListCallParms}, this.managedCaUserListOperationCompleted, userState);
        }
        
        private void OnmanagedCaUserListOperationCompleted(object arg) {
            if ((this.managedCaUserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.managedCaUserListCompleted(this, new managedCaUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ManagedCaCertificateListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CertificateResponse[] ManagedCaCertificateList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ManagedCaCertificateListCallParms ManagedCaCertificateListCallParms) {
            object[] results = this.Invoke("ManagedCaCertificateList", new object[] {
                        ManagedCaCertificateListCallParms});
            return ((CertificateResponse[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginManagedCaCertificateList(ManagedCaCertificateListCallParms ManagedCaCertificateListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ManagedCaCertificateList", new object[] {
                        ManagedCaCertificateListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public CertificateResponse[] EndManagedCaCertificateList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CertificateResponse[])(results[0]));
        }
        
    ///  <remarks/>
        public void ManagedCaCertificateListAsync(ManagedCaCertificateListCallParms ManagedCaCertificateListCallParms) {
            this.ManagedCaCertificateListAsync(ManagedCaCertificateListCallParms, null);
        }
        
    ///  <remarks/>
        public void ManagedCaCertificateListAsync(ManagedCaCertificateListCallParms ManagedCaCertificateListCallParms, object userState) {
            if ((this.ManagedCaCertificateListOperationCompleted == null)) {
                this.ManagedCaCertificateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagedCaCertificateListOperationCompleted);
            }
            this.InvokeAsync("ManagedCaCertificateList", new object[] {
                        ManagedCaCertificateListCallParms}, this.ManagedCaCertificateListOperationCompleted, userState);
        }
        
        private void OnManagedCaCertificateListOperationCompleted(object arg) {
            if ((this.ManagedCaCertificateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManagedCaCertificateListCompleted(this, new ManagedCaCertificateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("managedCaScepRaEncryptionCertificateGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public CertificateResponse managedCaScepRaEncryptionCertificateGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ManagedCaScepRaEncryptionCertificateGetCallParms managedCaScepRaEncryptionCertificateGetCallParms) {
            object[] results = this.Invoke("managedCaScepRaEncryptionCertificateGet", new object[] {
                        managedCaScepRaEncryptionCertificateGetCallParms});
            return ((CertificateResponse)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginmanagedCaScepRaEncryptionCertificateGet(ManagedCaScepRaEncryptionCertificateGetCallParms managedCaScepRaEncryptionCertificateGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("managedCaScepRaEncryptionCertificateGet", new object[] {
                        managedCaScepRaEncryptionCertificateGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public CertificateResponse EndmanagedCaScepRaEncryptionCertificateGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CertificateResponse)(results[0]));
        }
        
    ///  <remarks/>
        public void managedCaScepRaEncryptionCertificateGetAsync(ManagedCaScepRaEncryptionCertificateGetCallParms managedCaScepRaEncryptionCertificateGetCallParms) {
            this.managedCaScepRaEncryptionCertificateGetAsync(managedCaScepRaEncryptionCertificateGetCallParms, null);
        }
        
    ///  <remarks/>
        public void managedCaScepRaEncryptionCertificateGetAsync(ManagedCaScepRaEncryptionCertificateGetCallParms managedCaScepRaEncryptionCertificateGetCallParms, object userState) {
            if ((this.managedCaScepRaEncryptionCertificateGetOperationCompleted == null)) {
                this.managedCaScepRaEncryptionCertificateGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmanagedCaScepRaEncryptionCertificateGetOperationCompleted);
            }
            this.InvokeAsync("managedCaScepRaEncryptionCertificateGet", new object[] {
                        managedCaScepRaEncryptionCertificateGetCallParms}, this.managedCaScepRaEncryptionCertificateGetOperationCompleted, userState);
        }
        
        private void OnmanagedCaScepRaEncryptionCertificateGetOperationCompleted(object arg) {
            if ((this.managedCaScepRaEncryptionCertificateGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.managedCaScepRaEncryptionCertificateGetCompleted(this, new managedCaScepRaEncryptionCertificateGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("managedCaScepRaCertificateListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CertificateResponse[] managedCaScepRaCertificateList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] managedCaScepRaCertificateListCallParms managedCaScepRaCertificateListCallParms) {
            object[] results = this.Invoke("managedCaScepRaCertificateList", new object[] {
                        managedCaScepRaCertificateListCallParms});
            return ((CertificateResponse[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginmanagedCaScepRaCertificateList(managedCaScepRaCertificateListCallParms managedCaScepRaCertificateListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("managedCaScepRaCertificateList", new object[] {
                        managedCaScepRaCertificateListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public CertificateResponse[] EndmanagedCaScepRaCertificateList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CertificateResponse[])(results[0]));
        }
        
    ///  <remarks/>
        public void managedCaScepRaCertificateListAsync(managedCaScepRaCertificateListCallParms managedCaScepRaCertificateListCallParms) {
            this.managedCaScepRaCertificateListAsync(managedCaScepRaCertificateListCallParms, null);
        }
        
    ///  <remarks/>
        public void managedCaScepRaCertificateListAsync(managedCaScepRaCertificateListCallParms managedCaScepRaCertificateListCallParms, object userState) {
            if ((this.managedCaScepRaCertificateListOperationCompleted == null)) {
                this.managedCaScepRaCertificateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmanagedCaScepRaCertificateListOperationCompleted);
            }
            this.InvokeAsync("managedCaScepRaCertificateList", new object[] {
                        managedCaScepRaCertificateListCallParms}, this.managedCaScepRaCertificateListOperationCompleted, userState);
        }
        
        private void OnmanagedCaScepRaCertificateListOperationCompleted(object arg) {
            if ((this.managedCaScepRaCertificateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.managedCaScepRaCertificateListCompleted(this, new managedCaScepRaCertificateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("managedCaScepRaDecryptDataReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public DecryptedDataInfo managedCaScepRaDecryptData([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ManagedCaScepRaDecryptDataCallParms managedCaScepRaDecryptDataCallParms) {
            object[] results = this.Invoke("managedCaScepRaDecryptData", new object[] {
                        managedCaScepRaDecryptDataCallParms});
            return ((DecryptedDataInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginmanagedCaScepRaDecryptData(ManagedCaScepRaDecryptDataCallParms managedCaScepRaDecryptDataCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("managedCaScepRaDecryptData", new object[] {
                        managedCaScepRaDecryptDataCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public DecryptedDataInfo EndmanagedCaScepRaDecryptData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DecryptedDataInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void managedCaScepRaDecryptDataAsync(ManagedCaScepRaDecryptDataCallParms managedCaScepRaDecryptDataCallParms) {
            this.managedCaScepRaDecryptDataAsync(managedCaScepRaDecryptDataCallParms, null);
        }
        
    ///  <remarks/>
        public void managedCaScepRaDecryptDataAsync(ManagedCaScepRaDecryptDataCallParms managedCaScepRaDecryptDataCallParms, object userState) {
            if ((this.managedCaScepRaDecryptDataOperationCompleted == null)) {
                this.managedCaScepRaDecryptDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmanagedCaScepRaDecryptDataOperationCompleted);
            }
            this.InvokeAsync("managedCaScepRaDecryptData", new object[] {
                        managedCaScepRaDecryptDataCallParms}, this.managedCaScepRaDecryptDataOperationCompleted, userState);
        }
        
        private void OnmanagedCaScepRaDecryptDataOperationCompleted(object arg) {
            if ((this.managedCaScepRaDecryptDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.managedCaScepRaDecryptDataCompleted(this, new managedCaScepRaDecryptDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("managedCaScepRaSignContentReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public ScepRaSignContentResult managedCaScepRaSignContent([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ManagedCaScepRaSignContentCallParms managedCaScepRaSignContentCallParms) {
            object[] results = this.Invoke("managedCaScepRaSignContent", new object[] {
                        managedCaScepRaSignContentCallParms});
            return ((ScepRaSignContentResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginmanagedCaScepRaSignContent(ManagedCaScepRaSignContentCallParms managedCaScepRaSignContentCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("managedCaScepRaSignContent", new object[] {
                        managedCaScepRaSignContentCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public ScepRaSignContentResult EndmanagedCaScepRaSignContent(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ScepRaSignContentResult)(results[0]));
        }
        
    ///  <remarks/>
        public void managedCaScepRaSignContentAsync(ManagedCaScepRaSignContentCallParms managedCaScepRaSignContentCallParms) {
            this.managedCaScepRaSignContentAsync(managedCaScepRaSignContentCallParms, null);
        }
        
    ///  <remarks/>
        public void managedCaScepRaSignContentAsync(ManagedCaScepRaSignContentCallParms managedCaScepRaSignContentCallParms, object userState) {
            if ((this.managedCaScepRaSignContentOperationCompleted == null)) {
                this.managedCaScepRaSignContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmanagedCaScepRaSignContentOperationCompleted);
            }
            this.InvokeAsync("managedCaScepRaSignContent", new object[] {
                        managedCaScepRaSignContentCallParms}, this.managedCaScepRaSignContentOperationCompleted, userState);
        }
        
        private void OnmanagedCaScepRaSignContentOperationCompleted(object arg) {
            if ((this.managedCaScepRaSignContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.managedCaScepRaSignContentCompleted(this, new managedCaScepRaSignContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userRegistrationPasswordGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserRegistrationPasswordInfo userRegistrationPasswordGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserRegistrationPasswordGetCallParms userRegistrationPasswordGetCallParms) {
            object[] results = this.Invoke("userRegistrationPasswordGet", new object[] {
                        userRegistrationPasswordGetCallParms});
            return ((UserRegistrationPasswordInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserRegistrationPasswordGet(UserRegistrationPasswordGetCallParms userRegistrationPasswordGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userRegistrationPasswordGet", new object[] {
                        userRegistrationPasswordGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserRegistrationPasswordInfo EnduserRegistrationPasswordGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserRegistrationPasswordInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void userRegistrationPasswordGetAsync(UserRegistrationPasswordGetCallParms userRegistrationPasswordGetCallParms) {
            this.userRegistrationPasswordGetAsync(userRegistrationPasswordGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userRegistrationPasswordGetAsync(UserRegistrationPasswordGetCallParms userRegistrationPasswordGetCallParms, object userState) {
            if ((this.userRegistrationPasswordGetOperationCompleted == null)) {
                this.userRegistrationPasswordGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserRegistrationPasswordGetOperationCompleted);
            }
            this.InvokeAsync("userRegistrationPasswordGet", new object[] {
                        userRegistrationPasswordGetCallParms}, this.userRegistrationPasswordGetOperationCompleted, userState);
        }
        
        private void OnuserRegistrationPasswordGetOperationCompleted(object arg) {
            if ((this.userRegistrationPasswordGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userRegistrationPasswordGetCompleted(this, new userRegistrationPasswordGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userRegistrationPasswordAuthenticateReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserRegistrationPasswordResponse userRegistrationPasswordAuthenticate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserRegistrationPasswordAuthenticateCallParms userRegistrationPasswordAuthenticateCallParms) {
            object[] results = this.Invoke("userRegistrationPasswordAuthenticate", new object[] {
                        userRegistrationPasswordAuthenticateCallParms});
            return ((UserRegistrationPasswordResponse)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserRegistrationPasswordAuthenticate(UserRegistrationPasswordAuthenticateCallParms userRegistrationPasswordAuthenticateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userRegistrationPasswordAuthenticate", new object[] {
                        userRegistrationPasswordAuthenticateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserRegistrationPasswordResponse EnduserRegistrationPasswordAuthenticate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserRegistrationPasswordResponse)(results[0]));
        }
        
    ///  <remarks/>
        public void userRegistrationPasswordAuthenticateAsync(UserRegistrationPasswordAuthenticateCallParms userRegistrationPasswordAuthenticateCallParms) {
            this.userRegistrationPasswordAuthenticateAsync(userRegistrationPasswordAuthenticateCallParms, null);
        }
        
    ///  <remarks/>
        public void userRegistrationPasswordAuthenticateAsync(UserRegistrationPasswordAuthenticateCallParms userRegistrationPasswordAuthenticateCallParms, object userState) {
            if ((this.userRegistrationPasswordAuthenticateOperationCompleted == null)) {
                this.userRegistrationPasswordAuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserRegistrationPasswordAuthenticateOperationCompleted);
            }
            this.InvokeAsync("userRegistrationPasswordAuthenticate", new object[] {
                        userRegistrationPasswordAuthenticateCallParms}, this.userRegistrationPasswordAuthenticateOperationCompleted, userState);
        }
        
        private void OnuserRegistrationPasswordAuthenticateOperationCompleted(object arg) {
            if ((this.userRegistrationPasswordAuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userRegistrationPasswordAuthenticateCompleted(this, new userRegistrationPasswordAuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userRegistrationPasswordGetExReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserRegistrationPasswordInfo userRegistrationPasswordGetEx([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserRegistrationPasswordGetExCallParms userRegistrationPasswordGetExCallParms) {
            object[] results = this.Invoke("userRegistrationPasswordGetEx", new object[] {
                        userRegistrationPasswordGetExCallParms});
            return ((UserRegistrationPasswordInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserRegistrationPasswordGetEx(UserRegistrationPasswordGetExCallParms userRegistrationPasswordGetExCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userRegistrationPasswordGetEx", new object[] {
                        userRegistrationPasswordGetExCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserRegistrationPasswordInfo EnduserRegistrationPasswordGetEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserRegistrationPasswordInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void userRegistrationPasswordGetExAsync(UserRegistrationPasswordGetExCallParms userRegistrationPasswordGetExCallParms) {
            this.userRegistrationPasswordGetExAsync(userRegistrationPasswordGetExCallParms, null);
        }
        
    ///  <remarks/>
        public void userRegistrationPasswordGetExAsync(UserRegistrationPasswordGetExCallParms userRegistrationPasswordGetExCallParms, object userState) {
            if ((this.userRegistrationPasswordGetExOperationCompleted == null)) {
                this.userRegistrationPasswordGetExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserRegistrationPasswordGetExOperationCompleted);
            }
            this.InvokeAsync("userRegistrationPasswordGetEx", new object[] {
                        userRegistrationPasswordGetExCallParms}, this.userRegistrationPasswordGetExOperationCompleted, userState);
        }
        
        private void OnuserRegistrationPasswordGetExOperationCompleted(object arg) {
            if ((this.userRegistrationPasswordGetExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userRegistrationPasswordGetExCompleted(this, new userRegistrationPasswordGetExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userRegistrationPasswordAuthenticateExReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserRegistrationPasswordResponse userRegistrationPasswordAuthenticateEx([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserRegistrationPasswordAuthenticateExCallParms userRegistrationPasswordAuthenticateExCallParms) {
            object[] results = this.Invoke("userRegistrationPasswordAuthenticateEx", new object[] {
                        userRegistrationPasswordAuthenticateExCallParms});
            return ((UserRegistrationPasswordResponse)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserRegistrationPasswordAuthenticateEx(UserRegistrationPasswordAuthenticateExCallParms userRegistrationPasswordAuthenticateExCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userRegistrationPasswordAuthenticateEx", new object[] {
                        userRegistrationPasswordAuthenticateExCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserRegistrationPasswordResponse EnduserRegistrationPasswordAuthenticateEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserRegistrationPasswordResponse)(results[0]));
        }
        
    ///  <remarks/>
        public void userRegistrationPasswordAuthenticateExAsync(UserRegistrationPasswordAuthenticateExCallParms userRegistrationPasswordAuthenticateExCallParms) {
            this.userRegistrationPasswordAuthenticateExAsync(userRegistrationPasswordAuthenticateExCallParms, null);
        }
        
    ///  <remarks/>
        public void userRegistrationPasswordAuthenticateExAsync(UserRegistrationPasswordAuthenticateExCallParms userRegistrationPasswordAuthenticateExCallParms, object userState) {
            if ((this.userRegistrationPasswordAuthenticateExOperationCompleted == null)) {
                this.userRegistrationPasswordAuthenticateExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserRegistrationPasswordAuthenticateExOperationCompleted);
            }
            this.InvokeAsync("userRegistrationPasswordAuthenticateEx", new object[] {
                        userRegistrationPasswordAuthenticateExCallParms}, this.userRegistrationPasswordAuthenticateExOperationCompleted, userState);
        }
        
        private void OnuserRegistrationPasswordAuthenticateExOperationCompleted(object arg) {
            if ((this.userRegistrationPasswordAuthenticateExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userRegistrationPasswordAuthenticateExCompleted(this, new userRegistrationPasswordAuthenticateExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialDefinitionCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialDefinitionCreateCallParms smartCredentialDefinitionCreateCallParms) {
            this.Invoke("smartCredentialDefinitionCreate", new object[] {
                        smartCredentialDefinitionCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialDefinitionCreate(SmartCredentialDefinitionCreateCallParms smartCredentialDefinitionCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialDefinitionCreate", new object[] {
                        smartCredentialDefinitionCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialDefinitionCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialDefinitionCreateAsync(SmartCredentialDefinitionCreateCallParms smartCredentialDefinitionCreateCallParms) {
            this.smartCredentialDefinitionCreateAsync(smartCredentialDefinitionCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialDefinitionCreateAsync(SmartCredentialDefinitionCreateCallParms smartCredentialDefinitionCreateCallParms, object userState) {
            if ((this.smartCredentialDefinitionCreateOperationCompleted == null)) {
                this.smartCredentialDefinitionCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialDefinitionCreateOperationCompleted);
            }
            this.InvokeAsync("smartCredentialDefinitionCreate", new object[] {
                        smartCredentialDefinitionCreateCallParms}, this.smartCredentialDefinitionCreateOperationCompleted, userState);
        }
        
        private void OnsmartCredentialDefinitionCreateOperationCompleted(object arg) {
            if ((this.smartCredentialDefinitionCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialDefinitionCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialDefinitionDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialDefinitionDeleteCallParms smartCredentialDefinitionDeleteCallParms) {
            this.Invoke("smartCredentialDefinitionDelete", new object[] {
                        smartCredentialDefinitionDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialDefinitionDelete(SmartCredentialDefinitionDeleteCallParms smartCredentialDefinitionDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialDefinitionDelete", new object[] {
                        smartCredentialDefinitionDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialDefinitionDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialDefinitionDeleteAsync(SmartCredentialDefinitionDeleteCallParms smartCredentialDefinitionDeleteCallParms) {
            this.smartCredentialDefinitionDeleteAsync(smartCredentialDefinitionDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialDefinitionDeleteAsync(SmartCredentialDefinitionDeleteCallParms smartCredentialDefinitionDeleteCallParms, object userState) {
            if ((this.smartCredentialDefinitionDeleteOperationCompleted == null)) {
                this.smartCredentialDefinitionDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialDefinitionDeleteOperationCompleted);
            }
            this.InvokeAsync("smartCredentialDefinitionDelete", new object[] {
                        smartCredentialDefinitionDeleteCallParms}, this.smartCredentialDefinitionDeleteOperationCompleted, userState);
        }
        
        private void OnsmartCredentialDefinitionDeleteOperationCompleted(object arg) {
            if ((this.smartCredentialDefinitionDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialDefinitionDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialDefinitionGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialDefinitionInfo smartCredentialDefinitionGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialDefinitionGetCallParms smartCredentialDefinitionGetCallParms) {
            object[] results = this.Invoke("smartCredentialDefinitionGet", new object[] {
                        smartCredentialDefinitionGetCallParms});
            return ((SmartCredentialDefinitionInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialDefinitionGet(SmartCredentialDefinitionGetCallParms smartCredentialDefinitionGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialDefinitionGet", new object[] {
                        smartCredentialDefinitionGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialDefinitionInfo EndsmartCredentialDefinitionGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialDefinitionInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialDefinitionGetAsync(SmartCredentialDefinitionGetCallParms smartCredentialDefinitionGetCallParms) {
            this.smartCredentialDefinitionGetAsync(smartCredentialDefinitionGetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialDefinitionGetAsync(SmartCredentialDefinitionGetCallParms smartCredentialDefinitionGetCallParms, object userState) {
            if ((this.smartCredentialDefinitionGetOperationCompleted == null)) {
                this.smartCredentialDefinitionGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialDefinitionGetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialDefinitionGet", new object[] {
                        smartCredentialDefinitionGetCallParms}, this.smartCredentialDefinitionGetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialDefinitionGetOperationCompleted(object arg) {
            if ((this.smartCredentialDefinitionGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialDefinitionGetCompleted(this, new smartCredentialDefinitionGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialDefinitionTemplateGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialDefinitionInfo smartCredentialDefinitionTemplateGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialDefinitionTemplateGetCallParms smartCredentialDefinitionTemplateGetCallParms) {
            object[] results = this.Invoke("smartCredentialDefinitionTemplateGet", new object[] {
                        smartCredentialDefinitionTemplateGetCallParms});
            return ((SmartCredentialDefinitionInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialDefinitionTemplateGet(SmartCredentialDefinitionTemplateGetCallParms smartCredentialDefinitionTemplateGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialDefinitionTemplateGet", new object[] {
                        smartCredentialDefinitionTemplateGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialDefinitionInfo EndsmartCredentialDefinitionTemplateGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialDefinitionInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialDefinitionTemplateGetAsync(SmartCredentialDefinitionTemplateGetCallParms smartCredentialDefinitionTemplateGetCallParms) {
            this.smartCredentialDefinitionTemplateGetAsync(smartCredentialDefinitionTemplateGetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialDefinitionTemplateGetAsync(SmartCredentialDefinitionTemplateGetCallParms smartCredentialDefinitionTemplateGetCallParms, object userState) {
            if ((this.smartCredentialDefinitionTemplateGetOperationCompleted == null)) {
                this.smartCredentialDefinitionTemplateGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialDefinitionTemplateGetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialDefinitionTemplateGet", new object[] {
                        smartCredentialDefinitionTemplateGetCallParms}, this.smartCredentialDefinitionTemplateGetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialDefinitionTemplateGetOperationCompleted(object arg) {
            if ((this.smartCredentialDefinitionTemplateGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialDefinitionTemplateGetCompleted(this, new smartCredentialDefinitionTemplateGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialDefinitionSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialDefinitionSetCallParms smartCredentialDefinitionSetCallParms) {
            this.Invoke("smartCredentialDefinitionSet", new object[] {
                        smartCredentialDefinitionSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialDefinitionSet(SmartCredentialDefinitionSetCallParms smartCredentialDefinitionSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialDefinitionSet", new object[] {
                        smartCredentialDefinitionSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialDefinitionSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialDefinitionSetAsync(SmartCredentialDefinitionSetCallParms smartCredentialDefinitionSetCallParms) {
            this.smartCredentialDefinitionSetAsync(smartCredentialDefinitionSetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialDefinitionSetAsync(SmartCredentialDefinitionSetCallParms smartCredentialDefinitionSetCallParms, object userState) {
            if ((this.smartCredentialDefinitionSetOperationCompleted == null)) {
                this.smartCredentialDefinitionSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialDefinitionSetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialDefinitionSet", new object[] {
                        smartCredentialDefinitionSetCallParms}, this.smartCredentialDefinitionSetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialDefinitionSetOperationCompleted(object arg) {
            if ((this.smartCredentialDefinitionSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialDefinitionSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialDefinitionListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialDefinitionInfoList smartCredentialDefinitionList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialDefinitionListCallParms smartCredentialDefinitionListCallParms) {
            object[] results = this.Invoke("smartCredentialDefinitionList", new object[] {
                        smartCredentialDefinitionListCallParms});
            return ((SmartCredentialDefinitionInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialDefinitionList(SmartCredentialDefinitionListCallParms smartCredentialDefinitionListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialDefinitionList", new object[] {
                        smartCredentialDefinitionListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialDefinitionInfoList EndsmartCredentialDefinitionList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialDefinitionInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialDefinitionListAsync(SmartCredentialDefinitionListCallParms smartCredentialDefinitionListCallParms) {
            this.smartCredentialDefinitionListAsync(smartCredentialDefinitionListCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialDefinitionListAsync(SmartCredentialDefinitionListCallParms smartCredentialDefinitionListCallParms, object userState) {
            if ((this.smartCredentialDefinitionListOperationCompleted == null)) {
                this.smartCredentialDefinitionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialDefinitionListOperationCompleted);
            }
            this.InvokeAsync("smartCredentialDefinitionList", new object[] {
                        smartCredentialDefinitionListCallParms}, this.smartCredentialDefinitionListOperationCompleted, userState);
        }
        
        private void OnsmartCredentialDefinitionListOperationCompleted(object arg) {
            if ((this.smartCredentialDefinitionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialDefinitionListCompleted(this, new smartCredentialDefinitionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialDefinitionTemplateListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialDefinitionInfoList smartCredentialDefinitionTemplateList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialDefinitionTemplateListCallParms smartCredentialDefinitionTemplateListCallParms) {
            object[] results = this.Invoke("smartCredentialDefinitionTemplateList", new object[] {
                        smartCredentialDefinitionTemplateListCallParms});
            return ((SmartCredentialDefinitionInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialDefinitionTemplateList(SmartCredentialDefinitionTemplateListCallParms smartCredentialDefinitionTemplateListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialDefinitionTemplateList", new object[] {
                        smartCredentialDefinitionTemplateListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialDefinitionInfoList EndsmartCredentialDefinitionTemplateList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialDefinitionInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialDefinitionTemplateListAsync(SmartCredentialDefinitionTemplateListCallParms smartCredentialDefinitionTemplateListCallParms) {
            this.smartCredentialDefinitionTemplateListAsync(smartCredentialDefinitionTemplateListCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialDefinitionTemplateListAsync(SmartCredentialDefinitionTemplateListCallParms smartCredentialDefinitionTemplateListCallParms, object userState) {
            if ((this.smartCredentialDefinitionTemplateListOperationCompleted == null)) {
                this.smartCredentialDefinitionTemplateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialDefinitionTemplateListOperationCompleted);
            }
            this.InvokeAsync("smartCredentialDefinitionTemplateList", new object[] {
                        smartCredentialDefinitionTemplateListCallParms}, this.smartCredentialDefinitionTemplateListOperationCompleted, userState);
        }
        
        private void OnsmartCredentialDefinitionTemplateListOperationCompleted(object arg) {
            if ((this.smartCredentialDefinitionTemplateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialDefinitionTemplateListCompleted(this, new smartCredentialDefinitionTemplateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialVariableCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialVariableCreateCallParms smartCredentialVariableCreateCallParms) {
            this.Invoke("smartCredentialVariableCreate", new object[] {
                        smartCredentialVariableCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialVariableCreate(SmartCredentialVariableCreateCallParms smartCredentialVariableCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialVariableCreate", new object[] {
                        smartCredentialVariableCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialVariableCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialVariableCreateAsync(SmartCredentialVariableCreateCallParms smartCredentialVariableCreateCallParms) {
            this.smartCredentialVariableCreateAsync(smartCredentialVariableCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialVariableCreateAsync(SmartCredentialVariableCreateCallParms smartCredentialVariableCreateCallParms, object userState) {
            if ((this.smartCredentialVariableCreateOperationCompleted == null)) {
                this.smartCredentialVariableCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialVariableCreateOperationCompleted);
            }
            this.InvokeAsync("smartCredentialVariableCreate", new object[] {
                        smartCredentialVariableCreateCallParms}, this.smartCredentialVariableCreateOperationCompleted, userState);
        }
        
        private void OnsmartCredentialVariableCreateOperationCompleted(object arg) {
            if ((this.smartCredentialVariableCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialVariableCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialVariableDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialVariableDeleteCallParms smartCredentialVariableDeleteCallParms) {
            this.Invoke("smartCredentialVariableDelete", new object[] {
                        smartCredentialVariableDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialVariableDelete(SmartCredentialVariableDeleteCallParms smartCredentialVariableDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialVariableDelete", new object[] {
                        smartCredentialVariableDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialVariableDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialVariableDeleteAsync(SmartCredentialVariableDeleteCallParms smartCredentialVariableDeleteCallParms) {
            this.smartCredentialVariableDeleteAsync(smartCredentialVariableDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialVariableDeleteAsync(SmartCredentialVariableDeleteCallParms smartCredentialVariableDeleteCallParms, object userState) {
            if ((this.smartCredentialVariableDeleteOperationCompleted == null)) {
                this.smartCredentialVariableDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialVariableDeleteOperationCompleted);
            }
            this.InvokeAsync("smartCredentialVariableDelete", new object[] {
                        smartCredentialVariableDeleteCallParms}, this.smartCredentialVariableDeleteOperationCompleted, userState);
        }
        
        private void OnsmartCredentialVariableDeleteOperationCompleted(object arg) {
            if ((this.smartCredentialVariableDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialVariableDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialVariableSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialVariableSetCallParms smartCredentialVariableSetCallParms) {
            this.Invoke("smartCredentialVariableSet", new object[] {
                        smartCredentialVariableSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialVariableSet(SmartCredentialVariableSetCallParms smartCredentialVariableSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialVariableSet", new object[] {
                        smartCredentialVariableSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialVariableSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialVariableSetAsync(SmartCredentialVariableSetCallParms smartCredentialVariableSetCallParms) {
            this.smartCredentialVariableSetAsync(smartCredentialVariableSetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialVariableSetAsync(SmartCredentialVariableSetCallParms smartCredentialVariableSetCallParms, object userState) {
            if ((this.smartCredentialVariableSetOperationCompleted == null)) {
                this.smartCredentialVariableSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialVariableSetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialVariableSet", new object[] {
                        smartCredentialVariableSetCallParms}, this.smartCredentialVariableSetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialVariableSetOperationCompleted(object arg) {
            if ((this.smartCredentialVariableSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialVariableSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialDeliveryGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialDeliveryInfo smartCredentialDeliveryGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialDeliveryGetCallParms smartCredentialDeliveryGetCallParms) {
            object[] results = this.Invoke("smartCredentialDeliveryGet", new object[] {
                        smartCredentialDeliveryGetCallParms});
            return ((SmartCredentialDeliveryInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialDeliveryGet(SmartCredentialDeliveryGetCallParms smartCredentialDeliveryGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialDeliveryGet", new object[] {
                        smartCredentialDeliveryGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialDeliveryInfo EndsmartCredentialDeliveryGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialDeliveryInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialDeliveryGetAsync(SmartCredentialDeliveryGetCallParms smartCredentialDeliveryGetCallParms) {
            this.smartCredentialDeliveryGetAsync(smartCredentialDeliveryGetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialDeliveryGetAsync(SmartCredentialDeliveryGetCallParms smartCredentialDeliveryGetCallParms, object userState) {
            if ((this.smartCredentialDeliveryGetOperationCompleted == null)) {
                this.smartCredentialDeliveryGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialDeliveryGetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialDeliveryGet", new object[] {
                        smartCredentialDeliveryGetCallParms}, this.smartCredentialDeliveryGetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialDeliveryGetOperationCompleted(object arg) {
            if ((this.smartCredentialDeliveryGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialDeliveryGetCompleted(this, new smartCredentialDeliveryGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialDeliveryListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialDeliveryInfoList smartCredentialDeliveryList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] smartCredentialDeliveryListCallParms) {
            object[] results = this.Invoke("smartCredentialDeliveryList", new object[] {
                        smartCredentialDeliveryListCallParms});
            return ((SmartCredentialDeliveryInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialDeliveryList(NameValue[] smartCredentialDeliveryListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialDeliveryList", new object[] {
                        smartCredentialDeliveryListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialDeliveryInfoList EndsmartCredentialDeliveryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialDeliveryInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialDeliveryListAsync(NameValue[] smartCredentialDeliveryListCallParms) {
            this.smartCredentialDeliveryListAsync(smartCredentialDeliveryListCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialDeliveryListAsync(NameValue[] smartCredentialDeliveryListCallParms, object userState) {
            if ((this.smartCredentialDeliveryListOperationCompleted == null)) {
                this.smartCredentialDeliveryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialDeliveryListOperationCompleted);
            }
            this.InvokeAsync("smartCredentialDeliveryList", new object[] {
                        smartCredentialDeliveryListCallParms}, this.smartCredentialDeliveryListOperationCompleted, userState);
        }
        
        private void OnsmartCredentialDeliveryListOperationCompleted(object arg) {
            if ((this.smartCredentialDeliveryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialDeliveryListCompleted(this, new smartCredentialDeliveryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userDeliveryGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserDeliveryInfo userDeliveryGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserDeliveryGetCallParms userDeliveryGetCallParms) {
            object[] results = this.Invoke("userDeliveryGet", new object[] {
                        userDeliveryGetCallParms});
            return ((UserDeliveryInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserDeliveryGet(UserDeliveryGetCallParms userDeliveryGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userDeliveryGet", new object[] {
                        userDeliveryGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserDeliveryInfo EnduserDeliveryGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserDeliveryInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void userDeliveryGetAsync(UserDeliveryGetCallParms userDeliveryGetCallParms) {
            this.userDeliveryGetAsync(userDeliveryGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userDeliveryGetAsync(UserDeliveryGetCallParms userDeliveryGetCallParms, object userState) {
            if ((this.userDeliveryGetOperationCompleted == null)) {
                this.userDeliveryGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserDeliveryGetOperationCompleted);
            }
            this.InvokeAsync("userDeliveryGet", new object[] {
                        userDeliveryGetCallParms}, this.userDeliveryGetOperationCompleted, userState);
        }
        
        private void OnuserDeliveryGetOperationCompleted(object arg) {
            if ((this.userDeliveryGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userDeliveryGetCompleted(this, new userDeliveryGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userDeliveryListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserDeliveryInfoList userDeliveryList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] userDeliveryListCallParms) {
            object[] results = this.Invoke("userDeliveryList", new object[] {
                        userDeliveryListCallParms});
            return ((UserDeliveryInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserDeliveryList(NameValue[] userDeliveryListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userDeliveryList", new object[] {
                        userDeliveryListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserDeliveryInfoList EnduserDeliveryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserDeliveryInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void userDeliveryListAsync(NameValue[] userDeliveryListCallParms) {
            this.userDeliveryListAsync(userDeliveryListCallParms, null);
        }
        
    ///  <remarks/>
        public void userDeliveryListAsync(NameValue[] userDeliveryListCallParms, object userState) {
            if ((this.userDeliveryListOperationCompleted == null)) {
                this.userDeliveryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserDeliveryListOperationCompleted);
            }
            this.InvokeAsync("userDeliveryList", new object[] {
                        userDeliveryListCallParms}, this.userDeliveryListOperationCompleted, userState);
        }
        
        private void OnuserDeliveryListOperationCompleted(object arg) {
            if ((this.userDeliveryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userDeliveryListCompleted(this, new userDeliveryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialAppletCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialAppletCreateCallParms smartCredentialAppletCreateCallParms) {
            this.Invoke("smartCredentialAppletCreate", new object[] {
                        smartCredentialAppletCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialAppletCreate(SmartCredentialAppletCreateCallParms smartCredentialAppletCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialAppletCreate", new object[] {
                        smartCredentialAppletCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialAppletCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialAppletCreateAsync(SmartCredentialAppletCreateCallParms smartCredentialAppletCreateCallParms) {
            this.smartCredentialAppletCreateAsync(smartCredentialAppletCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialAppletCreateAsync(SmartCredentialAppletCreateCallParms smartCredentialAppletCreateCallParms, object userState) {
            if ((this.smartCredentialAppletCreateOperationCompleted == null)) {
                this.smartCredentialAppletCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialAppletCreateOperationCompleted);
            }
            this.InvokeAsync("smartCredentialAppletCreate", new object[] {
                        smartCredentialAppletCreateCallParms}, this.smartCredentialAppletCreateOperationCompleted, userState);
        }
        
        private void OnsmartCredentialAppletCreateOperationCompleted(object arg) {
            if ((this.smartCredentialAppletCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialAppletCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialAppletDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialAppletDeleteCallParms smartCredentialAppletDeleteCallParms) {
            this.Invoke("smartCredentialAppletDelete", new object[] {
                        smartCredentialAppletDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialAppletDelete(SmartCredentialAppletDeleteCallParms smartCredentialAppletDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialAppletDelete", new object[] {
                        smartCredentialAppletDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialAppletDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialAppletDeleteAsync(SmartCredentialAppletDeleteCallParms smartCredentialAppletDeleteCallParms) {
            this.smartCredentialAppletDeleteAsync(smartCredentialAppletDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialAppletDeleteAsync(SmartCredentialAppletDeleteCallParms smartCredentialAppletDeleteCallParms, object userState) {
            if ((this.smartCredentialAppletDeleteOperationCompleted == null)) {
                this.smartCredentialAppletDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialAppletDeleteOperationCompleted);
            }
            this.InvokeAsync("smartCredentialAppletDelete", new object[] {
                        smartCredentialAppletDeleteCallParms}, this.smartCredentialAppletDeleteOperationCompleted, userState);
        }
        
        private void OnsmartCredentialAppletDeleteOperationCompleted(object arg) {
            if ((this.smartCredentialAppletDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialAppletDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialAppletGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialAppletInfo smartCredentialAppletGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialAppletGetCallParms smartCredentialAppletGetCallParms) {
            object[] results = this.Invoke("smartCredentialAppletGet", new object[] {
                        smartCredentialAppletGetCallParms});
            return ((SmartCredentialAppletInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialAppletGet(SmartCredentialAppletGetCallParms smartCredentialAppletGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialAppletGet", new object[] {
                        smartCredentialAppletGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialAppletInfo EndsmartCredentialAppletGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialAppletInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialAppletGetAsync(SmartCredentialAppletGetCallParms smartCredentialAppletGetCallParms) {
            this.smartCredentialAppletGetAsync(smartCredentialAppletGetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialAppletGetAsync(SmartCredentialAppletGetCallParms smartCredentialAppletGetCallParms, object userState) {
            if ((this.smartCredentialAppletGetOperationCompleted == null)) {
                this.smartCredentialAppletGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialAppletGetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialAppletGet", new object[] {
                        smartCredentialAppletGetCallParms}, this.smartCredentialAppletGetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialAppletGetOperationCompleted(object arg) {
            if ((this.smartCredentialAppletGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialAppletGetCompleted(this, new smartCredentialAppletGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialAppletSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialAppletSetCallParms smartCredentialAppletSetCallParms) {
            this.Invoke("smartCredentialAppletSet", new object[] {
                        smartCredentialAppletSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialAppletSet(SmartCredentialAppletSetCallParms smartCredentialAppletSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialAppletSet", new object[] {
                        smartCredentialAppletSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialAppletSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialAppletSetAsync(SmartCredentialAppletSetCallParms smartCredentialAppletSetCallParms) {
            this.smartCredentialAppletSetAsync(smartCredentialAppletSetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialAppletSetAsync(SmartCredentialAppletSetCallParms smartCredentialAppletSetCallParms, object userState) {
            if ((this.smartCredentialAppletSetOperationCompleted == null)) {
                this.smartCredentialAppletSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialAppletSetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialAppletSet", new object[] {
                        smartCredentialAppletSetCallParms}, this.smartCredentialAppletSetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialAppletSetOperationCompleted(object arg) {
            if ((this.smartCredentialAppletSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialAppletSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialAppletListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialAppletInfoList smartCredentialAppletList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialAppletListCallParms smartCredentialAppletListCallParms) {
            object[] results = this.Invoke("smartCredentialAppletList", new object[] {
                        smartCredentialAppletListCallParms});
            return ((SmartCredentialAppletInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialAppletList(SmartCredentialAppletListCallParms smartCredentialAppletListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialAppletList", new object[] {
                        smartCredentialAppletListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialAppletInfoList EndsmartCredentialAppletList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialAppletInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialAppletListAsync(SmartCredentialAppletListCallParms smartCredentialAppletListCallParms) {
            this.smartCredentialAppletListAsync(smartCredentialAppletListCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialAppletListAsync(SmartCredentialAppletListCallParms smartCredentialAppletListCallParms, object userState) {
            if ((this.smartCredentialAppletListOperationCompleted == null)) {
                this.smartCredentialAppletListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialAppletListOperationCompleted);
            }
            this.InvokeAsync("smartCredentialAppletList", new object[] {
                        smartCredentialAppletListCallParms}, this.smartCredentialAppletListOperationCompleted, userState);
        }
        
        private void OnsmartCredentialAppletListOperationCompleted(object arg) {
            if ((this.smartCredentialAppletListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialAppletListCompleted(this, new smartCredentialAppletListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialAppletTemplateGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialAppletInfo smartCredentialAppletTemplateGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialAppletTemplateGetCallParms smartCredentialAppletTemplateGetCallParms) {
            object[] results = this.Invoke("smartCredentialAppletTemplateGet", new object[] {
                        smartCredentialAppletTemplateGetCallParms});
            return ((SmartCredentialAppletInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialAppletTemplateGet(SmartCredentialAppletTemplateGetCallParms smartCredentialAppletTemplateGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialAppletTemplateGet", new object[] {
                        smartCredentialAppletTemplateGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialAppletInfo EndsmartCredentialAppletTemplateGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialAppletInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialAppletTemplateGetAsync(SmartCredentialAppletTemplateGetCallParms smartCredentialAppletTemplateGetCallParms) {
            this.smartCredentialAppletTemplateGetAsync(smartCredentialAppletTemplateGetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialAppletTemplateGetAsync(SmartCredentialAppletTemplateGetCallParms smartCredentialAppletTemplateGetCallParms, object userState) {
            if ((this.smartCredentialAppletTemplateGetOperationCompleted == null)) {
                this.smartCredentialAppletTemplateGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialAppletTemplateGetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialAppletTemplateGet", new object[] {
                        smartCredentialAppletTemplateGetCallParms}, this.smartCredentialAppletTemplateGetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialAppletTemplateGetOperationCompleted(object arg) {
            if ((this.smartCredentialAppletTemplateGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialAppletTemplateGetCompleted(this, new smartCredentialAppletTemplateGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialAppletTemplateListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialAppletInfoList smartCredentialAppletTemplateList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialAppletTemplateListCallParms smartCredentialAppletTemplateListCallParms) {
            object[] results = this.Invoke("smartCredentialAppletTemplateList", new object[] {
                        smartCredentialAppletTemplateListCallParms});
            return ((SmartCredentialAppletInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialAppletTemplateList(SmartCredentialAppletTemplateListCallParms smartCredentialAppletTemplateListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialAppletTemplateList", new object[] {
                        smartCredentialAppletTemplateListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialAppletInfoList EndsmartCredentialAppletTemplateList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialAppletInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialAppletTemplateListAsync(SmartCredentialAppletTemplateListCallParms smartCredentialAppletTemplateListCallParms) {
            this.smartCredentialAppletTemplateListAsync(smartCredentialAppletTemplateListCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialAppletTemplateListAsync(SmartCredentialAppletTemplateListCallParms smartCredentialAppletTemplateListCallParms, object userState) {
            if ((this.smartCredentialAppletTemplateListOperationCompleted == null)) {
                this.smartCredentialAppletTemplateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialAppletTemplateListOperationCompleted);
            }
            this.InvokeAsync("smartCredentialAppletTemplateList", new object[] {
                        smartCredentialAppletTemplateListCallParms}, this.smartCredentialAppletTemplateListOperationCompleted, userState);
        }
        
        private void OnsmartCredentialAppletTemplateListOperationCompleted(object arg) {
            if ((this.smartCredentialAppletTemplateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialAppletTemplateListCompleted(this, new smartCredentialAppletTemplateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void pacsCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PACSCreateCallParms pacsCreateCallParms) {
            this.Invoke("pacsCreate", new object[] {
                        pacsCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpacsCreate(PACSCreateCallParms pacsCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("pacsCreate", new object[] {
                        pacsCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndpacsCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void pacsCreateAsync(PACSCreateCallParms pacsCreateCallParms) {
            this.pacsCreateAsync(pacsCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void pacsCreateAsync(PACSCreateCallParms pacsCreateCallParms, object userState) {
            if ((this.pacsCreateOperationCompleted == null)) {
                this.pacsCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpacsCreateOperationCompleted);
            }
            this.InvokeAsync("pacsCreate", new object[] {
                        pacsCreateCallParms}, this.pacsCreateOperationCompleted, userState);
        }
        
        private void OnpacsCreateOperationCompleted(object arg) {
            if ((this.pacsCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pacsCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void pacsDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PACSDeleteCallParms pacsDeleteCallParms) {
            this.Invoke("pacsDelete", new object[] {
                        pacsDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpacsDelete(PACSDeleteCallParms pacsDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("pacsDelete", new object[] {
                        pacsDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndpacsDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void pacsDeleteAsync(PACSDeleteCallParms pacsDeleteCallParms) {
            this.pacsDeleteAsync(pacsDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void pacsDeleteAsync(PACSDeleteCallParms pacsDeleteCallParms, object userState) {
            if ((this.pacsDeleteOperationCompleted == null)) {
                this.pacsDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpacsDeleteOperationCompleted);
            }
            this.InvokeAsync("pacsDelete", new object[] {
                        pacsDeleteCallParms}, this.pacsDeleteOperationCompleted, userState);
        }
        
        private void OnpacsDeleteOperationCompleted(object arg) {
            if ((this.pacsDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pacsDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("pacsGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public PACSInfo pacsGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PACSGetCallParms pacsGetCallParms) {
            object[] results = this.Invoke("pacsGet", new object[] {
                        pacsGetCallParms});
            return ((PACSInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpacsGet(PACSGetCallParms pacsGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("pacsGet", new object[] {
                        pacsGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public PACSInfo EndpacsGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PACSInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void pacsGetAsync(PACSGetCallParms pacsGetCallParms) {
            this.pacsGetAsync(pacsGetCallParms, null);
        }
        
    ///  <remarks/>
        public void pacsGetAsync(PACSGetCallParms pacsGetCallParms, object userState) {
            if ((this.pacsGetOperationCompleted == null)) {
                this.pacsGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpacsGetOperationCompleted);
            }
            this.InvokeAsync("pacsGet", new object[] {
                        pacsGetCallParms}, this.pacsGetOperationCompleted, userState);
        }
        
        private void OnpacsGetOperationCompleted(object arg) {
            if ((this.pacsGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pacsGetCompleted(this, new pacsGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void pacsSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PACSSetCallParms pacsSetCallParms) {
            this.Invoke("pacsSet", new object[] {
                        pacsSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpacsSet(PACSSetCallParms pacsSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("pacsSet", new object[] {
                        pacsSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndpacsSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void pacsSetAsync(PACSSetCallParms pacsSetCallParms) {
            this.pacsSetAsync(pacsSetCallParms, null);
        }
        
    ///  <remarks/>
        public void pacsSetAsync(PACSSetCallParms pacsSetCallParms, object userState) {
            if ((this.pacsSetOperationCompleted == null)) {
                this.pacsSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpacsSetOperationCompleted);
            }
            this.InvokeAsync("pacsSet", new object[] {
                        pacsSetCallParms}, this.pacsSetOperationCompleted, userState);
        }
        
        private void OnpacsSetOperationCompleted(object arg) {
            if ((this.pacsSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pacsSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("pacsListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public PACSInfoList pacsList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PACSListCallParms pacsListCallParms) {
            object[] results = this.Invoke("pacsList", new object[] {
                        pacsListCallParms});
            return ((PACSInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpacsList(PACSListCallParms pacsListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("pacsList", new object[] {
                        pacsListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public PACSInfoList EndpacsList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PACSInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void pacsListAsync(PACSListCallParms pacsListCallParms) {
            this.pacsListAsync(pacsListCallParms, null);
        }
        
    ///  <remarks/>
        public void pacsListAsync(PACSListCallParms pacsListCallParms, object userState) {
            if ((this.pacsListOperationCompleted == null)) {
                this.pacsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpacsListOperationCompleted);
            }
            this.InvokeAsync("pacsList", new object[] {
                        pacsListCallParms}, this.pacsListOperationCompleted, userState);
        }
        
        private void OnpacsListOperationCompleted(object arg) {
            if ((this.pacsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pacsListCompleted(this, new pacsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void proxyCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ProxyCreateCallParms proxyCreateCallParms) {
            this.Invoke("proxyCreate", new object[] {
                        proxyCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginproxyCreate(ProxyCreateCallParms proxyCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("proxyCreate", new object[] {
                        proxyCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndproxyCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void proxyCreateAsync(ProxyCreateCallParms proxyCreateCallParms) {
            this.proxyCreateAsync(proxyCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void proxyCreateAsync(ProxyCreateCallParms proxyCreateCallParms, object userState) {
            if ((this.proxyCreateOperationCompleted == null)) {
                this.proxyCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnproxyCreateOperationCompleted);
            }
            this.InvokeAsync("proxyCreate", new object[] {
                        proxyCreateCallParms}, this.proxyCreateOperationCompleted, userState);
        }
        
        private void OnproxyCreateOperationCompleted(object arg) {
            if ((this.proxyCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.proxyCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void proxyDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ProxyDeleteCallParms proxyDeleteCallParms) {
            this.Invoke("proxyDelete", new object[] {
                        proxyDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginproxyDelete(ProxyDeleteCallParms proxyDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("proxyDelete", new object[] {
                        proxyDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndproxyDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void proxyDeleteAsync(ProxyDeleteCallParms proxyDeleteCallParms) {
            this.proxyDeleteAsync(proxyDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void proxyDeleteAsync(ProxyDeleteCallParms proxyDeleteCallParms, object userState) {
            if ((this.proxyDeleteOperationCompleted == null)) {
                this.proxyDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnproxyDeleteOperationCompleted);
            }
            this.InvokeAsync("proxyDelete", new object[] {
                        proxyDeleteCallParms}, this.proxyDeleteOperationCompleted, userState);
        }
        
        private void OnproxyDeleteOperationCompleted(object arg) {
            if ((this.proxyDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.proxyDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("proxyGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public ProxyInfo proxyGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ProxyGetCallParms proxyGetCallParms) {
            object[] results = this.Invoke("proxyGet", new object[] {
                        proxyGetCallParms});
            return ((ProxyInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginproxyGet(ProxyGetCallParms proxyGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("proxyGet", new object[] {
                        proxyGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public ProxyInfo EndproxyGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProxyInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void proxyGetAsync(ProxyGetCallParms proxyGetCallParms) {
            this.proxyGetAsync(proxyGetCallParms, null);
        }
        
    ///  <remarks/>
        public void proxyGetAsync(ProxyGetCallParms proxyGetCallParms, object userState) {
            if ((this.proxyGetOperationCompleted == null)) {
                this.proxyGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnproxyGetOperationCompleted);
            }
            this.InvokeAsync("proxyGet", new object[] {
                        proxyGetCallParms}, this.proxyGetOperationCompleted, userState);
        }
        
        private void OnproxyGetOperationCompleted(object arg) {
            if ((this.proxyGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.proxyGetCompleted(this, new proxyGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void proxySet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ProxySetCallParms proxySetCallParms) {
            this.Invoke("proxySet", new object[] {
                        proxySetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginproxySet(ProxySetCallParms proxySetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("proxySet", new object[] {
                        proxySetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndproxySet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void proxySetAsync(ProxySetCallParms proxySetCallParms) {
            this.proxySetAsync(proxySetCallParms, null);
        }
        
    ///  <remarks/>
        public void proxySetAsync(ProxySetCallParms proxySetCallParms, object userState) {
            if ((this.proxySetOperationCompleted == null)) {
                this.proxySetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnproxySetOperationCompleted);
            }
            this.InvokeAsync("proxySet", new object[] {
                        proxySetCallParms}, this.proxySetOperationCompleted, userState);
        }
        
        private void OnproxySetOperationCompleted(object arg) {
            if ((this.proxySetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.proxySetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("proxyListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public ProxyInfoList proxyList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ProxyListCallParms proxyListCallParms) {
            object[] results = this.Invoke("proxyList", new object[] {
                        proxyListCallParms});
            return ((ProxyInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginproxyList(ProxyListCallParms proxyListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("proxyList", new object[] {
                        proxyListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public ProxyInfoList EndproxyList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProxyInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void proxyListAsync(ProxyListCallParms proxyListCallParms) {
            this.proxyListAsync(proxyListCallParms, null);
        }
        
    ///  <remarks/>
        public void proxyListAsync(ProxyListCallParms proxyListCallParms, object userState) {
            if ((this.proxyListOperationCompleted == null)) {
                this.proxyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnproxyListOperationCompleted);
            }
            this.InvokeAsync("proxyList", new object[] {
                        proxyListCallParms}, this.proxyListOperationCompleted, userState);
        }
        
        private void OnproxyListOperationCompleted(object arg) {
            if ((this.proxyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.proxyListCompleted(this, new proxyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("riskEngineGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public RiskEngineInfo riskEngineGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] RiskEngineGetCallParms riskEngineGetCallParms) {
            object[] results = this.Invoke("riskEngineGet", new object[] {
                        riskEngineGetCallParms});
            return ((RiskEngineInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginriskEngineGet(RiskEngineGetCallParms riskEngineGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("riskEngineGet", new object[] {
                        riskEngineGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public RiskEngineInfo EndriskEngineGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RiskEngineInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void riskEngineGetAsync(RiskEngineGetCallParms riskEngineGetCallParms) {
            this.riskEngineGetAsync(riskEngineGetCallParms, null);
        }
        
    ///  <remarks/>
        public void riskEngineGetAsync(RiskEngineGetCallParms riskEngineGetCallParms, object userState) {
            if ((this.riskEngineGetOperationCompleted == null)) {
                this.riskEngineGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnriskEngineGetOperationCompleted);
            }
            this.InvokeAsync("riskEngineGet", new object[] {
                        riskEngineGetCallParms}, this.riskEngineGetOperationCompleted, userState);
        }
        
        private void OnriskEngineGetOperationCompleted(object arg) {
            if ((this.riskEngineGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.riskEngineGetCompleted(this, new riskEngineGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("riskEngineListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public RiskEngineInfoList riskEngineList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] riskEngineListCallParms) {
            object[] results = this.Invoke("riskEngineList", new object[] {
                        riskEngineListCallParms});
            return ((RiskEngineInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginriskEngineList(NameValue[] riskEngineListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("riskEngineList", new object[] {
                        riskEngineListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public RiskEngineInfoList EndriskEngineList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RiskEngineInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void riskEngineListAsync(NameValue[] riskEngineListCallParms) {
            this.riskEngineListAsync(riskEngineListCallParms, null);
        }
        
    ///  <remarks/>
        public void riskEngineListAsync(NameValue[] riskEngineListCallParms, object userState) {
            if ((this.riskEngineListOperationCompleted == null)) {
                this.riskEngineListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnriskEngineListOperationCompleted);
            }
            this.InvokeAsync("riskEngineList", new object[] {
                        riskEngineListCallParms}, this.riskEngineListOperationCompleted, userState);
        }
        
        private void OnriskEngineListOperationCompleted(object arg) {
            if ((this.riskEngineListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.riskEngineListCompleted(this, new riskEngineListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("biometricVendorGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public BiometricVendorInfo biometricVendorGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] BiometricVendorGetCallParms biometricVendorGetCallParms) {
            object[] results = this.Invoke("biometricVendorGet", new object[] {
                        biometricVendorGetCallParms});
            return ((BiometricVendorInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginbiometricVendorGet(BiometricVendorGetCallParms biometricVendorGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("biometricVendorGet", new object[] {
                        biometricVendorGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public BiometricVendorInfo EndbiometricVendorGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BiometricVendorInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void biometricVendorGetAsync(BiometricVendorGetCallParms biometricVendorGetCallParms) {
            this.biometricVendorGetAsync(biometricVendorGetCallParms, null);
        }
        
    ///  <remarks/>
        public void biometricVendorGetAsync(BiometricVendorGetCallParms biometricVendorGetCallParms, object userState) {
            if ((this.biometricVendorGetOperationCompleted == null)) {
                this.biometricVendorGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbiometricVendorGetOperationCompleted);
            }
            this.InvokeAsync("biometricVendorGet", new object[] {
                        biometricVendorGetCallParms}, this.biometricVendorGetOperationCompleted, userState);
        }
        
        private void OnbiometricVendorGetOperationCompleted(object arg) {
            if ((this.biometricVendorGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.biometricVendorGetCompleted(this, new biometricVendorGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("biometricVendorListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public BiometricVendorInfoList biometricVendorList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] biometricVendorListCallParms) {
            object[] results = this.Invoke("biometricVendorList", new object[] {
                        biometricVendorListCallParms});
            return ((BiometricVendorInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginbiometricVendorList(NameValue[] biometricVendorListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("biometricVendorList", new object[] {
                        biometricVendorListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public BiometricVendorInfoList EndbiometricVendorList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BiometricVendorInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void biometricVendorListAsync(NameValue[] biometricVendorListCallParms) {
            this.biometricVendorListAsync(biometricVendorListCallParms, null);
        }
        
    ///  <remarks/>
        public void biometricVendorListAsync(NameValue[] biometricVendorListCallParms, object userState) {
            if ((this.biometricVendorListOperationCompleted == null)) {
                this.biometricVendorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbiometricVendorListOperationCompleted);
            }
            this.InvokeAsync("biometricVendorList", new object[] {
                        biometricVendorListCallParms}, this.biometricVendorListOperationCompleted, userState);
        }
        
        private void OnbiometricVendorListOperationCompleted(object arg) {
            if ((this.biometricVendorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.biometricVendorListCompleted(this, new biometricVendorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialGraphicCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialGraphicCreateCallParms smartCredentialGraphicCreateCallParms) {
            this.Invoke("smartCredentialGraphicCreate", new object[] {
                        smartCredentialGraphicCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialGraphicCreate(SmartCredentialGraphicCreateCallParms smartCredentialGraphicCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialGraphicCreate", new object[] {
                        smartCredentialGraphicCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialGraphicCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialGraphicCreateAsync(SmartCredentialGraphicCreateCallParms smartCredentialGraphicCreateCallParms) {
            this.smartCredentialGraphicCreateAsync(smartCredentialGraphicCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialGraphicCreateAsync(SmartCredentialGraphicCreateCallParms smartCredentialGraphicCreateCallParms, object userState) {
            if ((this.smartCredentialGraphicCreateOperationCompleted == null)) {
                this.smartCredentialGraphicCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialGraphicCreateOperationCompleted);
            }
            this.InvokeAsync("smartCredentialGraphicCreate", new object[] {
                        smartCredentialGraphicCreateCallParms}, this.smartCredentialGraphicCreateOperationCompleted, userState);
        }
        
        private void OnsmartCredentialGraphicCreateOperationCompleted(object arg) {
            if ((this.smartCredentialGraphicCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialGraphicCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialGraphicDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialGraphicDeleteCallParms smartCredentialGraphicDeleteCallParms) {
            this.Invoke("smartCredentialGraphicDelete", new object[] {
                        smartCredentialGraphicDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialGraphicDelete(SmartCredentialGraphicDeleteCallParms smartCredentialGraphicDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialGraphicDelete", new object[] {
                        smartCredentialGraphicDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialGraphicDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialGraphicDeleteAsync(SmartCredentialGraphicDeleteCallParms smartCredentialGraphicDeleteCallParms) {
            this.smartCredentialGraphicDeleteAsync(smartCredentialGraphicDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialGraphicDeleteAsync(SmartCredentialGraphicDeleteCallParms smartCredentialGraphicDeleteCallParms, object userState) {
            if ((this.smartCredentialGraphicDeleteOperationCompleted == null)) {
                this.smartCredentialGraphicDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialGraphicDeleteOperationCompleted);
            }
            this.InvokeAsync("smartCredentialGraphicDelete", new object[] {
                        smartCredentialGraphicDeleteCallParms}, this.smartCredentialGraphicDeleteOperationCompleted, userState);
        }
        
        private void OnsmartCredentialGraphicDeleteOperationCompleted(object arg) {
            if ((this.smartCredentialGraphicDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialGraphicDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialGraphicGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialGraphicInfo smartCredentialGraphicGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialGraphicGetCallParms smartCredentialGraphicGetCallParms) {
            object[] results = this.Invoke("smartCredentialGraphicGet", new object[] {
                        smartCredentialGraphicGetCallParms});
            return ((SmartCredentialGraphicInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialGraphicGet(SmartCredentialGraphicGetCallParms smartCredentialGraphicGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialGraphicGet", new object[] {
                        smartCredentialGraphicGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialGraphicInfo EndsmartCredentialGraphicGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialGraphicInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialGraphicGetAsync(SmartCredentialGraphicGetCallParms smartCredentialGraphicGetCallParms) {
            this.smartCredentialGraphicGetAsync(smartCredentialGraphicGetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialGraphicGetAsync(SmartCredentialGraphicGetCallParms smartCredentialGraphicGetCallParms, object userState) {
            if ((this.smartCredentialGraphicGetOperationCompleted == null)) {
                this.smartCredentialGraphicGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialGraphicGetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialGraphicGet", new object[] {
                        smartCredentialGraphicGetCallParms}, this.smartCredentialGraphicGetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialGraphicGetOperationCompleted(object arg) {
            if ((this.smartCredentialGraphicGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialGraphicGetCompleted(this, new smartCredentialGraphicGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialGraphicSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialGraphicSetCallParms smartCredentialGraphicSetCallParms) {
            this.Invoke("smartCredentialGraphicSet", new object[] {
                        smartCredentialGraphicSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialGraphicSet(SmartCredentialGraphicSetCallParms smartCredentialGraphicSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialGraphicSet", new object[] {
                        smartCredentialGraphicSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialGraphicSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialGraphicSetAsync(SmartCredentialGraphicSetCallParms smartCredentialGraphicSetCallParms) {
            this.smartCredentialGraphicSetAsync(smartCredentialGraphicSetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialGraphicSetAsync(SmartCredentialGraphicSetCallParms smartCredentialGraphicSetCallParms, object userState) {
            if ((this.smartCredentialGraphicSetOperationCompleted == null)) {
                this.smartCredentialGraphicSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialGraphicSetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialGraphicSet", new object[] {
                        smartCredentialGraphicSetCallParms}, this.smartCredentialGraphicSetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialGraphicSetOperationCompleted(object arg) {
            if ((this.smartCredentialGraphicSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialGraphicSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialGraphicListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialGraphicInfoList smartCredentialGraphicList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialGraphicListCallParms smartCredentialGraphicListCallParms) {
            object[] results = this.Invoke("smartCredentialGraphicList", new object[] {
                        smartCredentialGraphicListCallParms});
            return ((SmartCredentialGraphicInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialGraphicList(SmartCredentialGraphicListCallParms smartCredentialGraphicListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialGraphicList", new object[] {
                        smartCredentialGraphicListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialGraphicInfoList EndsmartCredentialGraphicList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialGraphicInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialGraphicListAsync(SmartCredentialGraphicListCallParms smartCredentialGraphicListCallParms) {
            this.smartCredentialGraphicListAsync(smartCredentialGraphicListCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialGraphicListAsync(SmartCredentialGraphicListCallParms smartCredentialGraphicListCallParms, object userState) {
            if ((this.smartCredentialGraphicListOperationCompleted == null)) {
                this.smartCredentialGraphicListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialGraphicListOperationCompleted);
            }
            this.InvokeAsync("smartCredentialGraphicList", new object[] {
                        smartCredentialGraphicListCallParms}, this.smartCredentialGraphicListOperationCompleted, userState);
        }
        
        private void OnsmartCredentialGraphicListOperationCompleted(object arg) {
            if ((this.smartCredentialGraphicListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialGraphicListCompleted(this, new smartCredentialGraphicListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void digitalIdConfigCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] DigitalIdConfigCreateCallParms digitalIdConfigCreateCallParms) {
            this.Invoke("digitalIdConfigCreate", new object[] {
                        digitalIdConfigCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegindigitalIdConfigCreate(DigitalIdConfigCreateCallParms digitalIdConfigCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("digitalIdConfigCreate", new object[] {
                        digitalIdConfigCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnddigitalIdConfigCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void digitalIdConfigCreateAsync(DigitalIdConfigCreateCallParms digitalIdConfigCreateCallParms) {
            this.digitalIdConfigCreateAsync(digitalIdConfigCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void digitalIdConfigCreateAsync(DigitalIdConfigCreateCallParms digitalIdConfigCreateCallParms, object userState) {
            if ((this.digitalIdConfigCreateOperationCompleted == null)) {
                this.digitalIdConfigCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndigitalIdConfigCreateOperationCompleted);
            }
            this.InvokeAsync("digitalIdConfigCreate", new object[] {
                        digitalIdConfigCreateCallParms}, this.digitalIdConfigCreateOperationCompleted, userState);
        }
        
        private void OndigitalIdConfigCreateOperationCompleted(object arg) {
            if ((this.digitalIdConfigCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.digitalIdConfigCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void digitalIdConfigDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] DigitalIdConfigDeleteCallParms digitalIdConfigDeleteCallParms) {
            this.Invoke("digitalIdConfigDelete", new object[] {
                        digitalIdConfigDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegindigitalIdConfigDelete(DigitalIdConfigDeleteCallParms digitalIdConfigDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("digitalIdConfigDelete", new object[] {
                        digitalIdConfigDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnddigitalIdConfigDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void digitalIdConfigDeleteAsync(DigitalIdConfigDeleteCallParms digitalIdConfigDeleteCallParms) {
            this.digitalIdConfigDeleteAsync(digitalIdConfigDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void digitalIdConfigDeleteAsync(DigitalIdConfigDeleteCallParms digitalIdConfigDeleteCallParms, object userState) {
            if ((this.digitalIdConfigDeleteOperationCompleted == null)) {
                this.digitalIdConfigDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndigitalIdConfigDeleteOperationCompleted);
            }
            this.InvokeAsync("digitalIdConfigDelete", new object[] {
                        digitalIdConfigDeleteCallParms}, this.digitalIdConfigDeleteOperationCompleted, userState);
        }
        
        private void OndigitalIdConfigDeleteOperationCompleted(object arg) {
            if ((this.digitalIdConfigDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.digitalIdConfigDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("digitalIdConfigGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public DigitalIdConfigInfo digitalIdConfigGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] DigitalIdConfigGetCallParms digitalIdConfigGetCallParms) {
            object[] results = this.Invoke("digitalIdConfigGet", new object[] {
                        digitalIdConfigGetCallParms});
            return ((DigitalIdConfigInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegindigitalIdConfigGet(DigitalIdConfigGetCallParms digitalIdConfigGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("digitalIdConfigGet", new object[] {
                        digitalIdConfigGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public DigitalIdConfigInfo EnddigitalIdConfigGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DigitalIdConfigInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void digitalIdConfigGetAsync(DigitalIdConfigGetCallParms digitalIdConfigGetCallParms) {
            this.digitalIdConfigGetAsync(digitalIdConfigGetCallParms, null);
        }
        
    ///  <remarks/>
        public void digitalIdConfigGetAsync(DigitalIdConfigGetCallParms digitalIdConfigGetCallParms, object userState) {
            if ((this.digitalIdConfigGetOperationCompleted == null)) {
                this.digitalIdConfigGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OndigitalIdConfigGetOperationCompleted);
            }
            this.InvokeAsync("digitalIdConfigGet", new object[] {
                        digitalIdConfigGetCallParms}, this.digitalIdConfigGetOperationCompleted, userState);
        }
        
        private void OndigitalIdConfigGetOperationCompleted(object arg) {
            if ((this.digitalIdConfigGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.digitalIdConfigGetCompleted(this, new digitalIdConfigGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void digitalIdConfigSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] DigitalIdConfigSetCallParms digitalIdConfigSetCallParms) {
            this.Invoke("digitalIdConfigSet", new object[] {
                        digitalIdConfigSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegindigitalIdConfigSet(DigitalIdConfigSetCallParms digitalIdConfigSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("digitalIdConfigSet", new object[] {
                        digitalIdConfigSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnddigitalIdConfigSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void digitalIdConfigSetAsync(DigitalIdConfigSetCallParms digitalIdConfigSetCallParms) {
            this.digitalIdConfigSetAsync(digitalIdConfigSetCallParms, null);
        }
        
    ///  <remarks/>
        public void digitalIdConfigSetAsync(DigitalIdConfigSetCallParms digitalIdConfigSetCallParms, object userState) {
            if ((this.digitalIdConfigSetOperationCompleted == null)) {
                this.digitalIdConfigSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OndigitalIdConfigSetOperationCompleted);
            }
            this.InvokeAsync("digitalIdConfigSet", new object[] {
                        digitalIdConfigSetCallParms}, this.digitalIdConfigSetOperationCompleted, userState);
        }
        
        private void OndigitalIdConfigSetOperationCompleted(object arg) {
            if ((this.digitalIdConfigSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.digitalIdConfigSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("digitalIdConfigListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public DigitalIdConfigInfoList digitalIdConfigList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] DigitalIdConfigListCallParms digitalIdConfigListCallParms) {
            object[] results = this.Invoke("digitalIdConfigList", new object[] {
                        digitalIdConfigListCallParms});
            return ((DigitalIdConfigInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegindigitalIdConfigList(DigitalIdConfigListCallParms digitalIdConfigListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("digitalIdConfigList", new object[] {
                        digitalIdConfigListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public DigitalIdConfigInfoList EnddigitalIdConfigList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DigitalIdConfigInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void digitalIdConfigListAsync(DigitalIdConfigListCallParms digitalIdConfigListCallParms) {
            this.digitalIdConfigListAsync(digitalIdConfigListCallParms, null);
        }
        
    ///  <remarks/>
        public void digitalIdConfigListAsync(DigitalIdConfigListCallParms digitalIdConfigListCallParms, object userState) {
            if ((this.digitalIdConfigListOperationCompleted == null)) {
                this.digitalIdConfigListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndigitalIdConfigListOperationCompleted);
            }
            this.InvokeAsync("digitalIdConfigList", new object[] {
                        digitalIdConfigListCallParms}, this.digitalIdConfigListOperationCompleted, userState);
        }
        
        private void OndigitalIdConfigListOperationCompleted(object arg) {
            if ((this.digitalIdConfigListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.digitalIdConfigListCompleted(this, new digitalIdConfigListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("digitalIdConfigTemplateListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public DigitalIdConfigInfoList digitalIdConfigTemplateList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] DigitalIdConfigTemplateListCallParms digitalIdConfigTemplateListCallParms) {
            object[] results = this.Invoke("digitalIdConfigTemplateList", new object[] {
                        digitalIdConfigTemplateListCallParms});
            return ((DigitalIdConfigInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegindigitalIdConfigTemplateList(DigitalIdConfigTemplateListCallParms digitalIdConfigTemplateListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("digitalIdConfigTemplateList", new object[] {
                        digitalIdConfigTemplateListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public DigitalIdConfigInfoList EnddigitalIdConfigTemplateList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DigitalIdConfigInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void digitalIdConfigTemplateListAsync(DigitalIdConfigTemplateListCallParms digitalIdConfigTemplateListCallParms) {
            this.digitalIdConfigTemplateListAsync(digitalIdConfigTemplateListCallParms, null);
        }
        
    ///  <remarks/>
        public void digitalIdConfigTemplateListAsync(DigitalIdConfigTemplateListCallParms digitalIdConfigTemplateListCallParms, object userState) {
            if ((this.digitalIdConfigTemplateListOperationCompleted == null)) {
                this.digitalIdConfigTemplateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndigitalIdConfigTemplateListOperationCompleted);
            }
            this.InvokeAsync("digitalIdConfigTemplateList", new object[] {
                        digitalIdConfigTemplateListCallParms}, this.digitalIdConfigTemplateListOperationCompleted, userState);
        }
        
        private void OndigitalIdConfigTemplateListOperationCompleted(object arg) {
            if ((this.digitalIdConfigTemplateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.digitalIdConfigTemplateListCompleted(this, new digitalIdConfigTemplateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialLayoutCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialLayoutCreateCallParms smartCredentialLayoutCreateCallParms) {
            this.Invoke("smartCredentialLayoutCreate", new object[] {
                        smartCredentialLayoutCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialLayoutCreate(SmartCredentialLayoutCreateCallParms smartCredentialLayoutCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialLayoutCreate", new object[] {
                        smartCredentialLayoutCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialLayoutCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialLayoutCreateAsync(SmartCredentialLayoutCreateCallParms smartCredentialLayoutCreateCallParms) {
            this.smartCredentialLayoutCreateAsync(smartCredentialLayoutCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialLayoutCreateAsync(SmartCredentialLayoutCreateCallParms smartCredentialLayoutCreateCallParms, object userState) {
            if ((this.smartCredentialLayoutCreateOperationCompleted == null)) {
                this.smartCredentialLayoutCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialLayoutCreateOperationCompleted);
            }
            this.InvokeAsync("smartCredentialLayoutCreate", new object[] {
                        smartCredentialLayoutCreateCallParms}, this.smartCredentialLayoutCreateOperationCompleted, userState);
        }
        
        private void OnsmartCredentialLayoutCreateOperationCompleted(object arg) {
            if ((this.smartCredentialLayoutCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialLayoutCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialLayoutDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialLayoutDeleteCallParms smartCredentialLayoutDeleteCallParms) {
            this.Invoke("smartCredentialLayoutDelete", new object[] {
                        smartCredentialLayoutDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialLayoutDelete(SmartCredentialLayoutDeleteCallParms smartCredentialLayoutDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialLayoutDelete", new object[] {
                        smartCredentialLayoutDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialLayoutDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialLayoutDeleteAsync(SmartCredentialLayoutDeleteCallParms smartCredentialLayoutDeleteCallParms) {
            this.smartCredentialLayoutDeleteAsync(smartCredentialLayoutDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialLayoutDeleteAsync(SmartCredentialLayoutDeleteCallParms smartCredentialLayoutDeleteCallParms, object userState) {
            if ((this.smartCredentialLayoutDeleteOperationCompleted == null)) {
                this.smartCredentialLayoutDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialLayoutDeleteOperationCompleted);
            }
            this.InvokeAsync("smartCredentialLayoutDelete", new object[] {
                        smartCredentialLayoutDeleteCallParms}, this.smartCredentialLayoutDeleteOperationCompleted, userState);
        }
        
        private void OnsmartCredentialLayoutDeleteOperationCompleted(object arg) {
            if ((this.smartCredentialLayoutDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialLayoutDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialLayoutGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialLayoutInfo smartCredentialLayoutGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialLayoutGetCallParms smartCredentialLayoutGetCallParms) {
            object[] results = this.Invoke("smartCredentialLayoutGet", new object[] {
                        smartCredentialLayoutGetCallParms});
            return ((SmartCredentialLayoutInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialLayoutGet(SmartCredentialLayoutGetCallParms smartCredentialLayoutGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialLayoutGet", new object[] {
                        smartCredentialLayoutGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialLayoutInfo EndsmartCredentialLayoutGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialLayoutInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialLayoutGetAsync(SmartCredentialLayoutGetCallParms smartCredentialLayoutGetCallParms) {
            this.smartCredentialLayoutGetAsync(smartCredentialLayoutGetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialLayoutGetAsync(SmartCredentialLayoutGetCallParms smartCredentialLayoutGetCallParms, object userState) {
            if ((this.smartCredentialLayoutGetOperationCompleted == null)) {
                this.smartCredentialLayoutGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialLayoutGetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialLayoutGet", new object[] {
                        smartCredentialLayoutGetCallParms}, this.smartCredentialLayoutGetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialLayoutGetOperationCompleted(object arg) {
            if ((this.smartCredentialLayoutGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialLayoutGetCompleted(this, new smartCredentialLayoutGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialLayoutTemplateGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialLayoutInfo smartCredentialLayoutTemplateGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialLayoutTemplateGetCallParms smartCredentialLayoutTemplateGetCallParms) {
            object[] results = this.Invoke("smartCredentialLayoutTemplateGet", new object[] {
                        smartCredentialLayoutTemplateGetCallParms});
            return ((SmartCredentialLayoutInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialLayoutTemplateGet(SmartCredentialLayoutTemplateGetCallParms smartCredentialLayoutTemplateGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialLayoutTemplateGet", new object[] {
                        smartCredentialLayoutTemplateGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialLayoutInfo EndsmartCredentialLayoutTemplateGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialLayoutInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialLayoutTemplateGetAsync(SmartCredentialLayoutTemplateGetCallParms smartCredentialLayoutTemplateGetCallParms) {
            this.smartCredentialLayoutTemplateGetAsync(smartCredentialLayoutTemplateGetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialLayoutTemplateGetAsync(SmartCredentialLayoutTemplateGetCallParms smartCredentialLayoutTemplateGetCallParms, object userState) {
            if ((this.smartCredentialLayoutTemplateGetOperationCompleted == null)) {
                this.smartCredentialLayoutTemplateGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialLayoutTemplateGetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialLayoutTemplateGet", new object[] {
                        smartCredentialLayoutTemplateGetCallParms}, this.smartCredentialLayoutTemplateGetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialLayoutTemplateGetOperationCompleted(object arg) {
            if ((this.smartCredentialLayoutTemplateGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialLayoutTemplateGetCompleted(this, new smartCredentialLayoutTemplateGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialLayoutSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialLayoutSetCallParms smartCredentialLayoutSetCallParms) {
            this.Invoke("smartCredentialLayoutSet", new object[] {
                        smartCredentialLayoutSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialLayoutSet(SmartCredentialLayoutSetCallParms smartCredentialLayoutSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialLayoutSet", new object[] {
                        smartCredentialLayoutSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialLayoutSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialLayoutSetAsync(SmartCredentialLayoutSetCallParms smartCredentialLayoutSetCallParms) {
            this.smartCredentialLayoutSetAsync(smartCredentialLayoutSetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialLayoutSetAsync(SmartCredentialLayoutSetCallParms smartCredentialLayoutSetCallParms, object userState) {
            if ((this.smartCredentialLayoutSetOperationCompleted == null)) {
                this.smartCredentialLayoutSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialLayoutSetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialLayoutSet", new object[] {
                        smartCredentialLayoutSetCallParms}, this.smartCredentialLayoutSetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialLayoutSetOperationCompleted(object arg) {
            if ((this.smartCredentialLayoutSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialLayoutSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialLayoutListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialLayoutInfoList smartCredentialLayoutList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialLayoutListCallParms smartCredentialLayoutListCallParms) {
            object[] results = this.Invoke("smartCredentialLayoutList", new object[] {
                        smartCredentialLayoutListCallParms});
            return ((SmartCredentialLayoutInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialLayoutList(SmartCredentialLayoutListCallParms smartCredentialLayoutListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialLayoutList", new object[] {
                        smartCredentialLayoutListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialLayoutInfoList EndsmartCredentialLayoutList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialLayoutInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialLayoutListAsync(SmartCredentialLayoutListCallParms smartCredentialLayoutListCallParms) {
            this.smartCredentialLayoutListAsync(smartCredentialLayoutListCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialLayoutListAsync(SmartCredentialLayoutListCallParms smartCredentialLayoutListCallParms, object userState) {
            if ((this.smartCredentialLayoutListOperationCompleted == null)) {
                this.smartCredentialLayoutListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialLayoutListOperationCompleted);
            }
            this.InvokeAsync("smartCredentialLayoutList", new object[] {
                        smartCredentialLayoutListCallParms}, this.smartCredentialLayoutListOperationCompleted, userState);
        }
        
        private void OnsmartCredentialLayoutListOperationCompleted(object arg) {
            if ((this.smartCredentialLayoutListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialLayoutListCompleted(this, new smartCredentialLayoutListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialLayoutTemplateListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialLayoutInfoList smartCredentialLayoutTemplateList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialLayoutTemplateListCallParms smartCredentialLayoutTemplateListCallParms) {
            object[] results = this.Invoke("smartCredentialLayoutTemplateList", new object[] {
                        smartCredentialLayoutTemplateListCallParms});
            return ((SmartCredentialLayoutInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialLayoutTemplateList(SmartCredentialLayoutTemplateListCallParms smartCredentialLayoutTemplateListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialLayoutTemplateList", new object[] {
                        smartCredentialLayoutTemplateListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialLayoutInfoList EndsmartCredentialLayoutTemplateList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialLayoutInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialLayoutTemplateListAsync(SmartCredentialLayoutTemplateListCallParms smartCredentialLayoutTemplateListCallParms) {
            this.smartCredentialLayoutTemplateListAsync(smartCredentialLayoutTemplateListCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialLayoutTemplateListAsync(SmartCredentialLayoutTemplateListCallParms smartCredentialLayoutTemplateListCallParms, object userState) {
            if ((this.smartCredentialLayoutTemplateListOperationCompleted == null)) {
                this.smartCredentialLayoutTemplateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialLayoutTemplateListOperationCompleted);
            }
            this.InvokeAsync("smartCredentialLayoutTemplateList", new object[] {
                        smartCredentialLayoutTemplateListCallParms}, this.smartCredentialLayoutTemplateListOperationCompleted, userState);
        }
        
        private void OnsmartCredentialLayoutTemplateListOperationCompleted(object arg) {
            if ((this.smartCredentialLayoutTemplateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialLayoutTemplateListCompleted(this, new smartCredentialLayoutTemplateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialPrintModuleCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialPrintModuleCreateCallParms smartCredentialPrintModuleCreateCallParms) {
            this.Invoke("smartCredentialPrintModuleCreate", new object[] {
                        smartCredentialPrintModuleCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialPrintModuleCreate(SmartCredentialPrintModuleCreateCallParms smartCredentialPrintModuleCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialPrintModuleCreate", new object[] {
                        smartCredentialPrintModuleCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialPrintModuleCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialPrintModuleCreateAsync(SmartCredentialPrintModuleCreateCallParms smartCredentialPrintModuleCreateCallParms) {
            this.smartCredentialPrintModuleCreateAsync(smartCredentialPrintModuleCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialPrintModuleCreateAsync(SmartCredentialPrintModuleCreateCallParms smartCredentialPrintModuleCreateCallParms, object userState) {
            if ((this.smartCredentialPrintModuleCreateOperationCompleted == null)) {
                this.smartCredentialPrintModuleCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialPrintModuleCreateOperationCompleted);
            }
            this.InvokeAsync("smartCredentialPrintModuleCreate", new object[] {
                        smartCredentialPrintModuleCreateCallParms}, this.smartCredentialPrintModuleCreateOperationCompleted, userState);
        }
        
        private void OnsmartCredentialPrintModuleCreateOperationCompleted(object arg) {
            if ((this.smartCredentialPrintModuleCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialPrintModuleCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialPrintModuleDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialPrintModuleDeleteCallParms smartCredentialPrintModuleDeleteCallParms) {
            this.Invoke("smartCredentialPrintModuleDelete", new object[] {
                        smartCredentialPrintModuleDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialPrintModuleDelete(SmartCredentialPrintModuleDeleteCallParms smartCredentialPrintModuleDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialPrintModuleDelete", new object[] {
                        smartCredentialPrintModuleDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialPrintModuleDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialPrintModuleDeleteAsync(SmartCredentialPrintModuleDeleteCallParms smartCredentialPrintModuleDeleteCallParms) {
            this.smartCredentialPrintModuleDeleteAsync(smartCredentialPrintModuleDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialPrintModuleDeleteAsync(SmartCredentialPrintModuleDeleteCallParms smartCredentialPrintModuleDeleteCallParms, object userState) {
            if ((this.smartCredentialPrintModuleDeleteOperationCompleted == null)) {
                this.smartCredentialPrintModuleDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialPrintModuleDeleteOperationCompleted);
            }
            this.InvokeAsync("smartCredentialPrintModuleDelete", new object[] {
                        smartCredentialPrintModuleDeleteCallParms}, this.smartCredentialPrintModuleDeleteOperationCompleted, userState);
        }
        
        private void OnsmartCredentialPrintModuleDeleteOperationCompleted(object arg) {
            if ((this.smartCredentialPrintModuleDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialPrintModuleDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialPrintModuleGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialPrintModuleInfo smartCredentialPrintModuleGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialPrintModuleGetCallParms smartCredentialPrintModuleGetCallParms) {
            object[] results = this.Invoke("smartCredentialPrintModuleGet", new object[] {
                        smartCredentialPrintModuleGetCallParms});
            return ((SmartCredentialPrintModuleInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialPrintModuleGet(SmartCredentialPrintModuleGetCallParms smartCredentialPrintModuleGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialPrintModuleGet", new object[] {
                        smartCredentialPrintModuleGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialPrintModuleInfo EndsmartCredentialPrintModuleGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialPrintModuleInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialPrintModuleGetAsync(SmartCredentialPrintModuleGetCallParms smartCredentialPrintModuleGetCallParms) {
            this.smartCredentialPrintModuleGetAsync(smartCredentialPrintModuleGetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialPrintModuleGetAsync(SmartCredentialPrintModuleGetCallParms smartCredentialPrintModuleGetCallParms, object userState) {
            if ((this.smartCredentialPrintModuleGetOperationCompleted == null)) {
                this.smartCredentialPrintModuleGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialPrintModuleGetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialPrintModuleGet", new object[] {
                        smartCredentialPrintModuleGetCallParms}, this.smartCredentialPrintModuleGetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialPrintModuleGetOperationCompleted(object arg) {
            if ((this.smartCredentialPrintModuleGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialPrintModuleGetCompleted(this, new smartCredentialPrintModuleGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialPrintModuleSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialPrintModuleSetCallParms smartCredentialPrintModuleSetCallParms) {
            this.Invoke("smartCredentialPrintModuleSet", new object[] {
                        smartCredentialPrintModuleSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialPrintModuleSet(SmartCredentialPrintModuleSetCallParms smartCredentialPrintModuleSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialPrintModuleSet", new object[] {
                        smartCredentialPrintModuleSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialPrintModuleSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialPrintModuleSetAsync(SmartCredentialPrintModuleSetCallParms smartCredentialPrintModuleSetCallParms) {
            this.smartCredentialPrintModuleSetAsync(smartCredentialPrintModuleSetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialPrintModuleSetAsync(SmartCredentialPrintModuleSetCallParms smartCredentialPrintModuleSetCallParms, object userState) {
            if ((this.smartCredentialPrintModuleSetOperationCompleted == null)) {
                this.smartCredentialPrintModuleSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialPrintModuleSetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialPrintModuleSet", new object[] {
                        smartCredentialPrintModuleSetCallParms}, this.smartCredentialPrintModuleSetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialPrintModuleSetOperationCompleted(object arg) {
            if ((this.smartCredentialPrintModuleSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialPrintModuleSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialPrintModuleListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialPrintModuleInfoList smartCredentialPrintModuleList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] smartCredentialPrintModuleListCallParms) {
            object[] results = this.Invoke("smartCredentialPrintModuleList", new object[] {
                        smartCredentialPrintModuleListCallParms});
            return ((SmartCredentialPrintModuleInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialPrintModuleList(NameValue[] smartCredentialPrintModuleListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialPrintModuleList", new object[] {
                        smartCredentialPrintModuleListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialPrintModuleInfoList EndsmartCredentialPrintModuleList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialPrintModuleInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialPrintModuleListAsync(NameValue[] smartCredentialPrintModuleListCallParms) {
            this.smartCredentialPrintModuleListAsync(smartCredentialPrintModuleListCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialPrintModuleListAsync(NameValue[] smartCredentialPrintModuleListCallParms, object userState) {
            if ((this.smartCredentialPrintModuleListOperationCompleted == null)) {
                this.smartCredentialPrintModuleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialPrintModuleListOperationCompleted);
            }
            this.InvokeAsync("smartCredentialPrintModuleList", new object[] {
                        smartCredentialPrintModuleListCallParms}, this.smartCredentialPrintModuleListOperationCompleted, userState);
        }
        
        private void OnsmartCredentialPrintModuleListOperationCompleted(object arg) {
            if ((this.smartCredentialPrintModuleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialPrintModuleListCompleted(this, new smartCredentialPrintModuleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialPrintModuleWipe([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialPrintModuleWipeCallParms smartCredentialPrintModuleWipeCallParms) {
            this.Invoke("smartCredentialPrintModuleWipe", new object[] {
                        smartCredentialPrintModuleWipeCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialPrintModuleWipe(SmartCredentialPrintModuleWipeCallParms smartCredentialPrintModuleWipeCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialPrintModuleWipe", new object[] {
                        smartCredentialPrintModuleWipeCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialPrintModuleWipe(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialPrintModuleWipeAsync(SmartCredentialPrintModuleWipeCallParms smartCredentialPrintModuleWipeCallParms) {
            this.smartCredentialPrintModuleWipeAsync(smartCredentialPrintModuleWipeCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialPrintModuleWipeAsync(SmartCredentialPrintModuleWipeCallParms smartCredentialPrintModuleWipeCallParms, object userState) {
            if ((this.smartCredentialPrintModuleWipeOperationCompleted == null)) {
                this.smartCredentialPrintModuleWipeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialPrintModuleWipeOperationCompleted);
            }
            this.InvokeAsync("smartCredentialPrintModuleWipe", new object[] {
                        smartCredentialPrintModuleWipeCallParms}, this.smartCredentialPrintModuleWipeOperationCompleted, userState);
        }
        
        private void OnsmartCredentialPrintModuleWipeOperationCompleted(object arg) {
            if ((this.smartCredentialPrintModuleWipeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialPrintModuleWipeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("repositoryGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public RepositoryInfo repositoryGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] RepositoryGetCallParms repositoryGetCallParms) {
            object[] results = this.Invoke("repositoryGet", new object[] {
                        repositoryGetCallParms});
            return ((RepositoryInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginrepositoryGet(RepositoryGetCallParms repositoryGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("repositoryGet", new object[] {
                        repositoryGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public RepositoryInfo EndrepositoryGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RepositoryInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void repositoryGetAsync(RepositoryGetCallParms repositoryGetCallParms) {
            this.repositoryGetAsync(repositoryGetCallParms, null);
        }
        
    ///  <remarks/>
        public void repositoryGetAsync(RepositoryGetCallParms repositoryGetCallParms, object userState) {
            if ((this.repositoryGetOperationCompleted == null)) {
                this.repositoryGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrepositoryGetOperationCompleted);
            }
            this.InvokeAsync("repositoryGet", new object[] {
                        repositoryGetCallParms}, this.repositoryGetOperationCompleted, userState);
        }
        
        private void OnrepositoryGetOperationCompleted(object arg) {
            if ((this.repositoryGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.repositoryGetCompleted(this, new repositoryGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("repositoryListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public RepositoryInfoList repositoryList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] repositoryListCallParms) {
            object[] results = this.Invoke("repositoryList", new object[] {
                        repositoryListCallParms});
            return ((RepositoryInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginrepositoryList(NameValue[] repositoryListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("repositoryList", new object[] {
                        repositoryListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public RepositoryInfoList EndrepositoryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RepositoryInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void repositoryListAsync(NameValue[] repositoryListCallParms) {
            this.repositoryListAsync(repositoryListCallParms, null);
        }
        
    ///  <remarks/>
        public void repositoryListAsync(NameValue[] repositoryListCallParms, object userState) {
            if ((this.repositoryListOperationCompleted == null)) {
                this.repositoryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrepositoryListOperationCompleted);
            }
            this.InvokeAsync("repositoryList", new object[] {
                        repositoryListCallParms}, this.repositoryListOperationCompleted, userState);
        }
        
        private void OnrepositoryListOperationCompleted(object arg) {
            if ((this.repositoryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.repositoryListCompleted(this, new repositoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCreateCallParms userCreateCallParms) {
            this.Invoke("userCreate", new object[] {
                        userCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCreate(UserCreateCallParms userCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCreate", new object[] {
                        userCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userCreateAsync(UserCreateCallParms userCreateCallParms) {
            this.userCreateAsync(userCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void userCreateAsync(UserCreateCallParms userCreateCallParms, object userState) {
            if ((this.userCreateOperationCompleted == null)) {
                this.userCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCreateOperationCompleted);
            }
            this.InvokeAsync("userCreate", new object[] {
                        userCreateCallParms}, this.userCreateOperationCompleted, userState);
        }
        
        private void OnuserCreateOperationCompleted(object arg) {
            if ((this.userCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserDeleteCallParms userDeleteCallParms) {
            this.Invoke("userDelete", new object[] {
                        userDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserDelete(UserDeleteCallParms userDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userDelete", new object[] {
                        userDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userDeleteAsync(UserDeleteCallParms userDeleteCallParms) {
            this.userDeleteAsync(userDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userDeleteAsync(UserDeleteCallParms userDeleteCallParms, object userState) {
            if ((this.userDeleteOperationCompleted == null)) {
                this.userDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserDeleteOperationCompleted);
            }
            this.InvokeAsync("userDelete", new object[] {
                        userDeleteCallParms}, this.userDeleteOperationCompleted, userState);
        }
        
        private void OnuserDeleteOperationCompleted(object arg) {
            if ((this.userDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userDeliver([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserDeliverCallParms userDeliverCallParms) {
            this.Invoke("userDeliver", new object[] {
                        userDeliverCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserDeliver(UserDeliverCallParms userDeliverCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userDeliver", new object[] {
                        userDeliverCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserDeliver(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userDeliverAsync(UserDeliverCallParms userDeliverCallParms) {
            this.userDeliverAsync(userDeliverCallParms, null);
        }
        
    ///  <remarks/>
        public void userDeliverAsync(UserDeliverCallParms userDeliverCallParms, object userState) {
            if ((this.userDeliverOperationCompleted == null)) {
                this.userDeliverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserDeliverOperationCompleted);
            }
            this.InvokeAsync("userDeliver", new object[] {
                        userDeliverCallParms}, this.userDeliverOperationCompleted, userState);
        }
        
        private void OnuserDeliverOperationCompleted(object arg) {
            if ((this.userDeliverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userDeliverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserInfo userGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserGetCallParms userGetCallParms) {
            object[] results = this.Invoke("userGet", new object[] {
                        userGetCallParms});
            return ((UserInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserGet(UserGetCallParms userGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userGet", new object[] {
                        userGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserInfo EnduserGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void userGetAsync(UserGetCallParms userGetCallParms) {
            this.userGetAsync(userGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userGetAsync(UserGetCallParms userGetCallParms, object userState) {
            if ((this.userGetOperationCompleted == null)) {
                this.userGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserGetOperationCompleted);
            }
            this.InvokeAsync("userGet", new object[] {
                        userGetCallParms}, this.userGetOperationCompleted, userState);
        }
        
        private void OnuserGetOperationCompleted(object arg) {
            if ((this.userGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userGetCompleted(this, new userGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSetCallParms userSetCallParms) {
            this.Invoke("userSet", new object[] {
                        userSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSet(UserSetCallParms userSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSet", new object[] {
                        userSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userSetAsync(UserSetCallParms userSetCallParms) {
            this.userSetAsync(userSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userSetAsync(UserSetCallParms userSetCallParms, object userState) {
            if ((this.userSetOperationCompleted == null)) {
                this.userSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSetOperationCompleted);
            }
            this.InvokeAsync("userSet", new object[] {
                        userSetCallParms}, this.userSetOperationCompleted, userState);
        }
        
        private void OnuserSetOperationCompleted(object arg) {
            if ((this.userSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserListResult userList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserListCallParms userListCallParms) {
            object[] results = this.Invoke("userList", new object[] {
                        userListCallParms});
            return ((UserListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserList(UserListCallParms userListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userList", new object[] {
                        userListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserListResult EnduserList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userListAsync(UserListCallParms userListCallParms) {
            this.userListAsync(userListCallParms, null);
        }
        
    ///  <remarks/>
        public void userListAsync(UserListCallParms userListCallParms, object userState) {
            if ((this.userListOperationCompleted == null)) {
                this.userListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserListOperationCompleted);
            }
            this.InvokeAsync("userList", new object[] {
                        userListCallParms}, this.userListOperationCompleted, userState);
        }
        
        private void OnuserListOperationCompleted(object arg) {
            if ((this.userListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userListCompleted(this, new userListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userLockoutGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserLockoutInfo userLockoutGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserLockoutGetCallParms userLockoutGetCallParms) {
            object[] results = this.Invoke("userLockoutGet", new object[] {
                        userLockoutGetCallParms});
            return ((UserLockoutInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserLockoutGet(UserLockoutGetCallParms userLockoutGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userLockoutGet", new object[] {
                        userLockoutGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserLockoutInfo EnduserLockoutGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserLockoutInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void userLockoutGetAsync(UserLockoutGetCallParms userLockoutGetCallParms) {
            this.userLockoutGetAsync(userLockoutGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userLockoutGetAsync(UserLockoutGetCallParms userLockoutGetCallParms, object userState) {
            if ((this.userLockoutGetOperationCompleted == null)) {
                this.userLockoutGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserLockoutGetOperationCompleted);
            }
            this.InvokeAsync("userLockoutGet", new object[] {
                        userLockoutGetCallParms}, this.userLockoutGetOperationCompleted, userState);
        }
        
        private void OnuserLockoutGetOperationCompleted(object arg) {
            if ((this.userLockoutGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userLockoutGetCompleted(this, new userLockoutGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userLockoutSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserLockoutSetCallParms userLockoutSetCallParms) {
            this.Invoke("userLockoutSet", new object[] {
                        userLockoutSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserLockoutSet(UserLockoutSetCallParms userLockoutSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userLockoutSet", new object[] {
                        userLockoutSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserLockoutSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userLockoutSetAsync(UserLockoutSetCallParms userLockoutSetCallParms) {
            this.userLockoutSetAsync(userLockoutSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userLockoutSetAsync(UserLockoutSetCallParms userLockoutSetCallParms, object userState) {
            if ((this.userLockoutSetOperationCompleted == null)) {
                this.userLockoutSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserLockoutSetOperationCompleted);
            }
            this.InvokeAsync("userLockoutSet", new object[] {
                        userLockoutSetCallParms}, this.userLockoutSetOperationCompleted, userState);
        }
        
        private void OnuserLockoutSetOperationCompleted(object arg) {
            if ((this.userLockoutSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userLockoutSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userEnrollListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserEnrollListResult userEnrollList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserEnrollListCallParms userEnrollListCallParms) {
            object[] results = this.Invoke("userEnrollList", new object[] {
                        userEnrollListCallParms});
            return ((UserEnrollListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserEnrollList(UserEnrollListCallParms userEnrollListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userEnrollList", new object[] {
                        userEnrollListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserEnrollListResult EnduserEnrollList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserEnrollListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userEnrollListAsync(UserEnrollListCallParms userEnrollListCallParms) {
            this.userEnrollListAsync(userEnrollListCallParms, null);
        }
        
    ///  <remarks/>
        public void userEnrollListAsync(UserEnrollListCallParms userEnrollListCallParms, object userState) {
            if ((this.userEnrollListOperationCompleted == null)) {
                this.userEnrollListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserEnrollListOperationCompleted);
            }
            this.InvokeAsync("userEnrollList", new object[] {
                        userEnrollListCallParms}, this.userEnrollListOperationCompleted, userState);
        }
        
        private void OnuserEnrollListOperationCompleted(object arg) {
            if ((this.userEnrollListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userEnrollListCompleted(this, new userEnrollListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("deliveryConfigListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public DeliveryConfigInfoList deliveryConfigList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] deliveryConfigListCallParms) {
            object[] results = this.Invoke("deliveryConfigList", new object[] {
                        deliveryConfigListCallParms});
            return ((DeliveryConfigInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegindeliveryConfigList(NameValue[] deliveryConfigListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deliveryConfigList", new object[] {
                        deliveryConfigListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public DeliveryConfigInfoList EnddeliveryConfigList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeliveryConfigInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void deliveryConfigListAsync(NameValue[] deliveryConfigListCallParms) {
            this.deliveryConfigListAsync(deliveryConfigListCallParms, null);
        }
        
    ///  <remarks/>
        public void deliveryConfigListAsync(NameValue[] deliveryConfigListCallParms, object userState) {
            if ((this.deliveryConfigListOperationCompleted == null)) {
                this.deliveryConfigListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeliveryConfigListOperationCompleted);
            }
            this.InvokeAsync("deliveryConfigList", new object[] {
                        deliveryConfigListCallParms}, this.deliveryConfigListOperationCompleted, userState);
        }
        
        private void OndeliveryConfigListOperationCompleted(object arg) {
            if ((this.deliveryConfigListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deliveryConfigListCompleted(this, new deliveryConfigListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userContactInfoCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserContactInfoCreateCallParms userContactInfoCreateCallParms) {
            this.Invoke("userContactInfoCreate", new object[] {
                        userContactInfoCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserContactInfoCreate(UserContactInfoCreateCallParms userContactInfoCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userContactInfoCreate", new object[] {
                        userContactInfoCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserContactInfoCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userContactInfoCreateAsync(UserContactInfoCreateCallParms userContactInfoCreateCallParms) {
            this.userContactInfoCreateAsync(userContactInfoCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void userContactInfoCreateAsync(UserContactInfoCreateCallParms userContactInfoCreateCallParms, object userState) {
            if ((this.userContactInfoCreateOperationCompleted == null)) {
                this.userContactInfoCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserContactInfoCreateOperationCompleted);
            }
            this.InvokeAsync("userContactInfoCreate", new object[] {
                        userContactInfoCreateCallParms}, this.userContactInfoCreateOperationCompleted, userState);
        }
        
        private void OnuserContactInfoCreateOperationCompleted(object arg) {
            if ((this.userContactInfoCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userContactInfoCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userContactInfoDeleteReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userContactInfoDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserContactInfoDeleteCallParms userContactInfoDeleteCallParms) {
            object[] results = this.Invoke("userContactInfoDelete", new object[] {
                        userContactInfoDeleteCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserContactInfoDelete(UserContactInfoDeleteCallParms userContactInfoDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userContactInfoDelete", new object[] {
                        userContactInfoDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserContactInfoDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userContactInfoDeleteAsync(UserContactInfoDeleteCallParms userContactInfoDeleteCallParms) {
            this.userContactInfoDeleteAsync(userContactInfoDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userContactInfoDeleteAsync(UserContactInfoDeleteCallParms userContactInfoDeleteCallParms, object userState) {
            if ((this.userContactInfoDeleteOperationCompleted == null)) {
                this.userContactInfoDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserContactInfoDeleteOperationCompleted);
            }
            this.InvokeAsync("userContactInfoDelete", new object[] {
                        userContactInfoDeleteCallParms}, this.userContactInfoDeleteOperationCompleted, userState);
        }
        
        private void OnuserContactInfoDeleteOperationCompleted(object arg) {
            if ((this.userContactInfoDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userContactInfoDeleteCompleted(this, new userContactInfoDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("userContactInfoGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ContactInfo[] userContactInfoGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserContactInfoGetCallParms userContactInfoGetCallParms) {
            object[] results = this.Invoke("userContactInfoGet", new object[] {
                        userContactInfoGetCallParms});
            return ((ContactInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserContactInfoGet(UserContactInfoGetCallParms userContactInfoGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userContactInfoGet", new object[] {
                        userContactInfoGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public ContactInfo[] EnduserContactInfoGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ContactInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public void userContactInfoGetAsync(UserContactInfoGetCallParms userContactInfoGetCallParms) {
            this.userContactInfoGetAsync(userContactInfoGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userContactInfoGetAsync(UserContactInfoGetCallParms userContactInfoGetCallParms, object userState) {
            if ((this.userContactInfoGetOperationCompleted == null)) {
                this.userContactInfoGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserContactInfoGetOperationCompleted);
            }
            this.InvokeAsync("userContactInfoGet", new object[] {
                        userContactInfoGetCallParms}, this.userContactInfoGetOperationCompleted, userState);
        }
        
        private void OnuserContactInfoGetOperationCompleted(object arg) {
            if ((this.userContactInfoGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userContactInfoGetCompleted(this, new userContactInfoGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userContactInfoSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserContactInfoSetCallParms userContactInfoSetCallParms) {
            this.Invoke("userContactInfoSet", new object[] {
                        userContactInfoSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserContactInfoSet(UserContactInfoSetCallParms userContactInfoSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userContactInfoSet", new object[] {
                        userContactInfoSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserContactInfoSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userContactInfoSetAsync(UserContactInfoSetCallParms userContactInfoSetCallParms) {
            this.userContactInfoSetAsync(userContactInfoSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userContactInfoSetAsync(UserContactInfoSetCallParms userContactInfoSetCallParms, object userState) {
            if ((this.userContactInfoSetOperationCompleted == null)) {
                this.userContactInfoSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserContactInfoSetOperationCompleted);
            }
            this.InvokeAsync("userContactInfoSet", new object[] {
                        userContactInfoSetCallParms}, this.userContactInfoSetOperationCompleted, userState);
        }
        
        private void OnuserContactInfoSetOperationCompleted(object arg) {
            if ((this.userContactInfoSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userContactInfoSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPINCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPINCreateCallParms userPINCreateCallParms) {
            this.Invoke("userPINCreate", new object[] {
                        userPINCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPINCreate(UserPINCreateCallParms userPINCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPINCreate", new object[] {
                        userPINCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPINCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPINCreateAsync(UserPINCreateCallParms userPINCreateCallParms) {
            this.userPINCreateAsync(userPINCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void userPINCreateAsync(UserPINCreateCallParms userPINCreateCallParms, object userState) {
            if ((this.userPINCreateOperationCompleted == null)) {
                this.userPINCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPINCreateOperationCompleted);
            }
            this.InvokeAsync("userPINCreate", new object[] {
                        userPINCreateCallParms}, this.userPINCreateOperationCompleted, userState);
        }
        
        private void OnuserPINCreateOperationCompleted(object arg) {
            if ((this.userPINCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPINCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPINDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPINDeleteCallParms userPINDeleteCallParms) {
            this.Invoke("userPINDelete", new object[] {
                        userPINDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPINDelete(UserPINDeleteCallParms userPINDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPINDelete", new object[] {
                        userPINDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPINDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPINDeleteAsync(UserPINDeleteCallParms userPINDeleteCallParms) {
            this.userPINDeleteAsync(userPINDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userPINDeleteAsync(UserPINDeleteCallParms userPINDeleteCallParms, object userState) {
            if ((this.userPINDeleteOperationCompleted == null)) {
                this.userPINDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPINDeleteOperationCompleted);
            }
            this.InvokeAsync("userPINDelete", new object[] {
                        userPINDeleteCallParms}, this.userPINDeleteOperationCompleted, userState);
        }
        
        private void OnuserPINDeleteOperationCompleted(object arg) {
            if ((this.userPINDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPINDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPINDeliver([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPINDeliverCallParms userPINDeliverCallParms) {
            this.Invoke("userPINDeliver", new object[] {
                        userPINDeliverCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPINDeliver(UserPINDeliverCallParms userPINDeliverCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPINDeliver", new object[] {
                        userPINDeliverCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPINDeliver(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPINDeliverAsync(UserPINDeliverCallParms userPINDeliverCallParms) {
            this.userPINDeliverAsync(userPINDeliverCallParms, null);
        }
        
    ///  <remarks/>
        public void userPINDeliverAsync(UserPINDeliverCallParms userPINDeliverCallParms, object userState) {
            if ((this.userPINDeliverOperationCompleted == null)) {
                this.userPINDeliverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPINDeliverOperationCompleted);
            }
            this.InvokeAsync("userPINDeliver", new object[] {
                        userPINDeliverCallParms}, this.userPINDeliverOperationCompleted, userState);
        }
        
        private void OnuserPINDeliverOperationCompleted(object arg) {
            if ((this.userPINDeliverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPINDeliverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userPINGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserPINInfo userPINGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPINGetCallParms userPINGetCallParms) {
            object[] results = this.Invoke("userPINGet", new object[] {
                        userPINGetCallParms});
            return ((UserPINInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPINGet(UserPINGetCallParms userPINGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPINGet", new object[] {
                        userPINGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserPINInfo EnduserPINGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserPINInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void userPINGetAsync(UserPINGetCallParms userPINGetCallParms) {
            this.userPINGetAsync(userPINGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userPINGetAsync(UserPINGetCallParms userPINGetCallParms, object userState) {
            if ((this.userPINGetOperationCompleted == null)) {
                this.userPINGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPINGetOperationCompleted);
            }
            this.InvokeAsync("userPINGet", new object[] {
                        userPINGetCallParms}, this.userPINGetOperationCompleted, userState);
        }
        
        private void OnuserPINGetOperationCompleted(object arg) {
            if ((this.userPINGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPINGetCompleted(this, new userPINGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPINSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPINSetCallParms userPINSetCallParms) {
            this.Invoke("userPINSet", new object[] {
                        userPINSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPINSet(UserPINSetCallParms userPINSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPINSet", new object[] {
                        userPINSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPINSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPINSetAsync(UserPINSetCallParms userPINSetCallParms) {
            this.userPINSetAsync(userPINSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userPINSetAsync(UserPINSetCallParms userPINSetCallParms, object userState) {
            if ((this.userPINSetOperationCompleted == null)) {
                this.userPINSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPINSetOperationCompleted);
            }
            this.InvokeAsync("userPINSet", new object[] {
                        userPINSetCallParms}, this.userPINSetOperationCompleted, userState);
        }
        
        private void OnuserPINSetOperationCompleted(object arg) {
            if ((this.userPINSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPINSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userMachineSecretCreateReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public MachineSecretInfo userMachineSecretCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserMachineSecretCreateCallParms userMachineSecretCreateCallParms) {
            object[] results = this.Invoke("userMachineSecretCreate", new object[] {
                        userMachineSecretCreateCallParms});
            return ((MachineSecretInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserMachineSecretCreate(UserMachineSecretCreateCallParms userMachineSecretCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userMachineSecretCreate", new object[] {
                        userMachineSecretCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public MachineSecretInfo EnduserMachineSecretCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MachineSecretInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void userMachineSecretCreateAsync(UserMachineSecretCreateCallParms userMachineSecretCreateCallParms) {
            this.userMachineSecretCreateAsync(userMachineSecretCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void userMachineSecretCreateAsync(UserMachineSecretCreateCallParms userMachineSecretCreateCallParms, object userState) {
            if ((this.userMachineSecretCreateOperationCompleted == null)) {
                this.userMachineSecretCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserMachineSecretCreateOperationCompleted);
            }
            this.InvokeAsync("userMachineSecretCreate", new object[] {
                        userMachineSecretCreateCallParms}, this.userMachineSecretCreateOperationCompleted, userState);
        }
        
        private void OnuserMachineSecretCreateOperationCompleted(object arg) {
            if ((this.userMachineSecretCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userMachineSecretCreateCompleted(this, new userMachineSecretCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userMachineSecretDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserMachineSecretDeleteCallParms userMachineSecretDeleteCallParms) {
            this.Invoke("userMachineSecretDelete", new object[] {
                        userMachineSecretDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserMachineSecretDelete(UserMachineSecretDeleteCallParms userMachineSecretDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userMachineSecretDelete", new object[] {
                        userMachineSecretDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserMachineSecretDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userMachineSecretDeleteAsync(UserMachineSecretDeleteCallParms userMachineSecretDeleteCallParms) {
            this.userMachineSecretDeleteAsync(userMachineSecretDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userMachineSecretDeleteAsync(UserMachineSecretDeleteCallParms userMachineSecretDeleteCallParms, object userState) {
            if ((this.userMachineSecretDeleteOperationCompleted == null)) {
                this.userMachineSecretDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserMachineSecretDeleteOperationCompleted);
            }
            this.InvokeAsync("userMachineSecretDelete", new object[] {
                        userMachineSecretDeleteCallParms}, this.userMachineSecretDeleteOperationCompleted, userState);
        }
        
        private void OnuserMachineSecretDeleteOperationCompleted(object arg) {
            if ((this.userMachineSecretDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userMachineSecretDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userMachineSecretGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public MachineSecretInfo userMachineSecretGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserMachineSecretGetCallParms userMachineSecretGetCallParms) {
            object[] results = this.Invoke("userMachineSecretGet", new object[] {
                        userMachineSecretGetCallParms});
            return ((MachineSecretInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserMachineSecretGet(UserMachineSecretGetCallParms userMachineSecretGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userMachineSecretGet", new object[] {
                        userMachineSecretGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public MachineSecretInfo EnduserMachineSecretGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MachineSecretInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void userMachineSecretGetAsync(UserMachineSecretGetCallParms userMachineSecretGetCallParms) {
            this.userMachineSecretGetAsync(userMachineSecretGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userMachineSecretGetAsync(UserMachineSecretGetCallParms userMachineSecretGetCallParms, object userState) {
            if ((this.userMachineSecretGetOperationCompleted == null)) {
                this.userMachineSecretGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserMachineSecretGetOperationCompleted);
            }
            this.InvokeAsync("userMachineSecretGet", new object[] {
                        userMachineSecretGetCallParms}, this.userMachineSecretGetOperationCompleted, userState);
        }
        
        private void OnuserMachineSecretGetOperationCompleted(object arg) {
            if ((this.userMachineSecretGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userMachineSecretGetCompleted(this, new userMachineSecretGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userMachineSecretSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserMachineSecretSetCallParms userMachineSecretSetCallParms) {
            this.Invoke("userMachineSecretSet", new object[] {
                        userMachineSecretSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserMachineSecretSet(UserMachineSecretSetCallParms userMachineSecretSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userMachineSecretSet", new object[] {
                        userMachineSecretSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserMachineSecretSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userMachineSecretSetAsync(UserMachineSecretSetCallParms userMachineSecretSetCallParms) {
            this.userMachineSecretSetAsync(userMachineSecretSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userMachineSecretSetAsync(UserMachineSecretSetCallParms userMachineSecretSetCallParms, object userState) {
            if ((this.userMachineSecretSetOperationCompleted == null)) {
                this.userMachineSecretSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserMachineSecretSetOperationCompleted);
            }
            this.InvokeAsync("userMachineSecretSet", new object[] {
                        userMachineSecretSetCallParms}, this.userMachineSecretSetOperationCompleted, userState);
        }
        
        private void OnuserMachineSecretSetOperationCompleted(object arg) {
            if ((this.userMachineSecretSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userMachineSecretSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("userMachineSecretListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MachineSecretInfo[] userMachineSecretList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserMachineSecretListCallParms userMachineSecretListCallParms) {
            object[] results = this.Invoke("userMachineSecretList", new object[] {
                        userMachineSecretListCallParms});
            return ((MachineSecretInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserMachineSecretList(UserMachineSecretListCallParms userMachineSecretListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userMachineSecretList", new object[] {
                        userMachineSecretListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public MachineSecretInfo[] EnduserMachineSecretList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MachineSecretInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public void userMachineSecretListAsync(UserMachineSecretListCallParms userMachineSecretListCallParms) {
            this.userMachineSecretListAsync(userMachineSecretListCallParms, null);
        }
        
    ///  <remarks/>
        public void userMachineSecretListAsync(UserMachineSecretListCallParms userMachineSecretListCallParms, object userState) {
            if ((this.userMachineSecretListOperationCompleted == null)) {
                this.userMachineSecretListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserMachineSecretListOperationCompleted);
            }
            this.InvokeAsync("userMachineSecretList", new object[] {
                        userMachineSecretListCallParms}, this.userMachineSecretListOperationCompleted, userState);
        }
        
        private void OnuserMachineSecretListOperationCompleted(object arg) {
            if ((this.userMachineSecretListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userMachineSecretListCompleted(this, new userMachineSecretListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPreferenceCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPreferenceCreateCallParms userPreferenceCreateCallParms) {
            this.Invoke("userPreferenceCreate", new object[] {
                        userPreferenceCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPreferenceCreate(UserPreferenceCreateCallParms userPreferenceCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPreferenceCreate", new object[] {
                        userPreferenceCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPreferenceCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPreferenceCreateAsync(UserPreferenceCreateCallParms userPreferenceCreateCallParms) {
            this.userPreferenceCreateAsync(userPreferenceCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void userPreferenceCreateAsync(UserPreferenceCreateCallParms userPreferenceCreateCallParms, object userState) {
            if ((this.userPreferenceCreateOperationCompleted == null)) {
                this.userPreferenceCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPreferenceCreateOperationCompleted);
            }
            this.InvokeAsync("userPreferenceCreate", new object[] {
                        userPreferenceCreateCallParms}, this.userPreferenceCreateOperationCompleted, userState);
        }
        
        private void OnuserPreferenceCreateOperationCompleted(object arg) {
            if ((this.userPreferenceCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPreferenceCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPreferenceDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPreferenceDeleteCallParms userPreferenceDeleteCallParms) {
            this.Invoke("userPreferenceDelete", new object[] {
                        userPreferenceDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPreferenceDelete(UserPreferenceDeleteCallParms userPreferenceDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPreferenceDelete", new object[] {
                        userPreferenceDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPreferenceDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPreferenceDeleteAsync(UserPreferenceDeleteCallParms userPreferenceDeleteCallParms) {
            this.userPreferenceDeleteAsync(userPreferenceDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userPreferenceDeleteAsync(UserPreferenceDeleteCallParms userPreferenceDeleteCallParms, object userState) {
            if ((this.userPreferenceDeleteOperationCompleted == null)) {
                this.userPreferenceDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPreferenceDeleteOperationCompleted);
            }
            this.InvokeAsync("userPreferenceDelete", new object[] {
                        userPreferenceDeleteCallParms}, this.userPreferenceDeleteOperationCompleted, userState);
        }
        
        private void OnuserPreferenceDeleteOperationCompleted(object arg) {
            if ((this.userPreferenceDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPreferenceDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userPreferenceGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public NameValue userPreferenceGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPreferenceGetCallParms userPreferenceGetCallParms) {
            object[] results = this.Invoke("userPreferenceGet", new object[] {
                        userPreferenceGetCallParms});
            return ((NameValue)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPreferenceGet(UserPreferenceGetCallParms userPreferenceGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPreferenceGet", new object[] {
                        userPreferenceGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public NameValue EnduserPreferenceGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((NameValue)(results[0]));
        }
        
    ///  <remarks/>
        public void userPreferenceGetAsync(UserPreferenceGetCallParms userPreferenceGetCallParms) {
            this.userPreferenceGetAsync(userPreferenceGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userPreferenceGetAsync(UserPreferenceGetCallParms userPreferenceGetCallParms, object userState) {
            if ((this.userPreferenceGetOperationCompleted == null)) {
                this.userPreferenceGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPreferenceGetOperationCompleted);
            }
            this.InvokeAsync("userPreferenceGet", new object[] {
                        userPreferenceGetCallParms}, this.userPreferenceGetOperationCompleted, userState);
        }
        
        private void OnuserPreferenceGetOperationCompleted(object arg) {
            if ((this.userPreferenceGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPreferenceGetCompleted(this, new userPreferenceGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPreferenceSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPreferenceSetCallParms userPreferenceSetCallParms) {
            this.Invoke("userPreferenceSet", new object[] {
                        userPreferenceSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPreferenceSet(UserPreferenceSetCallParms userPreferenceSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPreferenceSet", new object[] {
                        userPreferenceSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPreferenceSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPreferenceSetAsync(UserPreferenceSetCallParms userPreferenceSetCallParms) {
            this.userPreferenceSetAsync(userPreferenceSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userPreferenceSetAsync(UserPreferenceSetCallParms userPreferenceSetCallParms, object userState) {
            if ((this.userPreferenceSetOperationCompleted == null)) {
                this.userPreferenceSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPreferenceSetOperationCompleted);
            }
            this.InvokeAsync("userPreferenceSet", new object[] {
                        userPreferenceSetCallParms}, this.userPreferenceSetOperationCompleted, userState);
        }
        
        private void OnuserPreferenceSetOperationCompleted(object arg) {
            if ((this.userPreferenceSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPreferenceSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("userPreferenceListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] userPreferenceList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPreferenceListCallParms userPreferenceListCallParms) {
            object[] results = this.Invoke("userPreferenceList", new object[] {
                        userPreferenceListCallParms});
            return ((NameValue[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPreferenceList(UserPreferenceListCallParms userPreferenceListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPreferenceList", new object[] {
                        userPreferenceListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public NameValue[] EnduserPreferenceList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((NameValue[])(results[0]));
        }
        
    ///  <remarks/>
        public void userPreferenceListAsync(UserPreferenceListCallParms userPreferenceListCallParms) {
            this.userPreferenceListAsync(userPreferenceListCallParms, null);
        }
        
    ///  <remarks/>
        public void userPreferenceListAsync(UserPreferenceListCallParms userPreferenceListCallParms, object userState) {
            if ((this.userPreferenceListOperationCompleted == null)) {
                this.userPreferenceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPreferenceListOperationCompleted);
            }
            this.InvokeAsync("userPreferenceList", new object[] {
                        userPreferenceListCallParms}, this.userPreferenceListOperationCompleted, userState);
        }
        
        private void OnuserPreferenceListOperationCompleted(object arg) {
            if ((this.userPreferenceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPreferenceListCompleted(this, new userPreferenceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("userOTPCreateReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserOTPInfo[] userOTPCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserOTPCreateCallParms userOTPCreateCallParms) {
            object[] results = this.Invoke("userOTPCreate", new object[] {
                        userOTPCreateCallParms});
            return ((UserOTPInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserOTPCreate(UserOTPCreateCallParms userOTPCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userOTPCreate", new object[] {
                        userOTPCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserOTPInfo[] EnduserOTPCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserOTPInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public void userOTPCreateAsync(UserOTPCreateCallParms userOTPCreateCallParms) {
            this.userOTPCreateAsync(userOTPCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void userOTPCreateAsync(UserOTPCreateCallParms userOTPCreateCallParms, object userState) {
            if ((this.userOTPCreateOperationCompleted == null)) {
                this.userOTPCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserOTPCreateOperationCompleted);
            }
            this.InvokeAsync("userOTPCreate", new object[] {
                        userOTPCreateCallParms}, this.userOTPCreateOperationCompleted, userState);
        }
        
        private void OnuserOTPCreateOperationCompleted(object arg) {
            if ((this.userOTPCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userOTPCreateCompleted(this, new userOTPCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userOTPDeleteReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userOTPDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserOTPDeleteCallParms userOTPDeleteCallParms) {
            object[] results = this.Invoke("userOTPDelete", new object[] {
                        userOTPDeleteCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserOTPDelete(UserOTPDeleteCallParms userOTPDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userOTPDelete", new object[] {
                        userOTPDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserOTPDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userOTPDeleteAsync(UserOTPDeleteCallParms userOTPDeleteCallParms) {
            this.userOTPDeleteAsync(userOTPDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userOTPDeleteAsync(UserOTPDeleteCallParms userOTPDeleteCallParms, object userState) {
            if ((this.userOTPDeleteOperationCompleted == null)) {
                this.userOTPDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserOTPDeleteOperationCompleted);
            }
            this.InvokeAsync("userOTPDelete", new object[] {
                        userOTPDeleteCallParms}, this.userOTPDeleteOperationCompleted, userState);
        }
        
        private void OnuserOTPDeleteOperationCompleted(object arg) {
            if ((this.userOTPDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userOTPDeleteCompleted(this, new userOTPDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userOTPDeliverReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserOTPDeliverResult userOTPDeliver([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserOTPDeliverCallParms userOTPDeliverCallParms) {
            object[] results = this.Invoke("userOTPDeliver", new object[] {
                        userOTPDeliverCallParms});
            return ((UserOTPDeliverResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserOTPDeliver(UserOTPDeliverCallParms userOTPDeliverCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userOTPDeliver", new object[] {
                        userOTPDeliverCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserOTPDeliverResult EnduserOTPDeliver(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserOTPDeliverResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userOTPDeliverAsync(UserOTPDeliverCallParms userOTPDeliverCallParms) {
            this.userOTPDeliverAsync(userOTPDeliverCallParms, null);
        }
        
    ///  <remarks/>
        public void userOTPDeliverAsync(UserOTPDeliverCallParms userOTPDeliverCallParms, object userState) {
            if ((this.userOTPDeliverOperationCompleted == null)) {
                this.userOTPDeliverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserOTPDeliverOperationCompleted);
            }
            this.InvokeAsync("userOTPDeliver", new object[] {
                        userOTPDeliverCallParms}, this.userOTPDeliverOperationCompleted, userState);
        }
        
        private void OnuserOTPDeliverOperationCompleted(object arg) {
            if ((this.userOTPDeliverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userOTPDeliverCompleted(this, new userOTPDeliverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("userOTPGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserOTPInfo[] userOTPGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserOTPGetCallParms userOTPGetCallParms) {
            object[] results = this.Invoke("userOTPGet", new object[] {
                        userOTPGetCallParms});
            return ((UserOTPInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserOTPGet(UserOTPGetCallParms userOTPGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userOTPGet", new object[] {
                        userOTPGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserOTPInfo[] EnduserOTPGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserOTPInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public void userOTPGetAsync(UserOTPGetCallParms userOTPGetCallParms) {
            this.userOTPGetAsync(userOTPGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userOTPGetAsync(UserOTPGetCallParms userOTPGetCallParms, object userState) {
            if ((this.userOTPGetOperationCompleted == null)) {
                this.userOTPGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserOTPGetOperationCompleted);
            }
            this.InvokeAsync("userOTPGet", new object[] {
                        userOTPGetCallParms}, this.userOTPGetOperationCompleted, userState);
        }
        
        private void OnuserOTPGetOperationCompleted(object arg) {
            if ((this.userOTPGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userOTPGetCompleted(this, new userOTPGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userOTPSetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userOTPSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserOTPSetCallParms userOTPSetCallParms) {
            object[] results = this.Invoke("userOTPSet", new object[] {
                        userOTPSetCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserOTPSet(UserOTPSetCallParms userOTPSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userOTPSet", new object[] {
                        userOTPSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserOTPSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userOTPSetAsync(UserOTPSetCallParms userOTPSetCallParms) {
            this.userOTPSetAsync(userOTPSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userOTPSetAsync(UserOTPSetCallParms userOTPSetCallParms, object userState) {
            if ((this.userOTPSetOperationCompleted == null)) {
                this.userOTPSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserOTPSetOperationCompleted);
            }
            this.InvokeAsync("userOTPSet", new object[] {
                        userOTPSetCallParms}, this.userOTPSetOperationCompleted, userState);
        }
        
        private void OnuserOTPSetOperationCompleted(object arg) {
            if ((this.userOTPSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userOTPSetCompleted(this, new userOTPSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPasswordCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPasswordCreateCallParms userPasswordCreateCallParms) {
            this.Invoke("userPasswordCreate", new object[] {
                        userPasswordCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPasswordCreate(UserPasswordCreateCallParms userPasswordCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPasswordCreate", new object[] {
                        userPasswordCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPasswordCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPasswordCreateAsync(UserPasswordCreateCallParms userPasswordCreateCallParms) {
            this.userPasswordCreateAsync(userPasswordCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void userPasswordCreateAsync(UserPasswordCreateCallParms userPasswordCreateCallParms, object userState) {
            if ((this.userPasswordCreateOperationCompleted == null)) {
                this.userPasswordCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPasswordCreateOperationCompleted);
            }
            this.InvokeAsync("userPasswordCreate", new object[] {
                        userPasswordCreateCallParms}, this.userPasswordCreateOperationCompleted, userState);
        }
        
        private void OnuserPasswordCreateOperationCompleted(object arg) {
            if ((this.userPasswordCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPasswordCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPasswordSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPasswordSetCallParms userPasswordSetCallParms) {
            this.Invoke("userPasswordSet", new object[] {
                        userPasswordSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPasswordSet(UserPasswordSetCallParms userPasswordSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPasswordSet", new object[] {
                        userPasswordSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPasswordSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPasswordSetAsync(UserPasswordSetCallParms userPasswordSetCallParms) {
            this.userPasswordSetAsync(userPasswordSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userPasswordSetAsync(UserPasswordSetCallParms userPasswordSetCallParms, object userState) {
            if ((this.userPasswordSetOperationCompleted == null)) {
                this.userPasswordSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPasswordSetOperationCompleted);
            }
            this.InvokeAsync("userPasswordSet", new object[] {
                        userPasswordSetCallParms}, this.userPasswordSetOperationCompleted, userState);
        }
        
        private void OnuserPasswordSetOperationCompleted(object arg) {
            if ((this.userPasswordSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPasswordSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userPasswordGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserPasswordInfo userPasswordGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPasswordGetCallParms userPasswordGetCallParms) {
            object[] results = this.Invoke("userPasswordGet", new object[] {
                        userPasswordGetCallParms});
            return ((UserPasswordInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPasswordGet(UserPasswordGetCallParms userPasswordGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPasswordGet", new object[] {
                        userPasswordGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserPasswordInfo EnduserPasswordGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserPasswordInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void userPasswordGetAsync(UserPasswordGetCallParms userPasswordGetCallParms) {
            this.userPasswordGetAsync(userPasswordGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userPasswordGetAsync(UserPasswordGetCallParms userPasswordGetCallParms, object userState) {
            if ((this.userPasswordGetOperationCompleted == null)) {
                this.userPasswordGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPasswordGetOperationCompleted);
            }
            this.InvokeAsync("userPasswordGet", new object[] {
                        userPasswordGetCallParms}, this.userPasswordGetOperationCompleted, userState);
        }
        
        private void OnuserPasswordGetOperationCompleted(object arg) {
            if ((this.userPasswordGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPasswordGetCompleted(this, new userPasswordGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("userPasswordListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserPasswordInfo[] userPasswordList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPasswordListCallParms userPasswordListCallParms) {
            object[] results = this.Invoke("userPasswordList", new object[] {
                        userPasswordListCallParms});
            return ((UserPasswordInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPasswordList(UserPasswordListCallParms userPasswordListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPasswordList", new object[] {
                        userPasswordListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserPasswordInfo[] EnduserPasswordList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserPasswordInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public void userPasswordListAsync(UserPasswordListCallParms userPasswordListCallParms) {
            this.userPasswordListAsync(userPasswordListCallParms, null);
        }
        
    ///  <remarks/>
        public void userPasswordListAsync(UserPasswordListCallParms userPasswordListCallParms, object userState) {
            if ((this.userPasswordListOperationCompleted == null)) {
                this.userPasswordListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPasswordListOperationCompleted);
            }
            this.InvokeAsync("userPasswordList", new object[] {
                        userPasswordListCallParms}, this.userPasswordListOperationCompleted, userState);
        }
        
        private void OnuserPasswordListOperationCompleted(object arg) {
            if ((this.userPasswordListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPasswordListCompleted(this, new userPasswordListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPasswordDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPasswordDeleteCallParms userPasswordDeleteCallParms) {
            this.Invoke("userPasswordDelete", new object[] {
                        userPasswordDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPasswordDelete(UserPasswordDeleteCallParms userPasswordDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPasswordDelete", new object[] {
                        userPasswordDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPasswordDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPasswordDeleteAsync(UserPasswordDeleteCallParms userPasswordDeleteCallParms) {
            this.userPasswordDeleteAsync(userPasswordDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userPasswordDeleteAsync(UserPasswordDeleteCallParms userPasswordDeleteCallParms, object userState) {
            if ((this.userPasswordDeleteOperationCompleted == null)) {
                this.userPasswordDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPasswordDeleteOperationCompleted);
            }
            this.InvokeAsync("userPasswordDelete", new object[] {
                        userPasswordDeleteCallParms}, this.userPasswordDeleteOperationCompleted, userState);
        }
        
        private void OnuserPasswordDeleteOperationCompleted(object arg) {
            if ((this.userPasswordDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPasswordDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPasswordDeliver([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPasswordDeliverCallParms userPasswordDeliverCallParms) {
            this.Invoke("userPasswordDeliver", new object[] {
                        userPasswordDeliverCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPasswordDeliver(UserPasswordDeliverCallParms userPasswordDeliverCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPasswordDeliver", new object[] {
                        userPasswordDeliverCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPasswordDeliver(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPasswordDeliverAsync(UserPasswordDeliverCallParms userPasswordDeliverCallParms) {
            this.userPasswordDeliverAsync(userPasswordDeliverCallParms, null);
        }
        
    ///  <remarks/>
        public void userPasswordDeliverAsync(UserPasswordDeliverCallParms userPasswordDeliverCallParms, object userState) {
            if ((this.userPasswordDeliverOperationCompleted == null)) {
                this.userPasswordDeliverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPasswordDeliverOperationCompleted);
            }
            this.InvokeAsync("userPasswordDeliver", new object[] {
                        userPasswordDeliverCallParms}, this.userPasswordDeliverOperationCompleted, userState);
        }
        
        private void OnuserPasswordDeliverOperationCompleted(object arg) {
            if ((this.userPasswordDeliverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPasswordDeliverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPVNCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPVNCreateCallParms userPVNCreateCallParms) {
            this.Invoke("userPVNCreate", new object[] {
                        userPVNCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPVNCreate(UserPVNCreateCallParms userPVNCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPVNCreate", new object[] {
                        userPVNCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPVNCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPVNCreateAsync(UserPVNCreateCallParms userPVNCreateCallParms) {
            this.userPVNCreateAsync(userPVNCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void userPVNCreateAsync(UserPVNCreateCallParms userPVNCreateCallParms, object userState) {
            if ((this.userPVNCreateOperationCompleted == null)) {
                this.userPVNCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPVNCreateOperationCompleted);
            }
            this.InvokeAsync("userPVNCreate", new object[] {
                        userPVNCreateCallParms}, this.userPVNCreateOperationCompleted, userState);
        }
        
        private void OnuserPVNCreateOperationCompleted(object arg) {
            if ((this.userPVNCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPVNCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPVNSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPVNSetCallParms userPVNSetCallParms) {
            this.Invoke("userPVNSet", new object[] {
                        userPVNSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPVNSet(UserPVNSetCallParms userPVNSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPVNSet", new object[] {
                        userPVNSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPVNSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPVNSetAsync(UserPVNSetCallParms userPVNSetCallParms) {
            this.userPVNSetAsync(userPVNSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userPVNSetAsync(UserPVNSetCallParms userPVNSetCallParms, object userState) {
            if ((this.userPVNSetOperationCompleted == null)) {
                this.userPVNSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPVNSetOperationCompleted);
            }
            this.InvokeAsync("userPVNSet", new object[] {
                        userPVNSetCallParms}, this.userPVNSetOperationCompleted, userState);
        }
        
        private void OnuserPVNSetOperationCompleted(object arg) {
            if ((this.userPVNSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPVNSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPVNDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPVNDeleteCallParms userPVNDeleteCallParms) {
            this.Invoke("userPVNDelete", new object[] {
                        userPVNDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPVNDelete(UserPVNDeleteCallParms userPVNDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPVNDelete", new object[] {
                        userPVNDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPVNDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPVNDeleteAsync(UserPVNDeleteCallParms userPVNDeleteCallParms) {
            this.userPVNDeleteAsync(userPVNDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userPVNDeleteAsync(UserPVNDeleteCallParms userPVNDeleteCallParms, object userState) {
            if ((this.userPVNDeleteOperationCompleted == null)) {
                this.userPVNDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPVNDeleteOperationCompleted);
            }
            this.InvokeAsync("userPVNDelete", new object[] {
                        userPVNDeleteCallParms}, this.userPVNDeleteOperationCompleted, userState);
        }
        
        private void OnuserPVNDeleteOperationCompleted(object arg) {
            if ((this.userPVNDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPVNDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userPVNDeliver([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPVNDeliverCallParms userPVNDeliverCallParms) {
            this.Invoke("userPVNDeliver", new object[] {
                        userPVNDeliverCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPVNDeliver(UserPVNDeliverCallParms userPVNDeliverCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPVNDeliver", new object[] {
                        userPVNDeliverCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserPVNDeliver(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userPVNDeliverAsync(UserPVNDeliverCallParms userPVNDeliverCallParms) {
            this.userPVNDeliverAsync(userPVNDeliverCallParms, null);
        }
        
    ///  <remarks/>
        public void userPVNDeliverAsync(UserPVNDeliverCallParms userPVNDeliverCallParms, object userState) {
            if ((this.userPVNDeliverOperationCompleted == null)) {
                this.userPVNDeliverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPVNDeliverOperationCompleted);
            }
            this.InvokeAsync("userPVNDeliver", new object[] {
                        userPVNDeliverCallParms}, this.userPVNDeliverOperationCompleted, userState);
        }
        
        private void OnuserPVNDeliverOperationCompleted(object arg) {
            if ((this.userPVNDeliverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPVNDeliverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userPVNGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserPVNInfo userPVNGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserPVNGetCallParms userPVNGetCallParms) {
            object[] results = this.Invoke("userPVNGet", new object[] {
                        userPVNGetCallParms});
            return ((UserPVNInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserPVNGet(UserPVNGetCallParms userPVNGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPVNGet", new object[] {
                        userPVNGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserPVNInfo EnduserPVNGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserPVNInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void userPVNGetAsync(UserPVNGetCallParms userPVNGetCallParms) {
            this.userPVNGetAsync(userPVNGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userPVNGetAsync(UserPVNGetCallParms userPVNGetCallParms, object userState) {
            if ((this.userPVNGetOperationCompleted == null)) {
                this.userPVNGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPVNGetOperationCompleted);
            }
            this.InvokeAsync("userPVNGet", new object[] {
                        userPVNGetCallParms}, this.userPVNGetOperationCompleted, userState);
        }
        
        private void OnuserPVNGetOperationCompleted(object arg) {
            if ((this.userPVNGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPVNGetCompleted(this, new userPVNGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userCardCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCardCreateCallParms userCardCreateCallParms) {
            this.Invoke("userCardCreate", new object[] {
                        userCardCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCardCreate(UserCardCreateCallParms userCardCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCardCreate", new object[] {
                        userCardCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserCardCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userCardCreateAsync(UserCardCreateCallParms userCardCreateCallParms) {
            this.userCardCreateAsync(userCardCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void userCardCreateAsync(UserCardCreateCallParms userCardCreateCallParms, object userState) {
            if ((this.userCardCreateOperationCompleted == null)) {
                this.userCardCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCardCreateOperationCompleted);
            }
            this.InvokeAsync("userCardCreate", new object[] {
                        userCardCreateCallParms}, this.userCardCreateOperationCompleted, userState);
        }
        
        private void OnuserCardCreateOperationCompleted(object arg) {
            if ((this.userCardCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCardCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userCardDeleteReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userCardDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCardDeleteCallParms userCardDeleteCallParms) {
            object[] results = this.Invoke("userCardDelete", new object[] {
                        userCardDeleteCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCardDelete(UserCardDeleteCallParms userCardDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCardDelete", new object[] {
                        userCardDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserCardDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userCardDeleteAsync(UserCardDeleteCallParms userCardDeleteCallParms) {
            this.userCardDeleteAsync(userCardDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userCardDeleteAsync(UserCardDeleteCallParms userCardDeleteCallParms, object userState) {
            if ((this.userCardDeleteOperationCompleted == null)) {
                this.userCardDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCardDeleteOperationCompleted);
            }
            this.InvokeAsync("userCardDelete", new object[] {
                        userCardDeleteCallParms}, this.userCardDeleteOperationCompleted, userState);
        }
        
        private void OnuserCardDeleteOperationCompleted(object arg) {
            if ((this.userCardDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCardDeleteCompleted(this, new userCardDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userCardDeliver([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCardDeliverCallParms userCardDeliverCallParms) {
            this.Invoke("userCardDeliver", new object[] {
                        userCardDeliverCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCardDeliver(UserCardDeliverCallParms userCardDeliverCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCardDeliver", new object[] {
                        userCardDeliverCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserCardDeliver(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userCardDeliverAsync(UserCardDeliverCallParms userCardDeliverCallParms) {
            this.userCardDeliverAsync(userCardDeliverCallParms, null);
        }
        
    ///  <remarks/>
        public void userCardDeliverAsync(UserCardDeliverCallParms userCardDeliverCallParms, object userState) {
            if ((this.userCardDeliverOperationCompleted == null)) {
                this.userCardDeliverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCardDeliverOperationCompleted);
            }
            this.InvokeAsync("userCardDeliver", new object[] {
                        userCardDeliverCallParms}, this.userCardDeliverOperationCompleted, userState);
        }
        
        private void OnuserCardDeliverOperationCompleted(object arg) {
            if ((this.userCardDeliverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCardDeliverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("userCardGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserCardInfo[] userCardGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCardGetCallParms userCardGetCallParms) {
            object[] results = this.Invoke("userCardGet", new object[] {
                        userCardGetCallParms});
            return ((UserCardInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCardGet(UserCardGetCallParms userCardGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCardGet", new object[] {
                        userCardGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserCardInfo[] EnduserCardGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserCardInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public void userCardGetAsync(UserCardGetCallParms userCardGetCallParms) {
            this.userCardGetAsync(userCardGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userCardGetAsync(UserCardGetCallParms userCardGetCallParms, object userState) {
            if ((this.userCardGetOperationCompleted == null)) {
                this.userCardGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCardGetOperationCompleted);
            }
            this.InvokeAsync("userCardGet", new object[] {
                        userCardGetCallParms}, this.userCardGetOperationCompleted, userState);
        }
        
        private void OnuserCardGetOperationCompleted(object arg) {
            if ((this.userCardGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCardGetCompleted(this, new userCardGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userCardSetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userCardSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCardSetCallParms userCardSetCallParms) {
            object[] results = this.Invoke("userCardSet", new object[] {
                        userCardSetCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCardSet(UserCardSetCallParms userCardSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCardSet", new object[] {
                        userCardSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserCardSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userCardSetAsync(UserCardSetCallParms userCardSetCallParms) {
            this.userCardSetAsync(userCardSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userCardSetAsync(UserCardSetCallParms userCardSetCallParms, object userState) {
            if ((this.userCardSetOperationCompleted == null)) {
                this.userCardSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCardSetOperationCompleted);
            }
            this.InvokeAsync("userCardSet", new object[] {
                        userCardSetCallParms}, this.userCardSetOperationCompleted, userState);
        }
        
        private void OnuserCardSetOperationCompleted(object arg) {
            if ((this.userCardSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCardSetCompleted(this, new userCardSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userCardUnassignReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userCardUnassign([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCardUnassignCallParms userCardUnassignCallParms) {
            object[] results = this.Invoke("userCardUnassign", new object[] {
                        userCardUnassignCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCardUnassign(UserCardUnassignCallParms userCardUnassignCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCardUnassign", new object[] {
                        userCardUnassignCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserCardUnassign(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userCardUnassignAsync(UserCardUnassignCallParms userCardUnassignCallParms) {
            this.userCardUnassignAsync(userCardUnassignCallParms, null);
        }
        
    ///  <remarks/>
        public void userCardUnassignAsync(UserCardUnassignCallParms userCardUnassignCallParms, object userState) {
            if ((this.userCardUnassignOperationCompleted == null)) {
                this.userCardUnassignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCardUnassignOperationCompleted);
            }
            this.InvokeAsync("userCardUnassign", new object[] {
                        userCardUnassignCallParms}, this.userCardUnassignOperationCompleted, userState);
        }
        
        private void OnuserCardUnassignOperationCompleted(object arg) {
            if ((this.userCardUnassignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCardUnassignCompleted(this, new userCardUnassignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userCardListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserCardListResult userCardList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCardListCallParms userCardListCallParms) {
            object[] results = this.Invoke("userCardList", new object[] {
                        userCardListCallParms});
            return ((UserCardListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCardList(UserCardListCallParms userCardListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCardList", new object[] {
                        userCardListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserCardListResult EnduserCardList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserCardListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userCardListAsync(UserCardListCallParms userCardListCallParms) {
            this.userCardListAsync(userCardListCallParms, null);
        }
        
    ///  <remarks/>
        public void userCardListAsync(UserCardListCallParms userCardListCallParms, object userState) {
            if ((this.userCardListOperationCompleted == null)) {
                this.userCardListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCardListOperationCompleted);
            }
            this.InvokeAsync("userCardList", new object[] {
                        userCardListCallParms}, this.userCardListOperationCompleted, userState);
        }
        
        private void OnuserCardListOperationCompleted(object arg) {
            if ((this.userCardListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCardListCompleted(this, new userCardListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userCardExportReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public CardExportResult userCardExport([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCardExportCallParms userCardExportCallParms) {
            object[] results = this.Invoke("userCardExport", new object[] {
                        userCardExportCallParms});
            return ((CardExportResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCardExport(UserCardExportCallParms userCardExportCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCardExport", new object[] {
                        userCardExportCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public CardExportResult EnduserCardExport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CardExportResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userCardExportAsync(UserCardExportCallParms userCardExportCallParms) {
            this.userCardExportAsync(userCardExportCallParms, null);
        }
        
    ///  <remarks/>
        public void userCardExportAsync(UserCardExportCallParms userCardExportCallParms, object userState) {
            if ((this.userCardExportOperationCompleted == null)) {
                this.userCardExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCardExportOperationCompleted);
            }
            this.InvokeAsync("userCardExport", new object[] {
                        userCardExportCallParms}, this.userCardExportOperationCompleted, userState);
        }
        
        private void OnuserCardExportOperationCompleted(object arg) {
            if ((this.userCardExportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCardExportCompleted(this, new userCardExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userTokenAssign([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenAssignCallParms userTokenAssignCallParms) {
            this.Invoke("userTokenAssign", new object[] {
                        userTokenAssignCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenAssign(UserTokenAssignCallParms userTokenAssignCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenAssign", new object[] {
                        userTokenAssignCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserTokenAssign(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userTokenAssignAsync(UserTokenAssignCallParms userTokenAssignCallParms) {
            this.userTokenAssignAsync(userTokenAssignCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenAssignAsync(UserTokenAssignCallParms userTokenAssignCallParms, object userState) {
            if ((this.userTokenAssignOperationCompleted == null)) {
                this.userTokenAssignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenAssignOperationCompleted);
            }
            this.InvokeAsync("userTokenAssign", new object[] {
                        userTokenAssignCallParms}, this.userTokenAssignOperationCompleted, userState);
        }
        
        private void OnuserTokenAssignOperationCompleted(object arg) {
            if ((this.userTokenAssignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenAssignCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userTokenCreateReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public string userTokenCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenCreateCallParms userTokenCreateCallParms) {
            object[] results = this.Invoke("userTokenCreate", new object[] {
                        userTokenCreateCallParms});
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenCreate(UserTokenCreateCallParms userTokenCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenCreate", new object[] {
                        userTokenCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public string EnduserTokenCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenCreateAsync(UserTokenCreateCallParms userTokenCreateCallParms) {
            this.userTokenCreateAsync(userTokenCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenCreateAsync(UserTokenCreateCallParms userTokenCreateCallParms, object userState) {
            if ((this.userTokenCreateOperationCompleted == null)) {
                this.userTokenCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenCreateOperationCompleted);
            }
            this.InvokeAsync("userTokenCreate", new object[] {
                        userTokenCreateCallParms}, this.userTokenCreateOperationCompleted, userState);
        }
        
        private void OnuserTokenCreateOperationCompleted(object arg) {
            if ((this.userTokenCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenCreateCompleted(this, new userTokenCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userTokenDeleteReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userTokenDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenDeleteCallParms userTokenDeleteCallParms) {
            object[] results = this.Invoke("userTokenDelete", new object[] {
                        userTokenDeleteCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenDelete(UserTokenDeleteCallParms userTokenDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenDelete", new object[] {
                        userTokenDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserTokenDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenDeleteAsync(UserTokenDeleteCallParms userTokenDeleteCallParms) {
            this.userTokenDeleteAsync(userTokenDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenDeleteAsync(UserTokenDeleteCallParms userTokenDeleteCallParms, object userState) {
            if ((this.userTokenDeleteOperationCompleted == null)) {
                this.userTokenDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenDeleteOperationCompleted);
            }
            this.InvokeAsync("userTokenDelete", new object[] {
                        userTokenDeleteCallParms}, this.userTokenDeleteOperationCompleted, userState);
        }
        
        private void OnuserTokenDeleteOperationCompleted(object arg) {
            if ((this.userTokenDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenDeleteCompleted(this, new userTokenDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("userTokenGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserTokenInfo[] userTokenGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenGetCallParms userTokenGetCallParms) {
            object[] results = this.Invoke("userTokenGet", new object[] {
                        userTokenGetCallParms});
            return ((UserTokenInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenGet(UserTokenGetCallParms userTokenGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenGet", new object[] {
                        userTokenGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserTokenInfo[] EnduserTokenGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTokenInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenGetAsync(UserTokenGetCallParms userTokenGetCallParms) {
            this.userTokenGetAsync(userTokenGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenGetAsync(UserTokenGetCallParms userTokenGetCallParms, object userState) {
            if ((this.userTokenGetOperationCompleted == null)) {
                this.userTokenGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenGetOperationCompleted);
            }
            this.InvokeAsync("userTokenGet", new object[] {
                        userTokenGetCallParms}, this.userTokenGetOperationCompleted, userState);
        }
        
        private void OnuserTokenGetOperationCompleted(object arg) {
            if ((this.userTokenGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenGetCompleted(this, new userTokenGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userTokenSetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userTokenSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenSetCallParms userTokenSetCallParms) {
            object[] results = this.Invoke("userTokenSet", new object[] {
                        userTokenSetCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenSet(UserTokenSetCallParms userTokenSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenSet", new object[] {
                        userTokenSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserTokenSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenSetAsync(UserTokenSetCallParms userTokenSetCallParms) {
            this.userTokenSetAsync(userTokenSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenSetAsync(UserTokenSetCallParms userTokenSetCallParms, object userState) {
            if ((this.userTokenSetOperationCompleted == null)) {
                this.userTokenSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenSetOperationCompleted);
            }
            this.InvokeAsync("userTokenSet", new object[] {
                        userTokenSetCallParms}, this.userTokenSetOperationCompleted, userState);
        }
        
        private void OnuserTokenSetOperationCompleted(object arg) {
            if ((this.userTokenSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenSetCompleted(this, new userTokenSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userTokenUnassignReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userTokenUnassign([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenUnassignCallParms userTokenUnassignCallParms) {
            object[] results = this.Invoke("userTokenUnassign", new object[] {
                        userTokenUnassignCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenUnassign(UserTokenUnassignCallParms userTokenUnassignCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenUnassign", new object[] {
                        userTokenUnassignCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserTokenUnassign(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenUnassignAsync(UserTokenUnassignCallParms userTokenUnassignCallParms) {
            this.userTokenUnassignAsync(userTokenUnassignCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenUnassignAsync(UserTokenUnassignCallParms userTokenUnassignCallParms, object userState) {
            if ((this.userTokenUnassignOperationCompleted == null)) {
                this.userTokenUnassignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenUnassignOperationCompleted);
            }
            this.InvokeAsync("userTokenUnassign", new object[] {
                        userTokenUnassignCallParms}, this.userTokenUnassignOperationCompleted, userState);
        }
        
        private void OnuserTokenUnassignOperationCompleted(object arg) {
            if ((this.userTokenUnassignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenUnassignCompleted(this, new userTokenUnassignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userTokenChallengeGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public string userTokenChallengeGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenChallengeGetCallParms userTokenChallengeGetCallParms) {
            object[] results = this.Invoke("userTokenChallengeGet", new object[] {
                        userTokenChallengeGetCallParms});
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenChallengeGet(UserTokenChallengeGetCallParms userTokenChallengeGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenChallengeGet", new object[] {
                        userTokenChallengeGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public string EnduserTokenChallengeGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenChallengeGetAsync(UserTokenChallengeGetCallParms userTokenChallengeGetCallParms) {
            this.userTokenChallengeGetAsync(userTokenChallengeGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenChallengeGetAsync(UserTokenChallengeGetCallParms userTokenChallengeGetCallParms, object userState) {
            if ((this.userTokenChallengeGetOperationCompleted == null)) {
                this.userTokenChallengeGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenChallengeGetOperationCompleted);
            }
            this.InvokeAsync("userTokenChallengeGet", new object[] {
                        userTokenChallengeGetCallParms}, this.userTokenChallengeGetOperationCompleted, userState);
        }
        
        private void OnuserTokenChallengeGetOperationCompleted(object arg) {
            if ((this.userTokenChallengeGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenChallengeGetCompleted(this, new userTokenChallengeGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userTokenAuthenticateReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public string userTokenAuthenticate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenAuthenticateCallParms userTokenAuthenticateCallParms) {
            object[] results = this.Invoke("userTokenAuthenticate", new object[] {
                        userTokenAuthenticateCallParms});
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenAuthenticate(UserTokenAuthenticateCallParms userTokenAuthenticateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenAuthenticate", new object[] {
                        userTokenAuthenticateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public string EnduserTokenAuthenticate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenAuthenticateAsync(UserTokenAuthenticateCallParms userTokenAuthenticateCallParms) {
            this.userTokenAuthenticateAsync(userTokenAuthenticateCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenAuthenticateAsync(UserTokenAuthenticateCallParms userTokenAuthenticateCallParms, object userState) {
            if ((this.userTokenAuthenticateOperationCompleted == null)) {
                this.userTokenAuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenAuthenticateOperationCompleted);
            }
            this.InvokeAsync("userTokenAuthenticate", new object[] {
                        userTokenAuthenticateCallParms}, this.userTokenAuthenticateOperationCompleted, userState);
        }
        
        private void OnuserTokenAuthenticateOperationCompleted(object arg) {
            if ((this.userTokenAuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenAuthenticateCompleted(this, new userTokenAuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userTokenAuthenticateReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public string userTokenChallengeAuthenticate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenChallengeAuthenticateCallParms userTokenChallengeAuthenticateCallParms) {
            object[] results = this.Invoke("userTokenChallengeAuthenticate", new object[] {
                        userTokenChallengeAuthenticateCallParms});
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenChallengeAuthenticate(UserTokenChallengeAuthenticateCallParms userTokenChallengeAuthenticateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenChallengeAuthenticate", new object[] {
                        userTokenChallengeAuthenticateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public string EnduserTokenChallengeAuthenticate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenChallengeAuthenticateAsync(UserTokenChallengeAuthenticateCallParms userTokenChallengeAuthenticateCallParms) {
            this.userTokenChallengeAuthenticateAsync(userTokenChallengeAuthenticateCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenChallengeAuthenticateAsync(UserTokenChallengeAuthenticateCallParms userTokenChallengeAuthenticateCallParms, object userState) {
            if ((this.userTokenChallengeAuthenticateOperationCompleted == null)) {
                this.userTokenChallengeAuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenChallengeAuthenticateOperationCompleted);
            }
            this.InvokeAsync("userTokenChallengeAuthenticate", new object[] {
                        userTokenChallengeAuthenticateCallParms}, this.userTokenChallengeAuthenticateOperationCompleted, userState);
        }
        
        private void OnuserTokenChallengeAuthenticateOperationCompleted(object arg) {
            if ((this.userTokenChallengeAuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenChallengeAuthenticateCompleted(this, new userTokenChallengeAuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userTokenUnlockReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserTokenUnlockResult userTokenUnlock([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenUnlockCallParms userTokenUnlockCallParms) {
            object[] results = this.Invoke("userTokenUnlock", new object[] {
                        userTokenUnlockCallParms});
            return ((UserTokenUnlockResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenUnlock(UserTokenUnlockCallParms userTokenUnlockCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenUnlock", new object[] {
                        userTokenUnlockCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserTokenUnlockResult EnduserTokenUnlock(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTokenUnlockResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenUnlockAsync(UserTokenUnlockCallParms userTokenUnlockCallParms) {
            this.userTokenUnlockAsync(userTokenUnlockCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenUnlockAsync(UserTokenUnlockCallParms userTokenUnlockCallParms, object userState) {
            if ((this.userTokenUnlockOperationCompleted == null)) {
                this.userTokenUnlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenUnlockOperationCompleted);
            }
            this.InvokeAsync("userTokenUnlock", new object[] {
                        userTokenUnlockCallParms}, this.userTokenUnlockOperationCompleted, userState);
        }
        
        private void OnuserTokenUnlockOperationCompleted(object arg) {
            if ((this.userTokenUnlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenUnlockCompleted(this, new userTokenUnlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userTokenUnlockExReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserTokenUnlockResultEx userTokenUnlockEx([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenUnlockExCallParms userTokenUnlockExCallParms) {
            object[] results = this.Invoke("userTokenUnlockEx", new object[] {
                        userTokenUnlockExCallParms});
            return ((UserTokenUnlockResultEx)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenUnlockEx(UserTokenUnlockExCallParms userTokenUnlockExCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenUnlockEx", new object[] {
                        userTokenUnlockExCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserTokenUnlockResultEx EnduserTokenUnlockEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTokenUnlockResultEx)(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenUnlockExAsync(UserTokenUnlockExCallParms userTokenUnlockExCallParms) {
            this.userTokenUnlockExAsync(userTokenUnlockExCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenUnlockExAsync(UserTokenUnlockExCallParms userTokenUnlockExCallParms, object userState) {
            if ((this.userTokenUnlockExOperationCompleted == null)) {
                this.userTokenUnlockExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenUnlockExOperationCompleted);
            }
            this.InvokeAsync("userTokenUnlockEx", new object[] {
                        userTokenUnlockExCallParms}, this.userTokenUnlockExOperationCompleted, userState);
        }
        
        private void OnuserTokenUnlockExOperationCompleted(object arg) {
            if ((this.userTokenUnlockExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenUnlockExCompleted(this, new userTokenUnlockExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userTokenResponseReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserTokenResponse userTokenResponseGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenResponseGetCallParms userTokenResponseGetCallParms) {
            object[] results = this.Invoke("userTokenResponseGet", new object[] {
                        userTokenResponseGetCallParms});
            return ((UserTokenResponse)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenResponseGet(UserTokenResponseGetCallParms userTokenResponseGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenResponseGet", new object[] {
                        userTokenResponseGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserTokenResponse EnduserTokenResponseGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTokenResponse)(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenResponseGetAsync(UserTokenResponseGetCallParms userTokenResponseGetCallParms) {
            this.userTokenResponseGetAsync(userTokenResponseGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenResponseGetAsync(UserTokenResponseGetCallParms userTokenResponseGetCallParms, object userState) {
            if ((this.userTokenResponseGetOperationCompleted == null)) {
                this.userTokenResponseGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenResponseGetOperationCompleted);
            }
            this.InvokeAsync("userTokenResponseGet", new object[] {
                        userTokenResponseGetCallParms}, this.userTokenResponseGetOperationCompleted, userState);
        }
        
        private void OnuserTokenResponseGetOperationCompleted(object arg) {
            if ((this.userTokenResponseGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenResponseGetCompleted(this, new userTokenResponseGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userTokenActivateReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserTokenActivateResult userTokenActivate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenActivateCallParms userTokenActivateCallParms) {
            object[] results = this.Invoke("userTokenActivate", new object[] {
                        userTokenActivateCallParms});
            return ((UserTokenActivateResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenActivate(UserTokenActivateCallParms userTokenActivateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenActivate", new object[] {
                        userTokenActivateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserTokenActivateResult EnduserTokenActivate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTokenActivateResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenActivateAsync(UserTokenActivateCallParms userTokenActivateCallParms) {
            this.userTokenActivateAsync(userTokenActivateCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenActivateAsync(UserTokenActivateCallParms userTokenActivateCallParms, object userState) {
            if ((this.userTokenActivateOperationCompleted == null)) {
                this.userTokenActivateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenActivateOperationCompleted);
            }
            this.InvokeAsync("userTokenActivate", new object[] {
                        userTokenActivateCallParms}, this.userTokenActivateOperationCompleted, userState);
        }
        
        private void OnuserTokenActivateOperationCompleted(object arg) {
            if ((this.userTokenActivateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenActivateCompleted(this, new userTokenActivateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userTokenActivateExReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserTokenActivateResultEx userTokenActivateEx([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenActivateExCallParms userTokenActivateExCallParms) {
            object[] results = this.Invoke("userTokenActivateEx", new object[] {
                        userTokenActivateExCallParms});
            return ((UserTokenActivateResultEx)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenActivateEx(UserTokenActivateExCallParms userTokenActivateExCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenActivateEx", new object[] {
                        userTokenActivateExCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserTokenActivateResultEx EnduserTokenActivateEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTokenActivateResultEx)(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenActivateExAsync(UserTokenActivateExCallParms userTokenActivateExCallParms) {
            this.userTokenActivateExAsync(userTokenActivateExCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenActivateExAsync(UserTokenActivateExCallParms userTokenActivateExCallParms, object userState) {
            if ((this.userTokenActivateExOperationCompleted == null)) {
                this.userTokenActivateExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenActivateExOperationCompleted);
            }
            this.InvokeAsync("userTokenActivateEx", new object[] {
                        userTokenActivateExCallParms}, this.userTokenActivateExOperationCompleted, userState);
        }
        
        private void OnuserTokenActivateExOperationCompleted(object arg) {
            if ((this.userTokenActivateExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenActivateExCompleted(this, new userTokenActivateExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userTokenActivateCompleteReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserTokenActivateCompleteResult userTokenActivateComplete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenActivateCompleteCallParms userTokenActivateCompleteCallParms) {
            object[] results = this.Invoke("userTokenActivateComplete", new object[] {
                        userTokenActivateCompleteCallParms});
            return ((UserTokenActivateCompleteResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenActivateComplete(UserTokenActivateCompleteCallParms userTokenActivateCompleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenActivateComplete", new object[] {
                        userTokenActivateCompleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserTokenActivateCompleteResult EnduserTokenActivateComplete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTokenActivateCompleteResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenActivateCompleteAsync(UserTokenActivateCompleteCallParms userTokenActivateCompleteCallParms) {
            this.userTokenActivateCompleteAsync(userTokenActivateCompleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenActivateCompleteAsync(UserTokenActivateCompleteCallParms userTokenActivateCompleteCallParms, object userState) {
            if ((this.userTokenActivateCompleteOperationCompleted == null)) {
                this.userTokenActivateCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenActivateCompleteOperationCompleted);
            }
            this.InvokeAsync("userTokenActivateComplete", new object[] {
                        userTokenActivateCompleteCallParms}, this.userTokenActivateCompleteOperationCompleted, userState);
        }
        
        private void OnuserTokenActivateCompleteOperationCompleted(object arg) {
            if ((this.userTokenActivateCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenActivateCompleteCompleted(this, new userTokenActivateCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userTokenTransactionValidate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenTransactionValidateCallParms userTokenTransactionValidateCallParms) {
            this.Invoke("userTokenTransactionValidate", new object[] {
                        userTokenTransactionValidateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenTransactionValidate(UserTokenTransactionValidateCallParms userTokenTransactionValidateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenTransactionValidate", new object[] {
                        userTokenTransactionValidateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserTokenTransactionValidate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userTokenTransactionValidateAsync(UserTokenTransactionValidateCallParms userTokenTransactionValidateCallParms) {
            this.userTokenTransactionValidateAsync(userTokenTransactionValidateCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenTransactionValidateAsync(UserTokenTransactionValidateCallParms userTokenTransactionValidateCallParms, object userState) {
            if ((this.userTokenTransactionValidateOperationCompleted == null)) {
                this.userTokenTransactionValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenTransactionValidateOperationCompleted);
            }
            this.InvokeAsync("userTokenTransactionValidate", new object[] {
                        userTokenTransactionValidateCallParms}, this.userTokenTransactionValidateOperationCompleted, userState);
        }
        
        private void OnuserTokenTransactionValidateOperationCompleted(object arg) {
            if ((this.userTokenTransactionValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenTransactionValidateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userTokenListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserTokenListResult userTokenList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserTokenListCallParms userTokenListCallParms) {
            object[] results = this.Invoke("userTokenList", new object[] {
                        userTokenListCallParms});
            return ((UserTokenListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserTokenList(UserTokenListCallParms userTokenListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userTokenList", new object[] {
                        userTokenListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserTokenListResult EnduserTokenList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTokenListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userTokenListAsync(UserTokenListCallParms userTokenListCallParms) {
            this.userTokenListAsync(userTokenListCallParms, null);
        }
        
    ///  <remarks/>
        public void userTokenListAsync(UserTokenListCallParms userTokenListCallParms, object userState) {
            if ((this.userTokenListOperationCompleted == null)) {
                this.userTokenListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserTokenListOperationCompleted);
            }
            this.InvokeAsync("userTokenList", new object[] {
                        userTokenListCallParms}, this.userTokenListOperationCompleted, userState);
        }
        
        private void OnuserTokenListOperationCompleted(object arg) {
            if ((this.userTokenListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userTokenListCompleted(this, new userTokenListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userBiometricCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserBiometricCreateCallParms userBiometricCreateCallParms) {
            this.Invoke("userBiometricCreate", new object[] {
                        userBiometricCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserBiometricCreate(UserBiometricCreateCallParms userBiometricCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userBiometricCreate", new object[] {
                        userBiometricCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserBiometricCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userBiometricCreateAsync(UserBiometricCreateCallParms userBiometricCreateCallParms) {
            this.userBiometricCreateAsync(userBiometricCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void userBiometricCreateAsync(UserBiometricCreateCallParms userBiometricCreateCallParms, object userState) {
            if ((this.userBiometricCreateOperationCompleted == null)) {
                this.userBiometricCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserBiometricCreateOperationCompleted);
            }
            this.InvokeAsync("userBiometricCreate", new object[] {
                        userBiometricCreateCallParms}, this.userBiometricCreateOperationCompleted, userState);
        }
        
        private void OnuserBiometricCreateOperationCompleted(object arg) {
            if ((this.userBiometricCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userBiometricCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userBiometricDeleteReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userBiometricDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserBiometricDeleteCallParms userBiometricDeleteCallParms) {
            object[] results = this.Invoke("userBiometricDelete", new object[] {
                        userBiometricDeleteCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserBiometricDelete(UserBiometricDeleteCallParms userBiometricDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userBiometricDelete", new object[] {
                        userBiometricDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserBiometricDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userBiometricDeleteAsync(UserBiometricDeleteCallParms userBiometricDeleteCallParms) {
            this.userBiometricDeleteAsync(userBiometricDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userBiometricDeleteAsync(UserBiometricDeleteCallParms userBiometricDeleteCallParms, object userState) {
            if ((this.userBiometricDeleteOperationCompleted == null)) {
                this.userBiometricDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserBiometricDeleteOperationCompleted);
            }
            this.InvokeAsync("userBiometricDelete", new object[] {
                        userBiometricDeleteCallParms}, this.userBiometricDeleteOperationCompleted, userState);
        }
        
        private void OnuserBiometricDeleteOperationCompleted(object arg) {
            if ((this.userBiometricDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userBiometricDeleteCompleted(this, new userBiometricDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("userBiometricGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserBiometricInfo[] userBiometricGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserBiometricGetCallParms userBiometricGetCallParms) {
            object[] results = this.Invoke("userBiometricGet", new object[] {
                        userBiometricGetCallParms});
            return ((UserBiometricInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserBiometricGet(UserBiometricGetCallParms userBiometricGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userBiometricGet", new object[] {
                        userBiometricGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserBiometricInfo[] EnduserBiometricGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserBiometricInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public void userBiometricGetAsync(UserBiometricGetCallParms userBiometricGetCallParms) {
            this.userBiometricGetAsync(userBiometricGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userBiometricGetAsync(UserBiometricGetCallParms userBiometricGetCallParms, object userState) {
            if ((this.userBiometricGetOperationCompleted == null)) {
                this.userBiometricGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserBiometricGetOperationCompleted);
            }
            this.InvokeAsync("userBiometricGet", new object[] {
                        userBiometricGetCallParms}, this.userBiometricGetOperationCompleted, userState);
        }
        
        private void OnuserBiometricGetOperationCompleted(object arg) {
            if ((this.userBiometricGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userBiometricGetCompleted(this, new userBiometricGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userBiometricSetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userBiometricSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserBiometricSetCallParms userBiometricSetCallParms) {
            object[] results = this.Invoke("userBiometricSet", new object[] {
                        userBiometricSetCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserBiometricSet(UserBiometricSetCallParms userBiometricSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userBiometricSet", new object[] {
                        userBiometricSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserBiometricSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userBiometricSetAsync(UserBiometricSetCallParms userBiometricSetCallParms) {
            this.userBiometricSetAsync(userBiometricSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userBiometricSetAsync(UserBiometricSetCallParms userBiometricSetCallParms, object userState) {
            if ((this.userBiometricSetOperationCompleted == null)) {
                this.userBiometricSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserBiometricSetOperationCompleted);
            }
            this.InvokeAsync("userBiometricSet", new object[] {
                        userBiometricSetCallParms}, this.userBiometricSetOperationCompleted, userState);
        }
        
        private void OnuserBiometricSetOperationCompleted(object arg) {
            if ((this.userBiometricSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userBiometricSetCompleted(this, new userBiometricSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialCreateReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public string userSmartCredentialCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialCreateCallParms userSmartCredentialCreateCallParms) {
            object[] results = this.Invoke("userSmartCredentialCreate", new object[] {
                        userSmartCredentialCreateCallParms});
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialCreate(UserSmartCredentialCreateCallParms userSmartCredentialCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialCreate", new object[] {
                        userSmartCredentialCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public string EnduserSmartCredentialCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialCreateAsync(UserSmartCredentialCreateCallParms userSmartCredentialCreateCallParms) {
            this.userSmartCredentialCreateAsync(userSmartCredentialCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialCreateAsync(UserSmartCredentialCreateCallParms userSmartCredentialCreateCallParms, object userState) {
            if ((this.userSmartCredentialCreateOperationCompleted == null)) {
                this.userSmartCredentialCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialCreateOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialCreate", new object[] {
                        userSmartCredentialCreateCallParms}, this.userSmartCredentialCreateOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialCreateOperationCompleted(object arg) {
            if ((this.userSmartCredentialCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialCreateCompleted(this, new userSmartCredentialCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialCreateExReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public string userSmartCredentialCreateEx([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialCreateExCallParms userSmartCredentialCreateExCallParms) {
            object[] results = this.Invoke("userSmartCredentialCreateEx", new object[] {
                        userSmartCredentialCreateExCallParms});
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialCreateEx(UserSmartCredentialCreateExCallParms userSmartCredentialCreateExCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialCreateEx", new object[] {
                        userSmartCredentialCreateExCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public string EnduserSmartCredentialCreateEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialCreateExAsync(UserSmartCredentialCreateExCallParms userSmartCredentialCreateExCallParms) {
            this.userSmartCredentialCreateExAsync(userSmartCredentialCreateExCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialCreateExAsync(UserSmartCredentialCreateExCallParms userSmartCredentialCreateExCallParms, object userState) {
            if ((this.userSmartCredentialCreateExOperationCompleted == null)) {
                this.userSmartCredentialCreateExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialCreateExOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialCreateEx", new object[] {
                        userSmartCredentialCreateExCallParms}, this.userSmartCredentialCreateExOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialCreateExOperationCompleted(object arg) {
            if ((this.userSmartCredentialCreateExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialCreateExCompleted(this, new userSmartCredentialCreateExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userSmartCredentialDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialDeleteCallParms userSmartCredentialDeleteCallParms) {
            this.Invoke("userSmartCredentialDelete", new object[] {
                        userSmartCredentialDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialDelete(UserSmartCredentialDeleteCallParms userSmartCredentialDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialDelete", new object[] {
                        userSmartCredentialDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserSmartCredentialDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userSmartCredentialDeleteAsync(UserSmartCredentialDeleteCallParms userSmartCredentialDeleteCallParms) {
            this.userSmartCredentialDeleteAsync(userSmartCredentialDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialDeleteAsync(UserSmartCredentialDeleteCallParms userSmartCredentialDeleteCallParms, object userState) {
            if ((this.userSmartCredentialDeleteOperationCompleted == null)) {
                this.userSmartCredentialDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialDeleteOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialDelete", new object[] {
                        userSmartCredentialDeleteCallParms}, this.userSmartCredentialDeleteOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialDeleteOperationCompleted(object arg) {
            if ((this.userSmartCredentialDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserSmartCredentialInfo userSmartCredentialGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialGetCallParms userSmartCredentialGetCallParms) {
            object[] results = this.Invoke("userSmartCredentialGet", new object[] {
                        userSmartCredentialGetCallParms});
            return ((UserSmartCredentialInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialGet(UserSmartCredentialGetCallParms userSmartCredentialGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialGet", new object[] {
                        userSmartCredentialGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserSmartCredentialInfo EnduserSmartCredentialGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserSmartCredentialInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialGetAsync(UserSmartCredentialGetCallParms userSmartCredentialGetCallParms) {
            this.userSmartCredentialGetAsync(userSmartCredentialGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialGetAsync(UserSmartCredentialGetCallParms userSmartCredentialGetCallParms, object userState) {
            if ((this.userSmartCredentialGetOperationCompleted == null)) {
                this.userSmartCredentialGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialGetOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialGet", new object[] {
                        userSmartCredentialGetCallParms}, this.userSmartCredentialGetOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialGetOperationCompleted(object arg) {
            if ((this.userSmartCredentialGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialGetCompleted(this, new userSmartCredentialGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialGetExReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserSmartCredentialInfoEx userSmartCredentialGetEx([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialGetExCallParms userSmartCredentialGetExCallParms) {
            object[] results = this.Invoke("userSmartCredentialGetEx", new object[] {
                        userSmartCredentialGetExCallParms});
            return ((UserSmartCredentialInfoEx)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialGetEx(UserSmartCredentialGetExCallParms userSmartCredentialGetExCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialGetEx", new object[] {
                        userSmartCredentialGetExCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserSmartCredentialInfoEx EnduserSmartCredentialGetEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserSmartCredentialInfoEx)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialGetExAsync(UserSmartCredentialGetExCallParms userSmartCredentialGetExCallParms) {
            this.userSmartCredentialGetExAsync(userSmartCredentialGetExCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialGetExAsync(UserSmartCredentialGetExCallParms userSmartCredentialGetExCallParms, object userState) {
            if ((this.userSmartCredentialGetExOperationCompleted == null)) {
                this.userSmartCredentialGetExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialGetExOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialGetEx", new object[] {
                        userSmartCredentialGetExCallParms}, this.userSmartCredentialGetExOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialGetExOperationCompleted(object arg) {
            if ((this.userSmartCredentialGetExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialGetExCompleted(this, new userSmartCredentialGetExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialChallengeGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl", DataType="base64Binary")]
        public byte[] userSmartCredentialChallengeGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialChallengeGetCallParms userSmartCredentialChallengeGetCallParms) {
            object[] results = this.Invoke("userSmartCredentialChallengeGet", new object[] {
                        userSmartCredentialChallengeGetCallParms});
            return ((byte[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialChallengeGet(UserSmartCredentialChallengeGetCallParms userSmartCredentialChallengeGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialChallengeGet", new object[] {
                        userSmartCredentialChallengeGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public byte[] EnduserSmartCredentialChallengeGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialChallengeGetAsync(UserSmartCredentialChallengeGetCallParms userSmartCredentialChallengeGetCallParms) {
            this.userSmartCredentialChallengeGetAsync(userSmartCredentialChallengeGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialChallengeGetAsync(UserSmartCredentialChallengeGetCallParms userSmartCredentialChallengeGetCallParms, object userState) {
            if ((this.userSmartCredentialChallengeGetOperationCompleted == null)) {
                this.userSmartCredentialChallengeGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialChallengeGetOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialChallengeGet", new object[] {
                        userSmartCredentialChallengeGetCallParms}, this.userSmartCredentialChallengeGetOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialChallengeGetOperationCompleted(object arg) {
            if ((this.userSmartCredentialChallengeGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialChallengeGetCompleted(this, new userSmartCredentialChallengeGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialChallengeAuthenticateReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl", DataType="base64Binary")]
        public byte[] userSmartCredentialChallengeAuthenticate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialChallengeAuthenticateCallParms userSmartCredentialChallengeAuthenticateCallParms) {
            object[] results = this.Invoke("userSmartCredentialChallengeAuthenticate", new object[] {
                        userSmartCredentialChallengeAuthenticateCallParms});
            return ((byte[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialChallengeAuthenticate(UserSmartCredentialChallengeAuthenticateCallParms userSmartCredentialChallengeAuthenticateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialChallengeAuthenticate", new object[] {
                        userSmartCredentialChallengeAuthenticateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public byte[] EnduserSmartCredentialChallengeAuthenticate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialChallengeAuthenticateAsync(UserSmartCredentialChallengeAuthenticateCallParms userSmartCredentialChallengeAuthenticateCallParms) {
            this.userSmartCredentialChallengeAuthenticateAsync(userSmartCredentialChallengeAuthenticateCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialChallengeAuthenticateAsync(UserSmartCredentialChallengeAuthenticateCallParms userSmartCredentialChallengeAuthenticateCallParms, object userState) {
            if ((this.userSmartCredentialChallengeAuthenticateOperationCompleted == null)) {
                this.userSmartCredentialChallengeAuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialChallengeAuthenticateOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialChallengeAuthenticate", new object[] {
                        userSmartCredentialChallengeAuthenticateCallParms}, this.userSmartCredentialChallengeAuthenticateOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialChallengeAuthenticateOperationCompleted(object arg) {
            if ((this.userSmartCredentialChallengeAuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialChallengeAuthenticateCompleted(this, new userSmartCredentialChallengeAuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialChallengeReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserSmartCredentialChallengeResult userSmartCredentialChallenge([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialChallengeCallParms userSmartCredentialChallengeCallParms) {
            object[] results = this.Invoke("userSmartCredentialChallenge", new object[] {
                        userSmartCredentialChallengeCallParms});
            return ((UserSmartCredentialChallengeResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialChallenge(UserSmartCredentialChallengeCallParms userSmartCredentialChallengeCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialChallenge", new object[] {
                        userSmartCredentialChallengeCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserSmartCredentialChallengeResult EnduserSmartCredentialChallenge(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserSmartCredentialChallengeResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialChallengeAsync(UserSmartCredentialChallengeCallParms userSmartCredentialChallengeCallParms) {
            this.userSmartCredentialChallengeAsync(userSmartCredentialChallengeCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialChallengeAsync(UserSmartCredentialChallengeCallParms userSmartCredentialChallengeCallParms, object userState) {
            if ((this.userSmartCredentialChallengeOperationCompleted == null)) {
                this.userSmartCredentialChallengeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialChallengeOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialChallenge", new object[] {
                        userSmartCredentialChallengeCallParms}, this.userSmartCredentialChallengeOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialChallengeOperationCompleted(object arg) {
            if ((this.userSmartCredentialChallengeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialChallengeCompleted(this, new userSmartCredentialChallengeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userSmartCredentialValidate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialValidateCallParms userSmartCredentialValidateCallParms) {
            this.Invoke("userSmartCredentialValidate", new object[] {
                        userSmartCredentialValidateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialValidate(UserSmartCredentialValidateCallParms userSmartCredentialValidateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialValidate", new object[] {
                        userSmartCredentialValidateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserSmartCredentialValidate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userSmartCredentialValidateAsync(UserSmartCredentialValidateCallParms userSmartCredentialValidateCallParms) {
            this.userSmartCredentialValidateAsync(userSmartCredentialValidateCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialValidateAsync(UserSmartCredentialValidateCallParms userSmartCredentialValidateCallParms, object userState) {
            if ((this.userSmartCredentialValidateOperationCompleted == null)) {
                this.userSmartCredentialValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialValidateOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialValidate", new object[] {
                        userSmartCredentialValidateCallParms}, this.userSmartCredentialValidateOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialValidateOperationCompleted(object arg) {
            if ((this.userSmartCredentialValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialValidateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userSmartCredentialTransactionValidate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialTransactionValidateCallParms userSmartCredentialTransactionValidateCallParms) {
            this.Invoke("userSmartCredentialTransactionValidate", new object[] {
                        userSmartCredentialTransactionValidateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialTransactionValidate(UserSmartCredentialTransactionValidateCallParms userSmartCredentialTransactionValidateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialTransactionValidate", new object[] {
                        userSmartCredentialTransactionValidateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserSmartCredentialTransactionValidate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userSmartCredentialTransactionValidateAsync(UserSmartCredentialTransactionValidateCallParms userSmartCredentialTransactionValidateCallParms) {
            this.userSmartCredentialTransactionValidateAsync(userSmartCredentialTransactionValidateCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialTransactionValidateAsync(UserSmartCredentialTransactionValidateCallParms userSmartCredentialTransactionValidateCallParms, object userState) {
            if ((this.userSmartCredentialTransactionValidateOperationCompleted == null)) {
                this.userSmartCredentialTransactionValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialTransactionValidateOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialTransactionValidate", new object[] {
                        userSmartCredentialTransactionValidateCallParms}, this.userSmartCredentialTransactionValidateOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialTransactionValidateOperationCompleted(object arg) {
            if ((this.userSmartCredentialTransactionValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialTransactionValidateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialSignStartReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserSmartCredentialSignStartResult userSmartCredentialSignStart([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialSignStartCallParms userSmartCredentialSignStartCallParms) {
            object[] results = this.Invoke("userSmartCredentialSignStart", new object[] {
                        userSmartCredentialSignStartCallParms});
            return ((UserSmartCredentialSignStartResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialSignStart(UserSmartCredentialSignStartCallParms userSmartCredentialSignStartCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialSignStart", new object[] {
                        userSmartCredentialSignStartCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserSmartCredentialSignStartResult EnduserSmartCredentialSignStart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserSmartCredentialSignStartResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialSignStartAsync(UserSmartCredentialSignStartCallParms userSmartCredentialSignStartCallParms) {
            this.userSmartCredentialSignStartAsync(userSmartCredentialSignStartCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialSignStartAsync(UserSmartCredentialSignStartCallParms userSmartCredentialSignStartCallParms, object userState) {
            if ((this.userSmartCredentialSignStartOperationCompleted == null)) {
                this.userSmartCredentialSignStartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialSignStartOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialSignStart", new object[] {
                        userSmartCredentialSignStartCallParms}, this.userSmartCredentialSignStartOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialSignStartOperationCompleted(object arg) {
            if ((this.userSmartCredentialSignStartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialSignStartCompleted(this, new userSmartCredentialSignStartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialSignCompleteReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserSmartCredentialSignCompleteResult userSmartCredentialSignComplete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialSignCompleteCallParms userSmartCredentialSignCompleteCallParms) {
            object[] results = this.Invoke("userSmartCredentialSignComplete", new object[] {
                        userSmartCredentialSignCompleteCallParms});
            return ((UserSmartCredentialSignCompleteResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialSignComplete(UserSmartCredentialSignCompleteCallParms userSmartCredentialSignCompleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialSignComplete", new object[] {
                        userSmartCredentialSignCompleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserSmartCredentialSignCompleteResult EnduserSmartCredentialSignComplete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserSmartCredentialSignCompleteResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialSignCompleteAsync(UserSmartCredentialSignCompleteCallParms userSmartCredentialSignCompleteCallParms) {
            this.userSmartCredentialSignCompleteAsync(userSmartCredentialSignCompleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialSignCompleteAsync(UserSmartCredentialSignCompleteCallParms userSmartCredentialSignCompleteCallParms, object userState) {
            if ((this.userSmartCredentialSignCompleteOperationCompleted == null)) {
                this.userSmartCredentialSignCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialSignCompleteOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialSignComplete", new object[] {
                        userSmartCredentialSignCompleteCallParms}, this.userSmartCredentialSignCompleteOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialSignCompleteOperationCompleted(object arg) {
            if ((this.userSmartCredentialSignCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialSignCompleteCompleted(this, new userSmartCredentialSignCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userSmartCredentialSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialSetCallParms userSmartCredentialSetCallParms) {
            this.Invoke("userSmartCredentialSet", new object[] {
                        userSmartCredentialSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialSet(UserSmartCredentialSetCallParms userSmartCredentialSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialSet", new object[] {
                        userSmartCredentialSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserSmartCredentialSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userSmartCredentialSetAsync(UserSmartCredentialSetCallParms userSmartCredentialSetCallParms) {
            this.userSmartCredentialSetAsync(userSmartCredentialSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialSetAsync(UserSmartCredentialSetCallParms userSmartCredentialSetCallParms, object userState) {
            if ((this.userSmartCredentialSetOperationCompleted == null)) {
                this.userSmartCredentialSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialSetOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialSet", new object[] {
                        userSmartCredentialSetCallParms}, this.userSmartCredentialSetOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialSetOperationCompleted(object arg) {
            if ((this.userSmartCredentialSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userSmartCredentialSetEx([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialSetExCallParms userSmartCredentialSetExCallParms) {
            this.Invoke("userSmartCredentialSetEx", new object[] {
                        userSmartCredentialSetExCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialSetEx(UserSmartCredentialSetExCallParms userSmartCredentialSetExCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialSetEx", new object[] {
                        userSmartCredentialSetExCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserSmartCredentialSetEx(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userSmartCredentialSetExAsync(UserSmartCredentialSetExCallParms userSmartCredentialSetExCallParms) {
            this.userSmartCredentialSetExAsync(userSmartCredentialSetExCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialSetExAsync(UserSmartCredentialSetExCallParms userSmartCredentialSetExCallParms, object userState) {
            if ((this.userSmartCredentialSetExOperationCompleted == null)) {
                this.userSmartCredentialSetExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialSetExOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialSetEx", new object[] {
                        userSmartCredentialSetExCallParms}, this.userSmartCredentialSetExOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialSetExOperationCompleted(object arg) {
            if ((this.userSmartCredentialSetExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialSetExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialUnblockReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserSmartCredentialUnblockResult userSmartCredentialUnblock([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialUnblockCallParms userSmartCredentialUnblockCallParms) {
            object[] results = this.Invoke("userSmartCredentialUnblock", new object[] {
                        userSmartCredentialUnblockCallParms});
            return ((UserSmartCredentialUnblockResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialUnblock(UserSmartCredentialUnblockCallParms userSmartCredentialUnblockCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialUnblock", new object[] {
                        userSmartCredentialUnblockCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserSmartCredentialUnblockResult EnduserSmartCredentialUnblock(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserSmartCredentialUnblockResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialUnblockAsync(UserSmartCredentialUnblockCallParms userSmartCredentialUnblockCallParms) {
            this.userSmartCredentialUnblockAsync(userSmartCredentialUnblockCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialUnblockAsync(UserSmartCredentialUnblockCallParms userSmartCredentialUnblockCallParms, object userState) {
            if ((this.userSmartCredentialUnblockOperationCompleted == null)) {
                this.userSmartCredentialUnblockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialUnblockOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialUnblock", new object[] {
                        userSmartCredentialUnblockCallParms}, this.userSmartCredentialUnblockOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialUnblockOperationCompleted(object arg) {
            if ((this.userSmartCredentialUnblockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialUnblockCompleted(this, new userSmartCredentialUnblockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialDigitalIdCreateRecoverReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserDigitalIdCreateRecoverResult userSmartCredentialDigitalIdCreateRecover([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialDigitalIdCreateRecoverCallParms userSmartCredentialDigitalIdCreateRecoverCallParms) {
            object[] results = this.Invoke("userSmartCredentialDigitalIdCreateRecover", new object[] {
                        userSmartCredentialDigitalIdCreateRecoverCallParms});
            return ((UserDigitalIdCreateRecoverResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialDigitalIdCreateRecover(UserSmartCredentialDigitalIdCreateRecoverCallParms userSmartCredentialDigitalIdCreateRecoverCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialDigitalIdCreateRecover", new object[] {
                        userSmartCredentialDigitalIdCreateRecoverCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserDigitalIdCreateRecoverResult EnduserSmartCredentialDigitalIdCreateRecover(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserDigitalIdCreateRecoverResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialDigitalIdCreateRecoverAsync(UserSmartCredentialDigitalIdCreateRecoverCallParms userSmartCredentialDigitalIdCreateRecoverCallParms) {
            this.userSmartCredentialDigitalIdCreateRecoverAsync(userSmartCredentialDigitalIdCreateRecoverCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialDigitalIdCreateRecoverAsync(UserSmartCredentialDigitalIdCreateRecoverCallParms userSmartCredentialDigitalIdCreateRecoverCallParms, object userState) {
            if ((this.userSmartCredentialDigitalIdCreateRecoverOperationCompleted == null)) {
                this.userSmartCredentialDigitalIdCreateRecoverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialDigitalIdCreateRecoverOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialDigitalIdCreateRecover", new object[] {
                        userSmartCredentialDigitalIdCreateRecoverCallParms}, this.userSmartCredentialDigitalIdCreateRecoverOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialDigitalIdCreateRecoverOperationCompleted(object arg) {
            if ((this.userSmartCredentialDigitalIdCreateRecoverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialDigitalIdCreateRecoverCompleted(this, new userSmartCredentialDigitalIdCreateRecoverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialDigitalIdCreateRecoverExReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserDigitalIdCreateRecoverResult userSmartCredentialDigitalIdCreateRecoverEx([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialDigitalIdCreateRecoverExCallParms userSmartCredentialDigitalIdCreateRecoverExCallParms) {
            object[] results = this.Invoke("userSmartCredentialDigitalIdCreateRecoverEx", new object[] {
                        userSmartCredentialDigitalIdCreateRecoverExCallParms});
            return ((UserDigitalIdCreateRecoverResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialDigitalIdCreateRecoverEx(UserSmartCredentialDigitalIdCreateRecoverExCallParms userSmartCredentialDigitalIdCreateRecoverExCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialDigitalIdCreateRecoverEx", new object[] {
                        userSmartCredentialDigitalIdCreateRecoverExCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserDigitalIdCreateRecoverResult EnduserSmartCredentialDigitalIdCreateRecoverEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserDigitalIdCreateRecoverResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialDigitalIdCreateRecoverExAsync(UserSmartCredentialDigitalIdCreateRecoverExCallParms userSmartCredentialDigitalIdCreateRecoverExCallParms) {
            this.userSmartCredentialDigitalIdCreateRecoverExAsync(userSmartCredentialDigitalIdCreateRecoverExCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialDigitalIdCreateRecoverExAsync(UserSmartCredentialDigitalIdCreateRecoverExCallParms userSmartCredentialDigitalIdCreateRecoverExCallParms, object userState) {
            if ((this.userSmartCredentialDigitalIdCreateRecoverExOperationCompleted == null)) {
                this.userSmartCredentialDigitalIdCreateRecoverExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialDigitalIdCreateRecoverExOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialDigitalIdCreateRecoverEx", new object[] {
                        userSmartCredentialDigitalIdCreateRecoverExCallParms}, this.userSmartCredentialDigitalIdCreateRecoverExOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialDigitalIdCreateRecoverExOperationCompleted(object arg) {
            if ((this.userSmartCredentialDigitalIdCreateRecoverExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialDigitalIdCreateRecoverExCompleted(this, new userSmartCredentialDigitalIdCreateRecoverExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialTokenCreateReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserTokenInfo userSmartCredentialTokenCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialTokenCreateCallParms userSmartCredentialTokenCreateCallParms) {
            object[] results = this.Invoke("userSmartCredentialTokenCreate", new object[] {
                        userSmartCredentialTokenCreateCallParms});
            return ((UserTokenInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialTokenCreate(UserSmartCredentialTokenCreateCallParms userSmartCredentialTokenCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialTokenCreate", new object[] {
                        userSmartCredentialTokenCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserTokenInfo EnduserSmartCredentialTokenCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTokenInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialTokenCreateAsync(UserSmartCredentialTokenCreateCallParms userSmartCredentialTokenCreateCallParms) {
            this.userSmartCredentialTokenCreateAsync(userSmartCredentialTokenCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialTokenCreateAsync(UserSmartCredentialTokenCreateCallParms userSmartCredentialTokenCreateCallParms, object userState) {
            if ((this.userSmartCredentialTokenCreateOperationCompleted == null)) {
                this.userSmartCredentialTokenCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialTokenCreateOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialTokenCreate", new object[] {
                        userSmartCredentialTokenCreateCallParms}, this.userSmartCredentialTokenCreateOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialTokenCreateOperationCompleted(object arg) {
            if ((this.userSmartCredentialTokenCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialTokenCreateCompleted(this, new userSmartCredentialTokenCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialPACSGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserSmartCredentialPACSGetResult userSmartCredentialPACSGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialPACSGetCallParms userSmartCredentialPACSGetCallParms) {
            object[] results = this.Invoke("userSmartCredentialPACSGet", new object[] {
                        userSmartCredentialPACSGetCallParms});
            return ((UserSmartCredentialPACSGetResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialPACSGet(UserSmartCredentialPACSGetCallParms userSmartCredentialPACSGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialPACSGet", new object[] {
                        userSmartCredentialPACSGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserSmartCredentialPACSGetResult EnduserSmartCredentialPACSGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserSmartCredentialPACSGetResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialPACSGetAsync(UserSmartCredentialPACSGetCallParms userSmartCredentialPACSGetCallParms) {
            this.userSmartCredentialPACSGetAsync(userSmartCredentialPACSGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialPACSGetAsync(UserSmartCredentialPACSGetCallParms userSmartCredentialPACSGetCallParms, object userState) {
            if ((this.userSmartCredentialPACSGetOperationCompleted == null)) {
                this.userSmartCredentialPACSGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialPACSGetOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialPACSGet", new object[] {
                        userSmartCredentialPACSGetCallParms}, this.userSmartCredentialPACSGetOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialPACSGetOperationCompleted(object arg) {
            if ((this.userSmartCredentialPACSGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialPACSGetCompleted(this, new userSmartCredentialPACSGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userSmartCredentialPACSRegister([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialPACSRegisterCallParms userSmartCredentialPACSRegisterCallParms) {
            this.Invoke("userSmartCredentialPACSRegister", new object[] {
                        userSmartCredentialPACSRegisterCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialPACSRegister(UserSmartCredentialPACSRegisterCallParms userSmartCredentialPACSRegisterCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialPACSRegister", new object[] {
                        userSmartCredentialPACSRegisterCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserSmartCredentialPACSRegister(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userSmartCredentialPACSRegisterAsync(UserSmartCredentialPACSRegisterCallParms userSmartCredentialPACSRegisterCallParms) {
            this.userSmartCredentialPACSRegisterAsync(userSmartCredentialPACSRegisterCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialPACSRegisterAsync(UserSmartCredentialPACSRegisterCallParms userSmartCredentialPACSRegisterCallParms, object userState) {
            if ((this.userSmartCredentialPACSRegisterOperationCompleted == null)) {
                this.userSmartCredentialPACSRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialPACSRegisterOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialPACSRegister", new object[] {
                        userSmartCredentialPACSRegisterCallParms}, this.userSmartCredentialPACSRegisterOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialPACSRegisterOperationCompleted(object arg) {
            if ((this.userSmartCredentialPACSRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialPACSRegisterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userSmartCredentialPACSSuspend([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialPACSSuspendCallParms userSmartCredentialPACSSuspendCallParms) {
            this.Invoke("userSmartCredentialPACSSuspend", new object[] {
                        userSmartCredentialPACSSuspendCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialPACSSuspend(UserSmartCredentialPACSSuspendCallParms userSmartCredentialPACSSuspendCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialPACSSuspend", new object[] {
                        userSmartCredentialPACSSuspendCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserSmartCredentialPACSSuspend(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userSmartCredentialPACSSuspendAsync(UserSmartCredentialPACSSuspendCallParms userSmartCredentialPACSSuspendCallParms) {
            this.userSmartCredentialPACSSuspendAsync(userSmartCredentialPACSSuspendCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialPACSSuspendAsync(UserSmartCredentialPACSSuspendCallParms userSmartCredentialPACSSuspendCallParms, object userState) {
            if ((this.userSmartCredentialPACSSuspendOperationCompleted == null)) {
                this.userSmartCredentialPACSSuspendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialPACSSuspendOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialPACSSuspend", new object[] {
                        userSmartCredentialPACSSuspendCallParms}, this.userSmartCredentialPACSSuspendOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialPACSSuspendOperationCompleted(object arg) {
            if ((this.userSmartCredentialPACSSuspendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialPACSSuspendCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userSmartCredentialUnassign([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialUnassignCallParms userSmartCredentialUnassignCallParms) {
            this.Invoke("userSmartCredentialUnassign", new object[] {
                        userSmartCredentialUnassignCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialUnassign(UserSmartCredentialUnassignCallParms userSmartCredentialUnassignCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialUnassign", new object[] {
                        userSmartCredentialUnassignCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserSmartCredentialUnassign(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userSmartCredentialUnassignAsync(UserSmartCredentialUnassignCallParms userSmartCredentialUnassignCallParms) {
            this.userSmartCredentialUnassignAsync(userSmartCredentialUnassignCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialUnassignAsync(UserSmartCredentialUnassignCallParms userSmartCredentialUnassignCallParms, object userState) {
            if ((this.userSmartCredentialUnassignOperationCompleted == null)) {
                this.userSmartCredentialUnassignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialUnassignOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialUnassign", new object[] {
                        userSmartCredentialUnassignCallParms}, this.userSmartCredentialUnassignOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialUnassignOperationCompleted(object arg) {
            if ((this.userSmartCredentialUnassignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialUnassignCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialCancelReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userSmartCredentialCancel([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialCancelCallParms userSmartCredentialCancelCallParms) {
            object[] results = this.Invoke("userSmartCredentialCancel", new object[] {
                        userSmartCredentialCancelCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialCancel(UserSmartCredentialCancelCallParms userSmartCredentialCancelCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialCancel", new object[] {
                        userSmartCredentialCancelCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserSmartCredentialCancel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialCancelAsync(UserSmartCredentialCancelCallParms userSmartCredentialCancelCallParms) {
            this.userSmartCredentialCancelAsync(userSmartCredentialCancelCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialCancelAsync(UserSmartCredentialCancelCallParms userSmartCredentialCancelCallParms, object userState) {
            if ((this.userSmartCredentialCancelOperationCompleted == null)) {
                this.userSmartCredentialCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialCancelOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialCancel", new object[] {
                        userSmartCredentialCancelCallParms}, this.userSmartCredentialCancelOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialCancelOperationCompleted(object arg) {
            if ((this.userSmartCredentialCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialCancelCompleted(this, new userSmartCredentialCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialHoldReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userSmartCredentialHold([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialHoldCallParms userSmartCredentialHoldCallParms) {
            object[] results = this.Invoke("userSmartCredentialHold", new object[] {
                        userSmartCredentialHoldCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialHold(UserSmartCredentialHoldCallParms userSmartCredentialHoldCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialHold", new object[] {
                        userSmartCredentialHoldCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserSmartCredentialHold(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialHoldAsync(UserSmartCredentialHoldCallParms userSmartCredentialHoldCallParms) {
            this.userSmartCredentialHoldAsync(userSmartCredentialHoldCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialHoldAsync(UserSmartCredentialHoldCallParms userSmartCredentialHoldCallParms, object userState) {
            if ((this.userSmartCredentialHoldOperationCompleted == null)) {
                this.userSmartCredentialHoldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialHoldOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialHold", new object[] {
                        userSmartCredentialHoldCallParms}, this.userSmartCredentialHoldOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialHoldOperationCompleted(object arg) {
            if ((this.userSmartCredentialHoldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialHoldCompleted(this, new userSmartCredentialHoldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialUnholdReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userSmartCredentialUnhold([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialUnholdCallParms userSmartCredentialUnholdCallParms) {
            object[] results = this.Invoke("userSmartCredentialUnhold", new object[] {
                        userSmartCredentialUnholdCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialUnhold(UserSmartCredentialUnholdCallParms userSmartCredentialUnholdCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialUnhold", new object[] {
                        userSmartCredentialUnholdCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserSmartCredentialUnhold(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialUnholdAsync(UserSmartCredentialUnholdCallParms userSmartCredentialUnholdCallParms) {
            this.userSmartCredentialUnholdAsync(userSmartCredentialUnholdCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialUnholdAsync(UserSmartCredentialUnholdCallParms userSmartCredentialUnholdCallParms, object userState) {
            if ((this.userSmartCredentialUnholdOperationCompleted == null)) {
                this.userSmartCredentialUnholdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialUnholdOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialUnhold", new object[] {
                        userSmartCredentialUnholdCallParms}, this.userSmartCredentialUnholdOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialUnholdOperationCompleted(object arg) {
            if ((this.userSmartCredentialUnholdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialUnholdCompleted(this, new userSmartCredentialUnholdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userSmartCredentialIssue([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialIssueCallParms userSmartCredentialIssueCallParms) {
            this.Invoke("userSmartCredentialIssue", new object[] {
                        userSmartCredentialIssueCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialIssue(UserSmartCredentialIssueCallParms userSmartCredentialIssueCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialIssue", new object[] {
                        userSmartCredentialIssueCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserSmartCredentialIssue(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userSmartCredentialIssueAsync(UserSmartCredentialIssueCallParms userSmartCredentialIssueCallParms) {
            this.userSmartCredentialIssueAsync(userSmartCredentialIssueCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialIssueAsync(UserSmartCredentialIssueCallParms userSmartCredentialIssueCallParms, object userState) {
            if ((this.userSmartCredentialIssueOperationCompleted == null)) {
                this.userSmartCredentialIssueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialIssueOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialIssue", new object[] {
                        userSmartCredentialIssueCallParms}, this.userSmartCredentialIssueOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialIssueOperationCompleted(object arg) {
            if ((this.userSmartCredentialIssueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialIssueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userSmartCredentialDeliver([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialDeliverCallParms userSmartCredentialDeliverCallParms) {
            this.Invoke("userSmartCredentialDeliver", new object[] {
                        userSmartCredentialDeliverCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialDeliver(UserSmartCredentialDeliverCallParms userSmartCredentialDeliverCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialDeliver", new object[] {
                        userSmartCredentialDeliverCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserSmartCredentialDeliver(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userSmartCredentialDeliverAsync(UserSmartCredentialDeliverCallParms userSmartCredentialDeliverCallParms) {
            this.userSmartCredentialDeliverAsync(userSmartCredentialDeliverCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialDeliverAsync(UserSmartCredentialDeliverCallParms userSmartCredentialDeliverCallParms, object userState) {
            if ((this.userSmartCredentialDeliverOperationCompleted == null)) {
                this.userSmartCredentialDeliverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialDeliverOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialDeliver", new object[] {
                        userSmartCredentialDeliverCallParms}, this.userSmartCredentialDeliverOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialDeliverOperationCompleted(object arg) {
            if ((this.userSmartCredentialDeliverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialDeliverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userSmartCredentialListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserSmartCredentialListResult userSmartCredentialList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserSmartCredentialListCallParms userSmartCredentialListCallParms) {
            object[] results = this.Invoke("userSmartCredentialList", new object[] {
                        userSmartCredentialListCallParms});
            return ((UserSmartCredentialListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserSmartCredentialList(UserSmartCredentialListCallParms userSmartCredentialListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userSmartCredentialList", new object[] {
                        userSmartCredentialListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserSmartCredentialListResult EnduserSmartCredentialList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserSmartCredentialListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userSmartCredentialListAsync(UserSmartCredentialListCallParms userSmartCredentialListCallParms) {
            this.userSmartCredentialListAsync(userSmartCredentialListCallParms, null);
        }
        
    ///  <remarks/>
        public void userSmartCredentialListAsync(UserSmartCredentialListCallParms userSmartCredentialListCallParms, object userState) {
            if ((this.userSmartCredentialListOperationCompleted == null)) {
                this.userSmartCredentialListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserSmartCredentialListOperationCompleted);
            }
            this.InvokeAsync("userSmartCredentialList", new object[] {
                        userSmartCredentialListCallParms}, this.userSmartCredentialListOperationCompleted, userState);
        }
        
        private void OnuserSmartCredentialListOperationCompleted(object arg) {
            if ((this.userSmartCredentialListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userSmartCredentialListCompleted(this, new userSmartCredentialListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userDigitalIdCreateRecoverPolicyGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserDigitalIdCreateRecoverPolicyGetResult userDigitalIdCreateRecoverPolicyGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserDigitalIdCreateRecoverPolicyGetCallParms userDigitalIdCreateRecoverPolicyGetCallParms) {
            object[] results = this.Invoke("userDigitalIdCreateRecoverPolicyGet", new object[] {
                        userDigitalIdCreateRecoverPolicyGetCallParms});
            return ((UserDigitalIdCreateRecoverPolicyGetResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserDigitalIdCreateRecoverPolicyGet(UserDigitalIdCreateRecoverPolicyGetCallParms userDigitalIdCreateRecoverPolicyGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userDigitalIdCreateRecoverPolicyGet", new object[] {
                        userDigitalIdCreateRecoverPolicyGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserDigitalIdCreateRecoverPolicyGetResult EnduserDigitalIdCreateRecoverPolicyGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserDigitalIdCreateRecoverPolicyGetResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userDigitalIdCreateRecoverPolicyGetAsync(UserDigitalIdCreateRecoverPolicyGetCallParms userDigitalIdCreateRecoverPolicyGetCallParms) {
            this.userDigitalIdCreateRecoverPolicyGetAsync(userDigitalIdCreateRecoverPolicyGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userDigitalIdCreateRecoverPolicyGetAsync(UserDigitalIdCreateRecoverPolicyGetCallParms userDigitalIdCreateRecoverPolicyGetCallParms, object userState) {
            if ((this.userDigitalIdCreateRecoverPolicyGetOperationCompleted == null)) {
                this.userDigitalIdCreateRecoverPolicyGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserDigitalIdCreateRecoverPolicyGetOperationCompleted);
            }
            this.InvokeAsync("userDigitalIdCreateRecoverPolicyGet", new object[] {
                        userDigitalIdCreateRecoverPolicyGetCallParms}, this.userDigitalIdCreateRecoverPolicyGetOperationCompleted, userState);
        }
        
        private void OnuserDigitalIdCreateRecoverPolicyGetOperationCompleted(object arg) {
            if ((this.userDigitalIdCreateRecoverPolicyGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userDigitalIdCreateRecoverPolicyGetCompleted(this, new userDigitalIdCreateRecoverPolicyGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userDigitalIdCreateRecoverReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserDigitalIdCreateRecoverResult userDigitalIdCreateRecover([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserDigitalIdCreateRecoverCallParms userDigitalIdCreateRecoverCallParms) {
            object[] results = this.Invoke("userDigitalIdCreateRecover", new object[] {
                        userDigitalIdCreateRecoverCallParms});
            return ((UserDigitalIdCreateRecoverResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserDigitalIdCreateRecover(UserDigitalIdCreateRecoverCallParms userDigitalIdCreateRecoverCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userDigitalIdCreateRecover", new object[] {
                        userDigitalIdCreateRecoverCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserDigitalIdCreateRecoverResult EnduserDigitalIdCreateRecover(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserDigitalIdCreateRecoverResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userDigitalIdCreateRecoverAsync(UserDigitalIdCreateRecoverCallParms userDigitalIdCreateRecoverCallParms) {
            this.userDigitalIdCreateRecoverAsync(userDigitalIdCreateRecoverCallParms, null);
        }
        
    ///  <remarks/>
        public void userDigitalIdCreateRecoverAsync(UserDigitalIdCreateRecoverCallParms userDigitalIdCreateRecoverCallParms, object userState) {
            if ((this.userDigitalIdCreateRecoverOperationCompleted == null)) {
                this.userDigitalIdCreateRecoverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserDigitalIdCreateRecoverOperationCompleted);
            }
            this.InvokeAsync("userDigitalIdCreateRecover", new object[] {
                        userDigitalIdCreateRecoverCallParms}, this.userDigitalIdCreateRecoverOperationCompleted, userState);
        }
        
        private void OnuserDigitalIdCreateRecoverOperationCompleted(object arg) {
            if ((this.userDigitalIdCreateRecoverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userDigitalIdCreateRecoverCompleted(this, new userDigitalIdCreateRecoverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userDigitalIdDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserDigitalIdDeleteCallParms userDigitalIdDeleteCallParms) {
            this.Invoke("userDigitalIdDelete", new object[] {
                        userDigitalIdDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserDigitalIdDelete(UserDigitalIdDeleteCallParms userDigitalIdDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userDigitalIdDelete", new object[] {
                        userDigitalIdDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserDigitalIdDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userDigitalIdDeleteAsync(UserDigitalIdDeleteCallParms userDigitalIdDeleteCallParms) {
            this.userDigitalIdDeleteAsync(userDigitalIdDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userDigitalIdDeleteAsync(UserDigitalIdDeleteCallParms userDigitalIdDeleteCallParms, object userState) {
            if ((this.userDigitalIdDeleteOperationCompleted == null)) {
                this.userDigitalIdDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserDigitalIdDeleteOperationCompleted);
            }
            this.InvokeAsync("userDigitalIdDelete", new object[] {
                        userDigitalIdDeleteCallParms}, this.userDigitalIdDeleteOperationCompleted, userState);
        }
        
        private void OnuserDigitalIdDeleteOperationCompleted(object arg) {
            if ((this.userDigitalIdDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userDigitalIdDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userDigitalIdSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserDigitalIdSetCallParms userDigitalIdSetCallParms) {
            this.Invoke("userDigitalIdSet", new object[] {
                        userDigitalIdSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserDigitalIdSet(UserDigitalIdSetCallParms userDigitalIdSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userDigitalIdSet", new object[] {
                        userDigitalIdSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserDigitalIdSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userDigitalIdSetAsync(UserDigitalIdSetCallParms userDigitalIdSetCallParms) {
            this.userDigitalIdSetAsync(userDigitalIdSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userDigitalIdSetAsync(UserDigitalIdSetCallParms userDigitalIdSetCallParms, object userState) {
            if ((this.userDigitalIdSetOperationCompleted == null)) {
                this.userDigitalIdSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserDigitalIdSetOperationCompleted);
            }
            this.InvokeAsync("userDigitalIdSet", new object[] {
                        userDigitalIdSetCallParms}, this.userDigitalIdSetOperationCompleted, userState);
        }
        
        private void OnuserDigitalIdSetOperationCompleted(object arg) {
            if ((this.userDigitalIdSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userDigitalIdSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userDigitalIdGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserDigitalIdInfo userDigitalIdGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserDigitalIdGetCallParms userDigitalIdGetCallParms) {
            object[] results = this.Invoke("userDigitalIdGet", new object[] {
                        userDigitalIdGetCallParms});
            return ((UserDigitalIdInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserDigitalIdGet(UserDigitalIdGetCallParms userDigitalIdGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userDigitalIdGet", new object[] {
                        userDigitalIdGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserDigitalIdInfo EnduserDigitalIdGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserDigitalIdInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void userDigitalIdGetAsync(UserDigitalIdGetCallParms userDigitalIdGetCallParms) {
            this.userDigitalIdGetAsync(userDigitalIdGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userDigitalIdGetAsync(UserDigitalIdGetCallParms userDigitalIdGetCallParms, object userState) {
            if ((this.userDigitalIdGetOperationCompleted == null)) {
                this.userDigitalIdGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserDigitalIdGetOperationCompleted);
            }
            this.InvokeAsync("userDigitalIdGet", new object[] {
                        userDigitalIdGetCallParms}, this.userDigitalIdGetOperationCompleted, userState);
        }
        
        private void OnuserDigitalIdGetOperationCompleted(object arg) {
            if ((this.userDigitalIdGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userDigitalIdGetCompleted(this, new userDigitalIdGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userDigitalIdCancelReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userDigitalIdCancel([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserDigitalIdCancelCallParms userDigitalIdCancelCallParms) {
            object[] results = this.Invoke("userDigitalIdCancel", new object[] {
                        userDigitalIdCancelCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserDigitalIdCancel(UserDigitalIdCancelCallParms userDigitalIdCancelCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userDigitalIdCancel", new object[] {
                        userDigitalIdCancelCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserDigitalIdCancel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userDigitalIdCancelAsync(UserDigitalIdCancelCallParms userDigitalIdCancelCallParms) {
            this.userDigitalIdCancelAsync(userDigitalIdCancelCallParms, null);
        }
        
    ///  <remarks/>
        public void userDigitalIdCancelAsync(UserDigitalIdCancelCallParms userDigitalIdCancelCallParms, object userState) {
            if ((this.userDigitalIdCancelOperationCompleted == null)) {
                this.userDigitalIdCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserDigitalIdCancelOperationCompleted);
            }
            this.InvokeAsync("userDigitalIdCancel", new object[] {
                        userDigitalIdCancelCallParms}, this.userDigitalIdCancelOperationCompleted, userState);
        }
        
        private void OnuserDigitalIdCancelOperationCompleted(object arg) {
            if ((this.userDigitalIdCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userDigitalIdCancelCompleted(this, new userDigitalIdCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userDigitalIdHoldReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userDigitalIdHold([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserDigitalIdHoldCallParms userDigitalIdHoldCallParms) {
            object[] results = this.Invoke("userDigitalIdHold", new object[] {
                        userDigitalIdHoldCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserDigitalIdHold(UserDigitalIdHoldCallParms userDigitalIdHoldCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userDigitalIdHold", new object[] {
                        userDigitalIdHoldCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserDigitalIdHold(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userDigitalIdHoldAsync(UserDigitalIdHoldCallParms userDigitalIdHoldCallParms) {
            this.userDigitalIdHoldAsync(userDigitalIdHoldCallParms, null);
        }
        
    ///  <remarks/>
        public void userDigitalIdHoldAsync(UserDigitalIdHoldCallParms userDigitalIdHoldCallParms, object userState) {
            if ((this.userDigitalIdHoldOperationCompleted == null)) {
                this.userDigitalIdHoldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserDigitalIdHoldOperationCompleted);
            }
            this.InvokeAsync("userDigitalIdHold", new object[] {
                        userDigitalIdHoldCallParms}, this.userDigitalIdHoldOperationCompleted, userState);
        }
        
        private void OnuserDigitalIdHoldOperationCompleted(object arg) {
            if ((this.userDigitalIdHoldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userDigitalIdHoldCompleted(this, new userDigitalIdHoldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userDigitalIdUnholdReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userDigitalIdUnhold([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserDigitalIdUnholdCallParms userDigitalIdUnholdCallParms) {
            object[] results = this.Invoke("userDigitalIdUnhold", new object[] {
                        userDigitalIdUnholdCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserDigitalIdUnhold(UserDigitalIdUnholdCallParms userDigitalIdUnholdCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userDigitalIdUnhold", new object[] {
                        userDigitalIdUnholdCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserDigitalIdUnhold(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userDigitalIdUnholdAsync(UserDigitalIdUnholdCallParms userDigitalIdUnholdCallParms) {
            this.userDigitalIdUnholdAsync(userDigitalIdUnholdCallParms, null);
        }
        
    ///  <remarks/>
        public void userDigitalIdUnholdAsync(UserDigitalIdUnholdCallParms userDigitalIdUnholdCallParms, object userState) {
            if ((this.userDigitalIdUnholdOperationCompleted == null)) {
                this.userDigitalIdUnholdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserDigitalIdUnholdOperationCompleted);
            }
            this.InvokeAsync("userDigitalIdUnhold", new object[] {
                        userDigitalIdUnholdCallParms}, this.userDigitalIdUnholdOperationCompleted, userState);
        }
        
        private void OnuserDigitalIdUnholdOperationCompleted(object arg) {
            if ((this.userDigitalIdUnholdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userDigitalIdUnholdCompleted(this, new userDigitalIdUnholdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userDigitalIdListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserDigitalIdListResult userDigitalIdList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserDigitalIdListCallParms userDigitalIdListCallParms) {
            object[] results = this.Invoke("userDigitalIdList", new object[] {
                        userDigitalIdListCallParms});
            return ((UserDigitalIdListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserDigitalIdList(UserDigitalIdListCallParms userDigitalIdListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userDigitalIdList", new object[] {
                        userDigitalIdListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserDigitalIdListResult EnduserDigitalIdList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserDigitalIdListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userDigitalIdListAsync(UserDigitalIdListCallParms userDigitalIdListCallParms) {
            this.userDigitalIdListAsync(userDigitalIdListCallParms, null);
        }
        
    ///  <remarks/>
        public void userDigitalIdListAsync(UserDigitalIdListCallParms userDigitalIdListCallParms, object userState) {
            if ((this.userDigitalIdListOperationCompleted == null)) {
                this.userDigitalIdListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserDigitalIdListOperationCompleted);
            }
            this.InvokeAsync("userDigitalIdList", new object[] {
                        userDigitalIdListCallParms}, this.userDigitalIdListOperationCompleted, userState);
        }
        
        private void OnuserDigitalIdListOperationCompleted(object arg) {
            if ((this.userDigitalIdListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userDigitalIdListCompleted(this, new userDigitalIdListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userCertificateAssign([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCertificateAssignCallParms userCertificateAssignCallParms) {
            this.Invoke("userCertificateAssign", new object[] {
                        userCertificateAssignCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCertificateAssign(UserCertificateAssignCallParms userCertificateAssignCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCertificateAssign", new object[] {
                        userCertificateAssignCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserCertificateAssign(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userCertificateAssignAsync(UserCertificateAssignCallParms userCertificateAssignCallParms) {
            this.userCertificateAssignAsync(userCertificateAssignCallParms, null);
        }
        
    ///  <remarks/>
        public void userCertificateAssignAsync(UserCertificateAssignCallParms userCertificateAssignCallParms, object userState) {
            if ((this.userCertificateAssignOperationCompleted == null)) {
                this.userCertificateAssignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCertificateAssignOperationCompleted);
            }
            this.InvokeAsync("userCertificateAssign", new object[] {
                        userCertificateAssignCallParms}, this.userCertificateAssignOperationCompleted, userState);
        }
        
        private void OnuserCertificateAssignOperationCompleted(object arg) {
            if ((this.userCertificateAssignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCertificateAssignCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userCertificateAssignVerifyReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserCertificateAssignVerifyResult userCertificateAssignVerify([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCertificateAssignVerifyCallParms userCertificateAssignVerifyCallParms) {
            object[] results = this.Invoke("userCertificateAssignVerify", new object[] {
                        userCertificateAssignVerifyCallParms});
            return ((UserCertificateAssignVerifyResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCertificateAssignVerify(UserCertificateAssignVerifyCallParms userCertificateAssignVerifyCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCertificateAssignVerify", new object[] {
                        userCertificateAssignVerifyCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserCertificateAssignVerifyResult EnduserCertificateAssignVerify(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserCertificateAssignVerifyResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userCertificateAssignVerifyAsync(UserCertificateAssignVerifyCallParms userCertificateAssignVerifyCallParms) {
            this.userCertificateAssignVerifyAsync(userCertificateAssignVerifyCallParms, null);
        }
        
    ///  <remarks/>
        public void userCertificateAssignVerifyAsync(UserCertificateAssignVerifyCallParms userCertificateAssignVerifyCallParms, object userState) {
            if ((this.userCertificateAssignVerifyOperationCompleted == null)) {
                this.userCertificateAssignVerifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCertificateAssignVerifyOperationCompleted);
            }
            this.InvokeAsync("userCertificateAssignVerify", new object[] {
                        userCertificateAssignVerifyCallParms}, this.userCertificateAssignVerifyOperationCompleted, userState);
        }
        
        private void OnuserCertificateAssignVerifyOperationCompleted(object arg) {
            if ((this.userCertificateAssignVerifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCertificateAssignVerifyCompleted(this, new userCertificateAssignVerifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userCertificateExportReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserCertificateExportResult userCertificateExport([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCertificateExportCallParms userCertificateExportCallParms) {
            object[] results = this.Invoke("userCertificateExport", new object[] {
                        userCertificateExportCallParms});
            return ((UserCertificateExportResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCertificateExport(UserCertificateExportCallParms userCertificateExportCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCertificateExport", new object[] {
                        userCertificateExportCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserCertificateExportResult EnduserCertificateExport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserCertificateExportResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userCertificateExportAsync(UserCertificateExportCallParms userCertificateExportCallParms) {
            this.userCertificateExportAsync(userCertificateExportCallParms, null);
        }
        
    ///  <remarks/>
        public void userCertificateExportAsync(UserCertificateExportCallParms userCertificateExportCallParms, object userState) {
            if ((this.userCertificateExportOperationCompleted == null)) {
                this.userCertificateExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCertificateExportOperationCompleted);
            }
            this.InvokeAsync("userCertificateExport", new object[] {
                        userCertificateExportCallParms}, this.userCertificateExportOperationCompleted, userState);
        }
        
        private void OnuserCertificateExportOperationCompleted(object arg) {
            if ((this.userCertificateExportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCertificateExportCompleted(this, new userCertificateExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userCertificateDeleteReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userCertificateDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCertificateDeleteCallParms userCertificateDeleteCallParms) {
            object[] results = this.Invoke("userCertificateDelete", new object[] {
                        userCertificateDeleteCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCertificateDelete(UserCertificateDeleteCallParms userCertificateDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCertificateDelete", new object[] {
                        userCertificateDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserCertificateDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userCertificateDeleteAsync(UserCertificateDeleteCallParms userCertificateDeleteCallParms) {
            this.userCertificateDeleteAsync(userCertificateDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userCertificateDeleteAsync(UserCertificateDeleteCallParms userCertificateDeleteCallParms, object userState) {
            if ((this.userCertificateDeleteOperationCompleted == null)) {
                this.userCertificateDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCertificateDeleteOperationCompleted);
            }
            this.InvokeAsync("userCertificateDelete", new object[] {
                        userCertificateDeleteCallParms}, this.userCertificateDeleteOperationCompleted, userState);
        }
        
        private void OnuserCertificateDeleteOperationCompleted(object arg) {
            if ((this.userCertificateDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCertificateDeleteCompleted(this, new userCertificateDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("userCertificateGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserCertificateInfo[] userCertificateGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCertificateGetCallParms userCertificateGetCallParms) {
            object[] results = this.Invoke("userCertificateGet", new object[] {
                        userCertificateGetCallParms});
            return ((UserCertificateInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCertificateGet(UserCertificateGetCallParms userCertificateGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCertificateGet", new object[] {
                        userCertificateGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserCertificateInfo[] EnduserCertificateGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserCertificateInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public void userCertificateGetAsync(UserCertificateGetCallParms userCertificateGetCallParms) {
            this.userCertificateGetAsync(userCertificateGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userCertificateGetAsync(UserCertificateGetCallParms userCertificateGetCallParms, object userState) {
            if ((this.userCertificateGetOperationCompleted == null)) {
                this.userCertificateGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCertificateGetOperationCompleted);
            }
            this.InvokeAsync("userCertificateGet", new object[] {
                        userCertificateGetCallParms}, this.userCertificateGetOperationCompleted, userState);
        }
        
        private void OnuserCertificateGetOperationCompleted(object arg) {
            if ((this.userCertificateGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCertificateGetCompleted(this, new userCertificateGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userCertificateSetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userCertificateSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCertificateSetCallParms userCertificateSetCallParms) {
            object[] results = this.Invoke("userCertificateSet", new object[] {
                        userCertificateSetCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCertificateSet(UserCertificateSetCallParms userCertificateSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCertificateSet", new object[] {
                        userCertificateSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserCertificateSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userCertificateSetAsync(UserCertificateSetCallParms userCertificateSetCallParms) {
            this.userCertificateSetAsync(userCertificateSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userCertificateSetAsync(UserCertificateSetCallParms userCertificateSetCallParms, object userState) {
            if ((this.userCertificateSetOperationCompleted == null)) {
                this.userCertificateSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCertificateSetOperationCompleted);
            }
            this.InvokeAsync("userCertificateSet", new object[] {
                        userCertificateSetCallParms}, this.userCertificateSetOperationCompleted, userState);
        }
        
        private void OnuserCertificateSetOperationCompleted(object arg) {
            if ((this.userCertificateSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCertificateSetCompleted(this, new userCertificateSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userCertificateChallengeReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public CertificateChallenge userCertificateChallenge([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCertificateChallengeCallParms userCertificateChallengeCallParms) {
            object[] results = this.Invoke("userCertificateChallenge", new object[] {
                        userCertificateChallengeCallParms});
            return ((CertificateChallenge)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCertificateChallenge(UserCertificateChallengeCallParms userCertificateChallengeCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCertificateChallenge", new object[] {
                        userCertificateChallengeCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public CertificateChallenge EnduserCertificateChallenge(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CertificateChallenge)(results[0]));
        }
        
    ///  <remarks/>
        public void userCertificateChallengeAsync(UserCertificateChallengeCallParms userCertificateChallengeCallParms) {
            this.userCertificateChallengeAsync(userCertificateChallengeCallParms, null);
        }
        
    ///  <remarks/>
        public void userCertificateChallengeAsync(UserCertificateChallengeCallParms userCertificateChallengeCallParms, object userState) {
            if ((this.userCertificateChallengeOperationCompleted == null)) {
                this.userCertificateChallengeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCertificateChallengeOperationCompleted);
            }
            this.InvokeAsync("userCertificateChallenge", new object[] {
                        userCertificateChallengeCallParms}, this.userCertificateChallengeOperationCompleted, userState);
        }
        
        private void OnuserCertificateChallengeOperationCompleted(object arg) {
            if ((this.userCertificateChallengeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCertificateChallengeCompleted(this, new userCertificateChallengeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userCertificateAuthenticate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCertificateAuthenticateCallParms userCertificateAuthenticateCallParms) {
            this.Invoke("userCertificateAuthenticate", new object[] {
                        userCertificateAuthenticateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCertificateAuthenticate(UserCertificateAuthenticateCallParms userCertificateAuthenticateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCertificateAuthenticate", new object[] {
                        userCertificateAuthenticateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserCertificateAuthenticate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userCertificateAuthenticateAsync(UserCertificateAuthenticateCallParms userCertificateAuthenticateCallParms) {
            this.userCertificateAuthenticateAsync(userCertificateAuthenticateCallParms, null);
        }
        
    ///  <remarks/>
        public void userCertificateAuthenticateAsync(UserCertificateAuthenticateCallParms userCertificateAuthenticateCallParms, object userState) {
            if ((this.userCertificateAuthenticateOperationCompleted == null)) {
                this.userCertificateAuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCertificateAuthenticateOperationCompleted);
            }
            this.InvokeAsync("userCertificateAuthenticate", new object[] {
                        userCertificateAuthenticateCallParms}, this.userCertificateAuthenticateOperationCompleted, userState);
        }
        
        private void OnuserCertificateAuthenticateOperationCompleted(object arg) {
            if ((this.userCertificateAuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCertificateAuthenticateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userCertificateListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserCertificateListResult userCertificateList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserCertificateListCallParms userCertificateListCallParms) {
            object[] results = this.Invoke("userCertificateList", new object[] {
                        userCertificateListCallParms});
            return ((UserCertificateListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserCertificateList(UserCertificateListCallParms userCertificateListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userCertificateList", new object[] {
                        userCertificateListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserCertificateListResult EnduserCertificateList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserCertificateListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userCertificateListAsync(UserCertificateListCallParms userCertificateListCallParms) {
            this.userCertificateListAsync(userCertificateListCallParms, null);
        }
        
    ///  <remarks/>
        public void userCertificateListAsync(UserCertificateListCallParms userCertificateListCallParms, object userState) {
            if ((this.userCertificateListOperationCompleted == null)) {
                this.userCertificateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCertificateListOperationCompleted);
            }
            this.InvokeAsync("userCertificateList", new object[] {
                        userCertificateListCallParms}, this.userCertificateListOperationCompleted, userState);
        }
        
        private void OnuserCertificateListOperationCompleted(object arg) {
            if ((this.userCertificateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCertificateListCompleted(this, new userCertificateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("preproducedCardCreateReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public PreproducedCardCreateResult preproducedCardCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PreproducedCardCreateCallParms preproducedCardCreateCallParms) {
            object[] results = this.Invoke("preproducedCardCreate", new object[] {
                        preproducedCardCreateCallParms});
            return ((PreproducedCardCreateResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpreproducedCardCreate(PreproducedCardCreateCallParms preproducedCardCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("preproducedCardCreate", new object[] {
                        preproducedCardCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public PreproducedCardCreateResult EndpreproducedCardCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PreproducedCardCreateResult)(results[0]));
        }
        
    ///  <remarks/>
        public void preproducedCardCreateAsync(PreproducedCardCreateCallParms preproducedCardCreateCallParms) {
            this.preproducedCardCreateAsync(preproducedCardCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void preproducedCardCreateAsync(PreproducedCardCreateCallParms preproducedCardCreateCallParms, object userState) {
            if ((this.preproducedCardCreateOperationCompleted == null)) {
                this.preproducedCardCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpreproducedCardCreateOperationCompleted);
            }
            this.InvokeAsync("preproducedCardCreate", new object[] {
                        preproducedCardCreateCallParms}, this.preproducedCardCreateOperationCompleted, userState);
        }
        
        private void OnpreproducedCardCreateOperationCompleted(object arg) {
            if ((this.preproducedCardCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.preproducedCardCreateCompleted(this, new preproducedCardCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void preproducedCardDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PreproducedCardDeleteCallParms preproducedCardDeleteCallParms) {
            this.Invoke("preproducedCardDelete", new object[] {
                        preproducedCardDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpreproducedCardDelete(PreproducedCardDeleteCallParms preproducedCardDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("preproducedCardDelete", new object[] {
                        preproducedCardDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndpreproducedCardDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void preproducedCardDeleteAsync(PreproducedCardDeleteCallParms preproducedCardDeleteCallParms) {
            this.preproducedCardDeleteAsync(preproducedCardDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void preproducedCardDeleteAsync(PreproducedCardDeleteCallParms preproducedCardDeleteCallParms, object userState) {
            if ((this.preproducedCardDeleteOperationCompleted == null)) {
                this.preproducedCardDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpreproducedCardDeleteOperationCompleted);
            }
            this.InvokeAsync("preproducedCardDelete", new object[] {
                        preproducedCardDeleteCallParms}, this.preproducedCardDeleteOperationCompleted, userState);
        }
        
        private void OnpreproducedCardDeleteOperationCompleted(object arg) {
            if ((this.preproducedCardDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.preproducedCardDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("preproducedCardGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public PreproducedCardInfo preproducedCardGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PreproducedCardGetCallParms preproducedCardGetCallParms) {
            object[] results = this.Invoke("preproducedCardGet", new object[] {
                        preproducedCardGetCallParms});
            return ((PreproducedCardInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpreproducedCardGet(PreproducedCardGetCallParms preproducedCardGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("preproducedCardGet", new object[] {
                        preproducedCardGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public PreproducedCardInfo EndpreproducedCardGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PreproducedCardInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void preproducedCardGetAsync(PreproducedCardGetCallParms preproducedCardGetCallParms) {
            this.preproducedCardGetAsync(preproducedCardGetCallParms, null);
        }
        
    ///  <remarks/>
        public void preproducedCardGetAsync(PreproducedCardGetCallParms preproducedCardGetCallParms, object userState) {
            if ((this.preproducedCardGetOperationCompleted == null)) {
                this.preproducedCardGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpreproducedCardGetOperationCompleted);
            }
            this.InvokeAsync("preproducedCardGet", new object[] {
                        preproducedCardGetCallParms}, this.preproducedCardGetOperationCompleted, userState);
        }
        
        private void OnpreproducedCardGetOperationCompleted(object arg) {
            if ((this.preproducedCardGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.preproducedCardGetCompleted(this, new preproducedCardGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void preproducedCardSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PreproducedCardSetCallParms preproducedCardSetCallParms) {
            this.Invoke("preproducedCardSet", new object[] {
                        preproducedCardSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpreproducedCardSet(PreproducedCardSetCallParms preproducedCardSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("preproducedCardSet", new object[] {
                        preproducedCardSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndpreproducedCardSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void preproducedCardSetAsync(PreproducedCardSetCallParms preproducedCardSetCallParms) {
            this.preproducedCardSetAsync(preproducedCardSetCallParms, null);
        }
        
    ///  <remarks/>
        public void preproducedCardSetAsync(PreproducedCardSetCallParms preproducedCardSetCallParms, object userState) {
            if ((this.preproducedCardSetOperationCompleted == null)) {
                this.preproducedCardSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpreproducedCardSetOperationCompleted);
            }
            this.InvokeAsync("preproducedCardSet", new object[] {
                        preproducedCardSetCallParms}, this.preproducedCardSetOperationCompleted, userState);
        }
        
        private void OnpreproducedCardSetOperationCompleted(object arg) {
            if ((this.preproducedCardSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.preproducedCardSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("preproducedCardListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public PreproducedCardListResult preproducedCardList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PreproducedCardListCallParms preproducedCardListCallParms) {
            object[] results = this.Invoke("preproducedCardList", new object[] {
                        preproducedCardListCallParms});
            return ((PreproducedCardListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpreproducedCardList(PreproducedCardListCallParms preproducedCardListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("preproducedCardList", new object[] {
                        preproducedCardListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public PreproducedCardListResult EndpreproducedCardList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PreproducedCardListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void preproducedCardListAsync(PreproducedCardListCallParms preproducedCardListCallParms) {
            this.preproducedCardListAsync(preproducedCardListCallParms, null);
        }
        
    ///  <remarks/>
        public void preproducedCardListAsync(PreproducedCardListCallParms preproducedCardListCallParms, object userState) {
            if ((this.preproducedCardListOperationCompleted == null)) {
                this.preproducedCardListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpreproducedCardListOperationCompleted);
            }
            this.InvokeAsync("preproducedCardList", new object[] {
                        preproducedCardListCallParms}, this.preproducedCardListOperationCompleted, userState);
        }
        
        private void OnpreproducedCardListOperationCompleted(object arg) {
            if ((this.preproducedCardListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.preproducedCardListCompleted(this, new preproducedCardListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("preproducedCardExportReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public CardExportResult preproducedCardExport([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PreproducedCardExportCallParms preproducedCardExportCallParms) {
            object[] results = this.Invoke("preproducedCardExport", new object[] {
                        preproducedCardExportCallParms});
            return ((CardExportResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginpreproducedCardExport(PreproducedCardExportCallParms preproducedCardExportCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("preproducedCardExport", new object[] {
                        preproducedCardExportCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public CardExportResult EndpreproducedCardExport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CardExportResult)(results[0]));
        }
        
    ///  <remarks/>
        public void preproducedCardExportAsync(PreproducedCardExportCallParms preproducedCardExportCallParms) {
            this.preproducedCardExportAsync(preproducedCardExportCallParms, null);
        }
        
    ///  <remarks/>
        public void preproducedCardExportAsync(PreproducedCardExportCallParms preproducedCardExportCallParms, object userState) {
            if ((this.preproducedCardExportOperationCompleted == null)) {
                this.preproducedCardExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpreproducedCardExportOperationCompleted);
            }
            this.InvokeAsync("preproducedCardExport", new object[] {
                        preproducedCardExportCallParms}, this.preproducedCardExportOperationCompleted, userState);
        }
        
        private void OnpreproducedCardExportOperationCompleted(object arg) {
            if ((this.preproducedCardExportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.preproducedCardExportCompleted(this, new preproducedCardExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("tokenLoadReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public TokenLoadResult tokenLoad([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TokenLoadCallParms tokenLoadCallParms) {
            object[] results = this.Invoke("tokenLoad", new object[] {
                        tokenLoadCallParms});
            return ((TokenLoadResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintokenLoad(TokenLoadCallParms tokenLoadCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("tokenLoad", new object[] {
                        tokenLoadCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public TokenLoadResult EndtokenLoad(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TokenLoadResult)(results[0]));
        }
        
    ///  <remarks/>
        public void tokenLoadAsync(TokenLoadCallParms tokenLoadCallParms) {
            this.tokenLoadAsync(tokenLoadCallParms, null);
        }
        
    ///  <remarks/>
        public void tokenLoadAsync(TokenLoadCallParms tokenLoadCallParms, object userState) {
            if ((this.tokenLoadOperationCompleted == null)) {
                this.tokenLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OntokenLoadOperationCompleted);
            }
            this.InvokeAsync("tokenLoad", new object[] {
                        tokenLoadCallParms}, this.tokenLoadOperationCompleted, userState);
        }
        
        private void OntokenLoadOperationCompleted(object arg) {
            if ((this.tokenLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tokenLoadCompleted(this, new tokenLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void tokenDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TokenDeleteCallParms tokenDeleteCallParms) {
            this.Invoke("tokenDelete", new object[] {
                        tokenDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintokenDelete(TokenDeleteCallParms tokenDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("tokenDelete", new object[] {
                        tokenDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndtokenDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void tokenDeleteAsync(TokenDeleteCallParms tokenDeleteCallParms) {
            this.tokenDeleteAsync(tokenDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void tokenDeleteAsync(TokenDeleteCallParms tokenDeleteCallParms, object userState) {
            if ((this.tokenDeleteOperationCompleted == null)) {
                this.tokenDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OntokenDeleteOperationCompleted);
            }
            this.InvokeAsync("tokenDelete", new object[] {
                        tokenDeleteCallParms}, this.tokenDeleteOperationCompleted, userState);
        }
        
        private void OntokenDeleteOperationCompleted(object arg) {
            if ((this.tokenDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tokenDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("tokenInitializeStartReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public TokenInitializeResult tokenInitializeStart([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TokenInitializeStartCallParms tokenInitializeStartCallParms) {
            object[] results = this.Invoke("tokenInitializeStart", new object[] {
                        tokenInitializeStartCallParms});
            return ((TokenInitializeResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintokenInitializeStart(TokenInitializeStartCallParms tokenInitializeStartCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("tokenInitializeStart", new object[] {
                        tokenInitializeStartCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public TokenInitializeResult EndtokenInitializeStart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TokenInitializeResult)(results[0]));
        }
        
    ///  <remarks/>
        public void tokenInitializeStartAsync(TokenInitializeStartCallParms tokenInitializeStartCallParms) {
            this.tokenInitializeStartAsync(tokenInitializeStartCallParms, null);
        }
        
    ///  <remarks/>
        public void tokenInitializeStartAsync(TokenInitializeStartCallParms tokenInitializeStartCallParms, object userState) {
            if ((this.tokenInitializeStartOperationCompleted == null)) {
                this.tokenInitializeStartOperationCompleted = new System.Threading.SendOrPostCallback(this.OntokenInitializeStartOperationCompleted);
            }
            this.InvokeAsync("tokenInitializeStart", new object[] {
                        tokenInitializeStartCallParms}, this.tokenInitializeStartOperationCompleted, userState);
        }
        
        private void OntokenInitializeStartOperationCompleted(object arg) {
            if ((this.tokenInitializeStartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tokenInitializeStartCompleted(this, new tokenInitializeStartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void tokenInitializeComplete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TokenInitializeCompleteCallParms tokenInitializeCompleteCallParms) {
            this.Invoke("tokenInitializeComplete", new object[] {
                        tokenInitializeCompleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintokenInitializeComplete(TokenInitializeCompleteCallParms tokenInitializeCompleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("tokenInitializeComplete", new object[] {
                        tokenInitializeCompleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndtokenInitializeComplete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void tokenInitializeCompleteAsync(TokenInitializeCompleteCallParms tokenInitializeCompleteCallParms) {
            this.tokenInitializeCompleteAsync(tokenInitializeCompleteCallParms, null);
        }
        
    ///  <remarks/>
        public void tokenInitializeCompleteAsync(TokenInitializeCompleteCallParms tokenInitializeCompleteCallParms, object userState) {
            if ((this.tokenInitializeCompleteOperationCompleted == null)) {
                this.tokenInitializeCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OntokenInitializeCompleteOperationCompleted);
            }
            this.InvokeAsync("tokenInitializeComplete", new object[] {
                        tokenInitializeCompleteCallParms}, this.tokenInitializeCompleteOperationCompleted, userState);
        }
        
        private void OntokenInitializeCompleteOperationCompleted(object arg) {
            if ((this.tokenInitializeCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tokenInitializeCompleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void tokenInitializeCancel([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TokenInitializeCancelCallParms tokenInitializeCancelCallParms) {
            this.Invoke("tokenInitializeCancel", new object[] {
                        tokenInitializeCancelCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintokenInitializeCancel(TokenInitializeCancelCallParms tokenInitializeCancelCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("tokenInitializeCancel", new object[] {
                        tokenInitializeCancelCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndtokenInitializeCancel(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void tokenInitializeCancelAsync(TokenInitializeCancelCallParms tokenInitializeCancelCallParms) {
            this.tokenInitializeCancelAsync(tokenInitializeCancelCallParms, null);
        }
        
    ///  <remarks/>
        public void tokenInitializeCancelAsync(TokenInitializeCancelCallParms tokenInitializeCancelCallParms, object userState) {
            if ((this.tokenInitializeCancelOperationCompleted == null)) {
                this.tokenInitializeCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OntokenInitializeCancelOperationCompleted);
            }
            this.InvokeAsync("tokenInitializeCancel", new object[] {
                        tokenInitializeCancelCallParms}, this.tokenInitializeCancelOperationCompleted, userState);
        }
        
        private void OntokenInitializeCancelOperationCompleted(object arg) {
            if ((this.tokenInitializeCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tokenInitializeCancelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("tokenGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public TokenInfo tokenGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TokenGetCallParms tokenGetCallParms) {
            object[] results = this.Invoke("tokenGet", new object[] {
                        tokenGetCallParms});
            return ((TokenInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintokenGet(TokenGetCallParms tokenGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("tokenGet", new object[] {
                        tokenGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public TokenInfo EndtokenGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TokenInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void tokenGetAsync(TokenGetCallParms tokenGetCallParms) {
            this.tokenGetAsync(tokenGetCallParms, null);
        }
        
    ///  <remarks/>
        public void tokenGetAsync(TokenGetCallParms tokenGetCallParms, object userState) {
            if ((this.tokenGetOperationCompleted == null)) {
                this.tokenGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OntokenGetOperationCompleted);
            }
            this.InvokeAsync("tokenGet", new object[] {
                        tokenGetCallParms}, this.tokenGetOperationCompleted, userState);
        }
        
        private void OntokenGetOperationCompleted(object arg) {
            if ((this.tokenGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tokenGetCompleted(this, new tokenGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void tokenSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TokenSetCallParms tokenSetCallParms) {
            this.Invoke("tokenSet", new object[] {
                        tokenSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintokenSet(TokenSetCallParms tokenSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("tokenSet", new object[] {
                        tokenSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndtokenSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void tokenSetAsync(TokenSetCallParms tokenSetCallParms) {
            this.tokenSetAsync(tokenSetCallParms, null);
        }
        
    ///  <remarks/>
        public void tokenSetAsync(TokenSetCallParms tokenSetCallParms, object userState) {
            if ((this.tokenSetOperationCompleted == null)) {
                this.tokenSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OntokenSetOperationCompleted);
            }
            this.InvokeAsync("tokenSet", new object[] {
                        tokenSetCallParms}, this.tokenSetOperationCompleted, userState);
        }
        
        private void OntokenSetOperationCompleted(object arg) {
            if ((this.tokenSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tokenSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("tokenListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public TokenListResult tokenList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TokenListCallParms tokenListCallParms) {
            object[] results = this.Invoke("tokenList", new object[] {
                        tokenListCallParms});
            return ((TokenListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintokenList(TokenListCallParms tokenListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("tokenList", new object[] {
                        tokenListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public TokenListResult EndtokenList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TokenListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void tokenListAsync(TokenListCallParms tokenListCallParms) {
            this.tokenListAsync(tokenListCallParms, null);
        }
        
    ///  <remarks/>
        public void tokenListAsync(TokenListCallParms tokenListCallParms, object userState) {
            if ((this.tokenListOperationCompleted == null)) {
                this.tokenListOperationCompleted = new System.Threading.SendOrPostCallback(this.OntokenListOperationCompleted);
            }
            this.InvokeAsync("tokenList", new object[] {
                        tokenListCallParms}, this.tokenListOperationCompleted, userState);
        }
        
        private void OntokenListOperationCompleted(object arg) {
            if ((this.tokenListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tokenListCompleted(this, new tokenListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialLoadReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialLoadResult smartCredentialLoad([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialLoadCallParms smartCredentialLoadCallParms) {
            object[] results = this.Invoke("smartCredentialLoad", new object[] {
                        smartCredentialLoadCallParms});
            return ((SmartCredentialLoadResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialLoad(SmartCredentialLoadCallParms smartCredentialLoadCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialLoad", new object[] {
                        smartCredentialLoadCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialLoadResult EndsmartCredentialLoad(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialLoadResult)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialLoadAsync(SmartCredentialLoadCallParms smartCredentialLoadCallParms) {
            this.smartCredentialLoadAsync(smartCredentialLoadCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialLoadAsync(SmartCredentialLoadCallParms smartCredentialLoadCallParms, object userState) {
            if ((this.smartCredentialLoadOperationCompleted == null)) {
                this.smartCredentialLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialLoadOperationCompleted);
            }
            this.InvokeAsync("smartCredentialLoad", new object[] {
                        smartCredentialLoadCallParms}, this.smartCredentialLoadOperationCompleted, userState);
        }
        
        private void OnsmartCredentialLoadOperationCompleted(object arg) {
            if ((this.smartCredentialLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialLoadCompleted(this, new smartCredentialLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialDeleteCallParms smartCredentialDeleteCallParms) {
            this.Invoke("smartCredentialDelete", new object[] {
                        smartCredentialDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialDelete(SmartCredentialDeleteCallParms smartCredentialDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialDelete", new object[] {
                        smartCredentialDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialDeleteAsync(SmartCredentialDeleteCallParms smartCredentialDeleteCallParms) {
            this.smartCredentialDeleteAsync(smartCredentialDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialDeleteAsync(SmartCredentialDeleteCallParms smartCredentialDeleteCallParms, object userState) {
            if ((this.smartCredentialDeleteOperationCompleted == null)) {
                this.smartCredentialDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialDeleteOperationCompleted);
            }
            this.InvokeAsync("smartCredentialDelete", new object[] {
                        smartCredentialDeleteCallParms}, this.smartCredentialDeleteOperationCompleted, userState);
        }
        
        private void OnsmartCredentialDeleteOperationCompleted(object arg) {
            if ((this.smartCredentialDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialInfo smartCredentialGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialGetCallParms smartCredentialGetCallParms) {
            object[] results = this.Invoke("smartCredentialGet", new object[] {
                        smartCredentialGetCallParms});
            return ((SmartCredentialInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialGet(SmartCredentialGetCallParms smartCredentialGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialGet", new object[] {
                        smartCredentialGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialInfo EndsmartCredentialGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialGetAsync(SmartCredentialGetCallParms smartCredentialGetCallParms) {
            this.smartCredentialGetAsync(smartCredentialGetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialGetAsync(SmartCredentialGetCallParms smartCredentialGetCallParms, object userState) {
            if ((this.smartCredentialGetOperationCompleted == null)) {
                this.smartCredentialGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialGetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialGet", new object[] {
                        smartCredentialGetCallParms}, this.smartCredentialGetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialGetOperationCompleted(object arg) {
            if ((this.smartCredentialGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialGetCompleted(this, new smartCredentialGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialChallengeGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl", DataType="base64Binary")]
        public byte[] smartCredentialChallengeGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialChallengeGetCallParms smartCredentialChallengeGetCallParms) {
            object[] results = this.Invoke("smartCredentialChallengeGet", new object[] {
                        smartCredentialChallengeGetCallParms});
            return ((byte[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialChallengeGet(SmartCredentialChallengeGetCallParms smartCredentialChallengeGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialChallengeGet", new object[] {
                        smartCredentialChallengeGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public byte[] EndsmartCredentialChallengeGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialChallengeGetAsync(SmartCredentialChallengeGetCallParms smartCredentialChallengeGetCallParms) {
            this.smartCredentialChallengeGetAsync(smartCredentialChallengeGetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialChallengeGetAsync(SmartCredentialChallengeGetCallParms smartCredentialChallengeGetCallParms, object userState) {
            if ((this.smartCredentialChallengeGetOperationCompleted == null)) {
                this.smartCredentialChallengeGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialChallengeGetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialChallengeGet", new object[] {
                        smartCredentialChallengeGetCallParms}, this.smartCredentialChallengeGetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialChallengeGetOperationCompleted(object arg) {
            if ((this.smartCredentialChallengeGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialChallengeGetCompleted(this, new smartCredentialChallengeGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialChallengeAuthenticateReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl", DataType="base64Binary")]
        public byte[] smartCredentialChallengeAuthenticate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialChallengeAuthenticateCallParms smartCredentialChallengeAuthenticateCallParms) {
            object[] results = this.Invoke("smartCredentialChallengeAuthenticate", new object[] {
                        smartCredentialChallengeAuthenticateCallParms});
            return ((byte[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialChallengeAuthenticate(SmartCredentialChallengeAuthenticateCallParms smartCredentialChallengeAuthenticateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialChallengeAuthenticate", new object[] {
                        smartCredentialChallengeAuthenticateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public byte[] EndsmartCredentialChallengeAuthenticate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialChallengeAuthenticateAsync(SmartCredentialChallengeAuthenticateCallParms smartCredentialChallengeAuthenticateCallParms) {
            this.smartCredentialChallengeAuthenticateAsync(smartCredentialChallengeAuthenticateCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialChallengeAuthenticateAsync(SmartCredentialChallengeAuthenticateCallParms smartCredentialChallengeAuthenticateCallParms, object userState) {
            if ((this.smartCredentialChallengeAuthenticateOperationCompleted == null)) {
                this.smartCredentialChallengeAuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialChallengeAuthenticateOperationCompleted);
            }
            this.InvokeAsync("smartCredentialChallengeAuthenticate", new object[] {
                        smartCredentialChallengeAuthenticateCallParms}, this.smartCredentialChallengeAuthenticateOperationCompleted, userState);
        }
        
        private void OnsmartCredentialChallengeAuthenticateOperationCompleted(object arg) {
            if ((this.smartCredentialChallengeAuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialChallengeAuthenticateCompleted(this, new smartCredentialChallengeAuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void smartCredentialSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialSetCallParms smartCredentialSetCallParms) {
            this.Invoke("smartCredentialSet", new object[] {
                        smartCredentialSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialSet(SmartCredentialSetCallParms smartCredentialSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialSet", new object[] {
                        smartCredentialSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndsmartCredentialSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void smartCredentialSetAsync(SmartCredentialSetCallParms smartCredentialSetCallParms) {
            this.smartCredentialSetAsync(smartCredentialSetCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialSetAsync(SmartCredentialSetCallParms smartCredentialSetCallParms, object userState) {
            if ((this.smartCredentialSetOperationCompleted == null)) {
                this.smartCredentialSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialSetOperationCompleted);
            }
            this.InvokeAsync("smartCredentialSet", new object[] {
                        smartCredentialSetCallParms}, this.smartCredentialSetOperationCompleted, userState);
        }
        
        private void OnsmartCredentialSetOperationCompleted(object arg) {
            if ((this.smartCredentialSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("smartCredentialListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public SmartCredentialListResult smartCredentialList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] SmartCredentialListCallParms smartCredentialListCallParms) {
            object[] results = this.Invoke("smartCredentialList", new object[] {
                        smartCredentialListCallParms});
            return ((SmartCredentialListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginsmartCredentialList(SmartCredentialListCallParms smartCredentialListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("smartCredentialList", new object[] {
                        smartCredentialListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public SmartCredentialListResult EndsmartCredentialList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartCredentialListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void smartCredentialListAsync(SmartCredentialListCallParms smartCredentialListCallParms) {
            this.smartCredentialListAsync(smartCredentialListCallParms, null);
        }
        
    ///  <remarks/>
        public void smartCredentialListAsync(SmartCredentialListCallParms smartCredentialListCallParms, object userState) {
            if ((this.smartCredentialListOperationCompleted == null)) {
                this.smartCredentialListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmartCredentialListOperationCompleted);
            }
            this.InvokeAsync("smartCredentialList", new object[] {
                        smartCredentialListCallParms}, this.smartCredentialListOperationCompleted, userState);
        }
        
        private void OnsmartCredentialListOperationCompleted(object arg) {
            if ((this.smartCredentialListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smartCredentialListCompleted(this, new smartCredentialListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("challengeGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public Challenge[] challengeGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ChallengeGetCallParms challengeGetCallParms) {
            object[] results = this.Invoke("challengeGet", new object[] {
                        challengeGetCallParms});
            return ((Challenge[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginchallengeGet(ChallengeGetCallParms challengeGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("challengeGet", new object[] {
                        challengeGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public Challenge[] EndchallengeGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Challenge[])(results[0]));
        }
        
    ///  <remarks/>
        public void challengeGetAsync(ChallengeGetCallParms challengeGetCallParms) {
            this.challengeGetAsync(challengeGetCallParms, null);
        }
        
    ///  <remarks/>
        public void challengeGetAsync(ChallengeGetCallParms challengeGetCallParms, object userState) {
            if ((this.challengeGetOperationCompleted == null)) {
                this.challengeGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchallengeGetOperationCompleted);
            }
            this.InvokeAsync("challengeGet", new object[] {
                        challengeGetCallParms}, this.challengeGetOperationCompleted, userState);
        }
        
        private void OnchallengeGetOperationCompleted(object arg) {
            if ((this.challengeGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.challengeGetCompleted(this, new challengeGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void challengeAuthenticate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ChallengeAuthenticateCallParms challengeAuthenticateCallParms) {
            this.Invoke("challengeAuthenticate", new object[] {
                        challengeAuthenticateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginchallengeAuthenticate(ChallengeAuthenticateCallParms challengeAuthenticateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("challengeAuthenticate", new object[] {
                        challengeAuthenticateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndchallengeAuthenticate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void challengeAuthenticateAsync(ChallengeAuthenticateCallParms challengeAuthenticateCallParms) {
            this.challengeAuthenticateAsync(challengeAuthenticateCallParms, null);
        }
        
    ///  <remarks/>
        public void challengeAuthenticateAsync(ChallengeAuthenticateCallParms challengeAuthenticateCallParms, object userState) {
            if ((this.challengeAuthenticateOperationCompleted == null)) {
                this.challengeAuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchallengeAuthenticateOperationCompleted);
            }
            this.InvokeAsync("challengeAuthenticate", new object[] {
                        challengeAuthenticateCallParms}, this.challengeAuthenticateOperationCompleted, userState);
        }
        
        private void OnchallengeAuthenticateOperationCompleted(object arg) {
            if ((this.challengeAuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.challengeAuthenticateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void ipListAdd([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] IPListAddCallParms ipListAddCallParms) {
            this.Invoke("ipListAdd", new object[] {
                        ipListAddCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginipListAdd(IPListAddCallParms ipListAddCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ipListAdd", new object[] {
                        ipListAddCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndipListAdd(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void ipListAddAsync(IPListAddCallParms ipListAddCallParms) {
            this.ipListAddAsync(ipListAddCallParms, null);
        }
        
    ///  <remarks/>
        public void ipListAddAsync(IPListAddCallParms ipListAddCallParms, object userState) {
            if ((this.ipListAddOperationCompleted == null)) {
                this.ipListAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnipListAddOperationCompleted);
            }
            this.InvokeAsync("ipListAdd", new object[] {
                        ipListAddCallParms}, this.ipListAddOperationCompleted, userState);
        }
        
        private void OnipListAddOperationCompleted(object arg) {
            if ((this.ipListAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ipListAddCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void ipListDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] IPListDeleteCallParms ipListDeleteCallParms) {
            this.Invoke("ipListDelete", new object[] {
                        ipListDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginipListDelete(IPListDeleteCallParms ipListDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ipListDelete", new object[] {
                        ipListDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndipListDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void ipListDeleteAsync(IPListDeleteCallParms ipListDeleteCallParms) {
            this.ipListDeleteAsync(ipListDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void ipListDeleteAsync(IPListDeleteCallParms ipListDeleteCallParms, object userState) {
            if ((this.ipListDeleteOperationCompleted == null)) {
                this.ipListDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnipListDeleteOperationCompleted);
            }
            this.InvokeAsync("ipListDelete", new object[] {
                        ipListDeleteCallParms}, this.ipListDeleteOperationCompleted, userState);
        }
        
        private void OnipListDeleteOperationCompleted(object arg) {
            if ((this.ipListDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ipListDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("ipListGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public IPListEntry ipListGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] IPListGetCallParms ipListGetCallParms) {
            object[] results = this.Invoke("ipListGet", new object[] {
                        ipListGetCallParms});
            return ((IPListEntry)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginipListGet(IPListGetCallParms ipListGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ipListGet", new object[] {
                        ipListGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public IPListEntry EndipListGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((IPListEntry)(results[0]));
        }
        
    ///  <remarks/>
        public void ipListGetAsync(IPListGetCallParms ipListGetCallParms) {
            this.ipListGetAsync(ipListGetCallParms, null);
        }
        
    ///  <remarks/>
        public void ipListGetAsync(IPListGetCallParms ipListGetCallParms, object userState) {
            if ((this.ipListGetOperationCompleted == null)) {
                this.ipListGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnipListGetOperationCompleted);
            }
            this.InvokeAsync("ipListGet", new object[] {
                        ipListGetCallParms}, this.ipListGetOperationCompleted, userState);
        }
        
        private void OnipListGetOperationCompleted(object arg) {
            if ((this.ipListGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ipListGetCompleted(this, new ipListGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("ipListListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public IPListListResult ipListList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] IPListListCallParms ipListListCallParms) {
            object[] results = this.Invoke("ipListList", new object[] {
                        ipListListCallParms});
            return ((IPListListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginipListList(IPListListCallParms ipListListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ipListList", new object[] {
                        ipListListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public IPListListResult EndipListList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((IPListListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void ipListListAsync(IPListListCallParms ipListListCallParms) {
            this.ipListListAsync(ipListListCallParms, null);
        }
        
    ///  <remarks/>
        public void ipListListAsync(IPListListCallParms ipListListCallParms, object userState) {
            if ((this.ipListListOperationCompleted == null)) {
                this.ipListListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnipListListOperationCompleted);
            }
            this.InvokeAsync("ipListList", new object[] {
                        ipListListCallParms}, this.ipListListOperationCompleted, userState);
        }
        
        private void OnipListListOperationCompleted(object arg) {
            if ((this.ipListListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ipListListCompleted(this, new ipListListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("auditGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public AuditInfo auditGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] AuditGetCallParms auditGetCallParms) {
            object[] results = this.Invoke("auditGet", new object[] {
                        auditGetCallParms});
            return ((AuditInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginauditGet(AuditGetCallParms auditGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("auditGet", new object[] {
                        auditGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public AuditInfo EndauditGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AuditInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void auditGetAsync(AuditGetCallParms auditGetCallParms) {
            this.auditGetAsync(auditGetCallParms, null);
        }
        
    ///  <remarks/>
        public void auditGetAsync(AuditGetCallParms auditGetCallParms, object userState) {
            if ((this.auditGetOperationCompleted == null)) {
                this.auditGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauditGetOperationCompleted);
            }
            this.InvokeAsync("auditGet", new object[] {
                        auditGetCallParms}, this.auditGetOperationCompleted, userState);
        }
        
        private void OnauditGetOperationCompleted(object arg) {
            if ((this.auditGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.auditGetCompleted(this, new auditGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("auditListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public AuditListResult auditList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] AuditListCallParms auditListCallParms) {
            object[] results = this.Invoke("auditList", new object[] {
                        auditListCallParms});
            return ((AuditListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginauditList(AuditListCallParms auditListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("auditList", new object[] {
                        auditListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public AuditListResult EndauditList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AuditListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void auditListAsync(AuditListCallParms auditListCallParms) {
            this.auditListAsync(auditListCallParms, null);
        }
        
    ///  <remarks/>
        public void auditListAsync(AuditListCallParms auditListCallParms, object userState) {
            if ((this.auditListOperationCompleted == null)) {
                this.auditListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauditListOperationCompleted);
            }
            this.InvokeAsync("auditList", new object[] {
                        auditListCallParms}, this.auditListOperationCompleted, userState);
        }
        
        private void OnauditListOperationCompleted(object arg) {
            if ((this.auditListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.auditListCompleted(this, new auditListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void auditCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] AuditCreateCallParms auditCreateCallParms) {
            this.Invoke("auditCreate", new object[] {
                        auditCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginauditCreate(AuditCreateCallParms auditCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("auditCreate", new object[] {
                        auditCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndauditCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void auditCreateAsync(AuditCreateCallParms auditCreateCallParms) {
            this.auditCreateAsync(auditCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void auditCreateAsync(AuditCreateCallParms auditCreateCallParms, object userState) {
            if ((this.auditCreateOperationCompleted == null)) {
                this.auditCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauditCreateOperationCompleted);
            }
            this.InvokeAsync("auditCreate", new object[] {
                        auditCreateCallParms}, this.auditCreateOperationCompleted, userState);
        }
        
        private void OnauditCreateOperationCompleted(object arg) {
            if ((this.auditCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.auditCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("auditDeleteReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public long auditDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] AuditDeleteCallParms auditDeleteCallParms) {
            object[] results = this.Invoke("auditDelete", new object[] {
                        auditDeleteCallParms});
            return ((long)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginauditDelete(AuditDeleteCallParms auditDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("auditDelete", new object[] {
                        auditDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public long EndauditDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }
        
    ///  <remarks/>
        public void auditDeleteAsync(AuditDeleteCallParms auditDeleteCallParms) {
            this.auditDeleteAsync(auditDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void auditDeleteAsync(AuditDeleteCallParms auditDeleteCallParms, object userState) {
            if ((this.auditDeleteOperationCompleted == null)) {
                this.auditDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauditDeleteOperationCompleted);
            }
            this.InvokeAsync("auditDelete", new object[] {
                        auditDeleteCallParms}, this.auditDeleteOperationCompleted, userState);
        }
        
        private void OnauditDeleteOperationCompleted(object arg) {
            if ((this.auditDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.auditDeleteCompleted(this, new auditDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("transactionCertificateGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public TransactionCertificateInfo transactionCertificateGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TransactionCertificateGetCallParms transactionCertificateGetCallParms) {
            object[] results = this.Invoke("transactionCertificateGet", new object[] {
                        transactionCertificateGetCallParms});
            return ((TransactionCertificateInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintransactionCertificateGet(TransactionCertificateGetCallParms transactionCertificateGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("transactionCertificateGet", new object[] {
                        transactionCertificateGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public TransactionCertificateInfo EndtransactionCertificateGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TransactionCertificateInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void transactionCertificateGetAsync(TransactionCertificateGetCallParms transactionCertificateGetCallParms) {
            this.transactionCertificateGetAsync(transactionCertificateGetCallParms, null);
        }
        
    ///  <remarks/>
        public void transactionCertificateGetAsync(TransactionCertificateGetCallParms transactionCertificateGetCallParms, object userState) {
            if ((this.transactionCertificateGetOperationCompleted == null)) {
                this.transactionCertificateGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransactionCertificateGetOperationCompleted);
            }
            this.InvokeAsync("transactionCertificateGet", new object[] {
                        transactionCertificateGetCallParms}, this.transactionCertificateGetOperationCompleted, userState);
        }
        
        private void OntransactionCertificateGetOperationCompleted(object arg) {
            if ((this.transactionCertificateGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transactionCertificateGetCompleted(this, new transactionCertificateGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("transactionCertificateListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public TransactionCertificateListResult transactionCertificateList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] transactionCertificateListCallParms) {
            object[] results = this.Invoke("transactionCertificateList", new object[] {
                        transactionCertificateListCallParms});
            return ((TransactionCertificateListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintransactionCertificateList(NameValue[] transactionCertificateListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("transactionCertificateList", new object[] {
                        transactionCertificateListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public TransactionCertificateListResult EndtransactionCertificateList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TransactionCertificateListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void transactionCertificateListAsync(NameValue[] transactionCertificateListCallParms) {
            this.transactionCertificateListAsync(transactionCertificateListCallParms, null);
        }
        
    ///  <remarks/>
        public void transactionCertificateListAsync(NameValue[] transactionCertificateListCallParms, object userState) {
            if ((this.transactionCertificateListOperationCompleted == null)) {
                this.transactionCertificateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransactionCertificateListOperationCompleted);
            }
            this.InvokeAsync("transactionCertificateList", new object[] {
                        transactionCertificateListCallParms}, this.transactionCertificateListOperationCompleted, userState);
        }
        
        private void OntransactionCertificateListOperationCompleted(object arg) {
            if ((this.transactionCertificateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transactionCertificateListCompleted(this, new transactionCertificateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void transactionCertificateCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TransactionCertificateCreateCallParms transactionCertificateCreateCallParms) {
            this.Invoke("transactionCertificateCreate", new object[] {
                        transactionCertificateCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintransactionCertificateCreate(TransactionCertificateCreateCallParms transactionCertificateCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("transactionCertificateCreate", new object[] {
                        transactionCertificateCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndtransactionCertificateCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void transactionCertificateCreateAsync(TransactionCertificateCreateCallParms transactionCertificateCreateCallParms) {
            this.transactionCertificateCreateAsync(transactionCertificateCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void transactionCertificateCreateAsync(TransactionCertificateCreateCallParms transactionCertificateCreateCallParms, object userState) {
            if ((this.transactionCertificateCreateOperationCompleted == null)) {
                this.transactionCertificateCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransactionCertificateCreateOperationCompleted);
            }
            this.InvokeAsync("transactionCertificateCreate", new object[] {
                        transactionCertificateCreateCallParms}, this.transactionCertificateCreateOperationCompleted, userState);
        }
        
        private void OntransactionCertificateCreateOperationCompleted(object arg) {
            if ((this.transactionCertificateCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transactionCertificateCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void transactionCertificateDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TransactionCertificateDeleteCallParms transactionCertificateDeleteCallParms) {
            this.Invoke("transactionCertificateDelete", new object[] {
                        transactionCertificateDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintransactionCertificateDelete(TransactionCertificateDeleteCallParms transactionCertificateDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("transactionCertificateDelete", new object[] {
                        transactionCertificateDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndtransactionCertificateDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void transactionCertificateDeleteAsync(TransactionCertificateDeleteCallParms transactionCertificateDeleteCallParms) {
            this.transactionCertificateDeleteAsync(transactionCertificateDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void transactionCertificateDeleteAsync(TransactionCertificateDeleteCallParms transactionCertificateDeleteCallParms, object userState) {
            if ((this.transactionCertificateDeleteOperationCompleted == null)) {
                this.transactionCertificateDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransactionCertificateDeleteOperationCompleted);
            }
            this.InvokeAsync("transactionCertificateDelete", new object[] {
                        transactionCertificateDeleteCallParms}, this.transactionCertificateDeleteOperationCompleted, userState);
        }
        
        private void OntransactionCertificateDeleteOperationCompleted(object arg) {
            if ((this.transactionCertificateDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transactionCertificateDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void transactionCertificateSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TransactionCertificateSetCallParms transactionCertificateSetCallParms) {
            this.Invoke("transactionCertificateSet", new object[] {
                        transactionCertificateSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintransactionCertificateSet(TransactionCertificateSetCallParms transactionCertificateSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("transactionCertificateSet", new object[] {
                        transactionCertificateSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndtransactionCertificateSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void transactionCertificateSetAsync(TransactionCertificateSetCallParms transactionCertificateSetCallParms) {
            this.transactionCertificateSetAsync(transactionCertificateSetCallParms, null);
        }
        
    ///  <remarks/>
        public void transactionCertificateSetAsync(TransactionCertificateSetCallParms transactionCertificateSetCallParms, object userState) {
            if ((this.transactionCertificateSetOperationCompleted == null)) {
                this.transactionCertificateSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransactionCertificateSetOperationCompleted);
            }
            this.InvokeAsync("transactionCertificateSet", new object[] {
                        transactionCertificateSetCallParms}, this.transactionCertificateSetOperationCompleted, userState);
        }
        
        private void OntransactionCertificateSetOperationCompleted(object arg) {
            if ((this.transactionCertificateSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transactionCertificateSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("transactionCertificateExportReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public TransactionCertificateExportResult transactionCertificateExport([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TransactionCertificateExportCallParms transactionCertificateExportCallParms) {
            object[] results = this.Invoke("transactionCertificateExport", new object[] {
                        transactionCertificateExportCallParms});
            return ((TransactionCertificateExportResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintransactionCertificateExport(TransactionCertificateExportCallParms transactionCertificateExportCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("transactionCertificateExport", new object[] {
                        transactionCertificateExportCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public TransactionCertificateExportResult EndtransactionCertificateExport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TransactionCertificateExportResult)(results[0]));
        }
        
    ///  <remarks/>
        public void transactionCertificateExportAsync(TransactionCertificateExportCallParms transactionCertificateExportCallParms) {
            this.transactionCertificateExportAsync(transactionCertificateExportCallParms, null);
        }
        
    ///  <remarks/>
        public void transactionCertificateExportAsync(TransactionCertificateExportCallParms transactionCertificateExportCallParms, object userState) {
            if ((this.transactionCertificateExportOperationCompleted == null)) {
                this.transactionCertificateExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransactionCertificateExportOperationCompleted);
            }
            this.InvokeAsync("transactionCertificateExport", new object[] {
                        transactionCertificateExportCallParms}, this.transactionCertificateExportOperationCompleted, userState);
        }
        
        private void OntransactionCertificateExportOperationCompleted(object arg) {
            if ((this.transactionCertificateExportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transactionCertificateExportCompleted(this, new transactionCertificateExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("transactionCertificateImportVerifyReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public TransactionCertificateImportVerifyResult transactionCertificateImportVerify([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TransactionCertificateImportVerifyCallParms transactionCertificateImportVerifyCallParms) {
            object[] results = this.Invoke("transactionCertificateImportVerify", new object[] {
                        transactionCertificateImportVerifyCallParms});
            return ((TransactionCertificateImportVerifyResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintransactionCertificateImportVerify(TransactionCertificateImportVerifyCallParms transactionCertificateImportVerifyCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("transactionCertificateImportVerify", new object[] {
                        transactionCertificateImportVerifyCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public TransactionCertificateImportVerifyResult EndtransactionCertificateImportVerify(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TransactionCertificateImportVerifyResult)(results[0]));
        }
        
    ///  <remarks/>
        public void transactionCertificateImportVerifyAsync(TransactionCertificateImportVerifyCallParms transactionCertificateImportVerifyCallParms) {
            this.transactionCertificateImportVerifyAsync(transactionCertificateImportVerifyCallParms, null);
        }
        
    ///  <remarks/>
        public void transactionCertificateImportVerifyAsync(TransactionCertificateImportVerifyCallParms transactionCertificateImportVerifyCallParms, object userState) {
            if ((this.transactionCertificateImportVerifyOperationCompleted == null)) {
                this.transactionCertificateImportVerifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransactionCertificateImportVerifyOperationCompleted);
            }
            this.InvokeAsync("transactionCertificateImportVerify", new object[] {
                        transactionCertificateImportVerifyCallParms}, this.transactionCertificateImportVerifyOperationCompleted, userState);
        }
        
        private void OntransactionCertificateImportVerifyOperationCompleted(object arg) {
            if ((this.transactionCertificateImportVerifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transactionCertificateImportVerifyCompleted(this, new transactionCertificateImportVerifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void transactionCertificateImport([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] TransactionCertificateImportCallParms transactionCertificateImportCallParms) {
            this.Invoke("transactionCertificateImport", new object[] {
                        transactionCertificateImportCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegintransactionCertificateImport(TransactionCertificateImportCallParms transactionCertificateImportCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("transactionCertificateImport", new object[] {
                        transactionCertificateImportCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndtransactionCertificateImport(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void transactionCertificateImportAsync(TransactionCertificateImportCallParms transactionCertificateImportCallParms) {
            this.transactionCertificateImportAsync(transactionCertificateImportCallParms, null);
        }
        
    ///  <remarks/>
        public void transactionCertificateImportAsync(TransactionCertificateImportCallParms transactionCertificateImportCallParms, object userState) {
            if ((this.transactionCertificateImportOperationCompleted == null)) {
                this.transactionCertificateImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransactionCertificateImportOperationCompleted);
            }
            this.InvokeAsync("transactionCertificateImport", new object[] {
                        transactionCertificateImportCallParms}, this.transactionCertificateImportOperationCompleted, userState);
        }
        
        private void OntransactionCertificateImportOperationCompleted(object arg) {
            if ((this.transactionCertificateImportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transactionCertificateImportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("caCertificateGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public CACertificateInfo caCertificateGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] CACertificateGetCallParms caCertificateGetCallParms) {
            object[] results = this.Invoke("caCertificateGet", new object[] {
                        caCertificateGetCallParms});
            return ((CACertificateInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegincaCertificateGet(CACertificateGetCallParms caCertificateGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("caCertificateGet", new object[] {
                        caCertificateGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public CACertificateInfo EndcaCertificateGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CACertificateInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void caCertificateGetAsync(CACertificateGetCallParms caCertificateGetCallParms) {
            this.caCertificateGetAsync(caCertificateGetCallParms, null);
        }
        
    ///  <remarks/>
        public void caCertificateGetAsync(CACertificateGetCallParms caCertificateGetCallParms, object userState) {
            if ((this.caCertificateGetOperationCompleted == null)) {
                this.caCertificateGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncaCertificateGetOperationCompleted);
            }
            this.InvokeAsync("caCertificateGet", new object[] {
                        caCertificateGetCallParms}, this.caCertificateGetOperationCompleted, userState);
        }
        
        private void OncaCertificateGetOperationCompleted(object arg) {
            if ((this.caCertificateGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.caCertificateGetCompleted(this, new caCertificateGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("caCertificateListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public CACertificateListResult caCertificateList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] caCertificateListCallParms) {
            object[] results = this.Invoke("caCertificateList", new object[] {
                        caCertificateListCallParms});
            return ((CACertificateListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegincaCertificateList(NameValue[] caCertificateListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("caCertificateList", new object[] {
                        caCertificateListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public CACertificateListResult EndcaCertificateList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CACertificateListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void caCertificateListAsync(NameValue[] caCertificateListCallParms) {
            this.caCertificateListAsync(caCertificateListCallParms, null);
        }
        
    ///  <remarks/>
        public void caCertificateListAsync(NameValue[] caCertificateListCallParms, object userState) {
            if ((this.caCertificateListOperationCompleted == null)) {
                this.caCertificateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OncaCertificateListOperationCompleted);
            }
            this.InvokeAsync("caCertificateList", new object[] {
                        caCertificateListCallParms}, this.caCertificateListOperationCompleted, userState);
        }
        
        private void OncaCertificateListOperationCompleted(object arg) {
            if ((this.caCertificateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.caCertificateListCompleted(this, new caCertificateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("caCertificateValidateReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public string caCertificateValidate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] CACertificateValidateCallParms caCertificateValidateCallParms) {
            object[] results = this.Invoke("caCertificateValidate", new object[] {
                        caCertificateValidateCallParms});
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegincaCertificateValidate(CACertificateValidateCallParms caCertificateValidateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("caCertificateValidate", new object[] {
                        caCertificateValidateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public string EndcaCertificateValidate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public void caCertificateValidateAsync(CACertificateValidateCallParms caCertificateValidateCallParms) {
            this.caCertificateValidateAsync(caCertificateValidateCallParms, null);
        }
        
    ///  <remarks/>
        public void caCertificateValidateAsync(CACertificateValidateCallParms caCertificateValidateCallParms, object userState) {
            if ((this.caCertificateValidateOperationCompleted == null)) {
                this.caCertificateValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncaCertificateValidateOperationCompleted);
            }
            this.InvokeAsync("caCertificateValidate", new object[] {
                        caCertificateValidateCallParms}, this.caCertificateValidateOperationCompleted, userState);
        }
        
        private void OncaCertificateValidateOperationCompleted(object arg) {
            if ((this.caCertificateValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.caCertificateValidateCompleted(this, new caCertificateValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("caCertificateLDAPGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public CACertificateLDAPGetResult caCertificateLDAPGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] CACertificateLDAPGetCallParms caCertificateLDAPGetCallParms) {
            object[] results = this.Invoke("caCertificateLDAPGet", new object[] {
                        caCertificateLDAPGetCallParms});
            return ((CACertificateLDAPGetResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegincaCertificateLDAPGet(CACertificateLDAPGetCallParms caCertificateLDAPGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("caCertificateLDAPGet", new object[] {
                        caCertificateLDAPGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public CACertificateLDAPGetResult EndcaCertificateLDAPGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CACertificateLDAPGetResult)(results[0]));
        }
        
    ///  <remarks/>
        public void caCertificateLDAPGetAsync(CACertificateLDAPGetCallParms caCertificateLDAPGetCallParms) {
            this.caCertificateLDAPGetAsync(caCertificateLDAPGetCallParms, null);
        }
        
    ///  <remarks/>
        public void caCertificateLDAPGetAsync(CACertificateLDAPGetCallParms caCertificateLDAPGetCallParms, object userState) {
            if ((this.caCertificateLDAPGetOperationCompleted == null)) {
                this.caCertificateLDAPGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncaCertificateLDAPGetOperationCompleted);
            }
            this.InvokeAsync("caCertificateLDAPGet", new object[] {
                        caCertificateLDAPGetCallParms}, this.caCertificateLDAPGetOperationCompleted, userState);
        }
        
        private void OncaCertificateLDAPGetOperationCompleted(object arg) {
            if ((this.caCertificateLDAPGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.caCertificateLDAPGetCompleted(this, new caCertificateLDAPGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void caCertificateLoad([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] CACertificateLoadCallParms caCertificateLoadCallParms) {
            this.Invoke("caCertificateLoad", new object[] {
                        caCertificateLoadCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegincaCertificateLoad(CACertificateLoadCallParms caCertificateLoadCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("caCertificateLoad", new object[] {
                        caCertificateLoadCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndcaCertificateLoad(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void caCertificateLoadAsync(CACertificateLoadCallParms caCertificateLoadCallParms) {
            this.caCertificateLoadAsync(caCertificateLoadCallParms, null);
        }
        
    ///  <remarks/>
        public void caCertificateLoadAsync(CACertificateLoadCallParms caCertificateLoadCallParms, object userState) {
            if ((this.caCertificateLoadOperationCompleted == null)) {
                this.caCertificateLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OncaCertificateLoadOperationCompleted);
            }
            this.InvokeAsync("caCertificateLoad", new object[] {
                        caCertificateLoadCallParms}, this.caCertificateLoadOperationCompleted, userState);
        }
        
        private void OncaCertificateLoadOperationCompleted(object arg) {
            if ((this.caCertificateLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.caCertificateLoadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void caCertificateDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] CACertificateDeleteCallParms caCertificateDeleteCallParms) {
            this.Invoke("caCertificateDelete", new object[] {
                        caCertificateDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegincaCertificateDelete(CACertificateDeleteCallParms caCertificateDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("caCertificateDelete", new object[] {
                        caCertificateDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndcaCertificateDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void caCertificateDeleteAsync(CACertificateDeleteCallParms caCertificateDeleteCallParms) {
            this.caCertificateDeleteAsync(caCertificateDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void caCertificateDeleteAsync(CACertificateDeleteCallParms caCertificateDeleteCallParms, object userState) {
            if ((this.caCertificateDeleteOperationCompleted == null)) {
                this.caCertificateDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OncaCertificateDeleteOperationCompleted);
            }
            this.InvokeAsync("caCertificateDelete", new object[] {
                        caCertificateDeleteCallParms}, this.caCertificateDeleteOperationCompleted, userState);
        }
        
        private void OncaCertificateDeleteOperationCompleted(object arg) {
            if ((this.caCertificateDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.caCertificateDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void caCertificateSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] CACertificateSetCallParms caCertificateSetCallParms) {
            this.Invoke("caCertificateSet", new object[] {
                        caCertificateSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegincaCertificateSet(CACertificateSetCallParms caCertificateSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("caCertificateSet", new object[] {
                        caCertificateSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndcaCertificateSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void caCertificateSetAsync(CACertificateSetCallParms caCertificateSetCallParms) {
            this.caCertificateSetAsync(caCertificateSetCallParms, null);
        }
        
    ///  <remarks/>
        public void caCertificateSetAsync(CACertificateSetCallParms caCertificateSetCallParms, object userState) {
            if ((this.caCertificateSetOperationCompleted == null)) {
                this.caCertificateSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncaCertificateSetOperationCompleted);
            }
            this.InvokeAsync("caCertificateSet", new object[] {
                        caCertificateSetCallParms}, this.caCertificateSetOperationCompleted, userState);
        }
        
        private void OncaCertificateSetOperationCompleted(object arg) {
            if ((this.caCertificateSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.caCertificateSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("caCertificateExportReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public CACertificateExportResult caCertificateExport([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] CACertificateExportCallParms caCertificateExportCallParms) {
            object[] results = this.Invoke("caCertificateExport", new object[] {
                        caCertificateExportCallParms});
            return ((CACertificateExportResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegincaCertificateExport(CACertificateExportCallParms caCertificateExportCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("caCertificateExport", new object[] {
                        caCertificateExportCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public CACertificateExportResult EndcaCertificateExport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CACertificateExportResult)(results[0]));
        }
        
    ///  <remarks/>
        public void caCertificateExportAsync(CACertificateExportCallParms caCertificateExportCallParms) {
            this.caCertificateExportAsync(caCertificateExportCallParms, null);
        }
        
    ///  <remarks/>
        public void caCertificateExportAsync(CACertificateExportCallParms caCertificateExportCallParms, object userState) {
            if ((this.caCertificateExportOperationCompleted == null)) {
                this.caCertificateExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OncaCertificateExportOperationCompleted);
            }
            this.InvokeAsync("caCertificateExport", new object[] {
                        caCertificateExportCallParms}, this.caCertificateExportOperationCompleted, userState);
        }
        
        private void OncaCertificateExportOperationCompleted(object arg) {
            if ((this.caCertificateExportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.caCertificateExportCompleted(this, new caCertificateExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("caCertificateLoadVerifyReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public CACertificateLoadVerifyResult caCertificateLoadVerify([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] CACertificateLoadVerifyCallParms caCertificateLoadVerifyCallParms) {
            object[] results = this.Invoke("caCertificateLoadVerify", new object[] {
                        caCertificateLoadVerifyCallParms});
            return ((CACertificateLoadVerifyResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BegincaCertificateLoadVerify(CACertificateLoadVerifyCallParms caCertificateLoadVerifyCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("caCertificateLoadVerify", new object[] {
                        caCertificateLoadVerifyCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public CACertificateLoadVerifyResult EndcaCertificateLoadVerify(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CACertificateLoadVerifyResult)(results[0]));
        }
        
    ///  <remarks/>
        public void caCertificateLoadVerifyAsync(CACertificateLoadVerifyCallParms caCertificateLoadVerifyCallParms) {
            this.caCertificateLoadVerifyAsync(caCertificateLoadVerifyCallParms, null);
        }
        
    ///  <remarks/>
        public void caCertificateLoadVerifyAsync(CACertificateLoadVerifyCallParms caCertificateLoadVerifyCallParms, object userState) {
            if ((this.caCertificateLoadVerifyOperationCompleted == null)) {
                this.caCertificateLoadVerifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncaCertificateLoadVerifyOperationCompleted);
            }
            this.InvokeAsync("caCertificateLoadVerify", new object[] {
                        caCertificateLoadVerifyCallParms}, this.caCertificateLoadVerifyOperationCompleted, userState);
        }
        
        private void OncaCertificateLoadVerifyOperationCompleted(object arg) {
            if ((this.caCertificateLoadVerifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.caCertificateLoadVerifyCompleted(this, new caCertificateLoadVerifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("reportDefinitionGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public ReportDefinitionInfo reportDefinitionGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ReportDefinitionGetCallParms reportDefinitionGetCallParms) {
            object[] results = this.Invoke("reportDefinitionGet", new object[] {
                        reportDefinitionGetCallParms});
            return ((ReportDefinitionInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginreportDefinitionGet(ReportDefinitionGetCallParms reportDefinitionGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("reportDefinitionGet", new object[] {
                        reportDefinitionGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public ReportDefinitionInfo EndreportDefinitionGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ReportDefinitionInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void reportDefinitionGetAsync(ReportDefinitionGetCallParms reportDefinitionGetCallParms) {
            this.reportDefinitionGetAsync(reportDefinitionGetCallParms, null);
        }
        
    ///  <remarks/>
        public void reportDefinitionGetAsync(ReportDefinitionGetCallParms reportDefinitionGetCallParms, object userState) {
            if ((this.reportDefinitionGetOperationCompleted == null)) {
                this.reportDefinitionGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreportDefinitionGetOperationCompleted);
            }
            this.InvokeAsync("reportDefinitionGet", new object[] {
                        reportDefinitionGetCallParms}, this.reportDefinitionGetOperationCompleted, userState);
        }
        
        private void OnreportDefinitionGetOperationCompleted(object arg) {
            if ((this.reportDefinitionGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reportDefinitionGetCompleted(this, new reportDefinitionGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("reportDefinitionListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public ReportDefinitionListResult reportDefinitionList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] reportDefinitionListCallParms) {
            object[] results = this.Invoke("reportDefinitionList", new object[] {
                        reportDefinitionListCallParms});
            return ((ReportDefinitionListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginreportDefinitionList(NameValue[] reportDefinitionListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("reportDefinitionList", new object[] {
                        reportDefinitionListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public ReportDefinitionListResult EndreportDefinitionList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ReportDefinitionListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void reportDefinitionListAsync(NameValue[] reportDefinitionListCallParms) {
            this.reportDefinitionListAsync(reportDefinitionListCallParms, null);
        }
        
    ///  <remarks/>
        public void reportDefinitionListAsync(NameValue[] reportDefinitionListCallParms, object userState) {
            if ((this.reportDefinitionListOperationCompleted == null)) {
                this.reportDefinitionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreportDefinitionListOperationCompleted);
            }
            this.InvokeAsync("reportDefinitionList", new object[] {
                        reportDefinitionListCallParms}, this.reportDefinitionListOperationCompleted, userState);
        }
        
        private void OnreportDefinitionListOperationCompleted(object arg) {
            if ((this.reportDefinitionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reportDefinitionListCompleted(this, new reportDefinitionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("reportCreateReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public string reportCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ReportCreateCallParms reportCreateCallParms) {
            object[] results = this.Invoke("reportCreate", new object[] {
                        reportCreateCallParms});
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginreportCreate(ReportCreateCallParms reportCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("reportCreate", new object[] {
                        reportCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public string EndreportCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
    ///  <remarks/>
        public void reportCreateAsync(ReportCreateCallParms reportCreateCallParms) {
            this.reportCreateAsync(reportCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void reportCreateAsync(ReportCreateCallParms reportCreateCallParms, object userState) {
            if ((this.reportCreateOperationCompleted == null)) {
                this.reportCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreportCreateOperationCompleted);
            }
            this.InvokeAsync("reportCreate", new object[] {
                        reportCreateCallParms}, this.reportCreateOperationCompleted, userState);
        }
        
        private void OnreportCreateOperationCompleted(object arg) {
            if ((this.reportCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reportCreateCompleted(this, new reportCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("reportGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public ReportInfo reportGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ReportGetCallParms reportGetCallParms) {
            object[] results = this.Invoke("reportGet", new object[] {
                        reportGetCallParms});
            return ((ReportInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginreportGet(ReportGetCallParms reportGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("reportGet", new object[] {
                        reportGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public ReportInfo EndreportGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ReportInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void reportGetAsync(ReportGetCallParms reportGetCallParms) {
            this.reportGetAsync(reportGetCallParms, null);
        }
        
    ///  <remarks/>
        public void reportGetAsync(ReportGetCallParms reportGetCallParms, object userState) {
            if ((this.reportGetOperationCompleted == null)) {
                this.reportGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreportGetOperationCompleted);
            }
            this.InvokeAsync("reportGet", new object[] {
                        reportGetCallParms}, this.reportGetOperationCompleted, userState);
        }
        
        private void OnreportGetOperationCompleted(object arg) {
            if ((this.reportGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reportGetCompleted(this, new reportGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("reportListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public ReportListResult reportList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ReportListCallParms reportListCallParms) {
            object[] results = this.Invoke("reportList", new object[] {
                        reportListCallParms});
            return ((ReportListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginreportList(ReportListCallParms reportListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("reportList", new object[] {
                        reportListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public ReportListResult EndreportList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ReportListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void reportListAsync(ReportListCallParms reportListCallParms) {
            this.reportListAsync(reportListCallParms, null);
        }
        
    ///  <remarks/>
        public void reportListAsync(ReportListCallParms reportListCallParms, object userState) {
            if ((this.reportListOperationCompleted == null)) {
                this.reportListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreportListOperationCompleted);
            }
            this.InvokeAsync("reportList", new object[] {
                        reportListCallParms}, this.reportListOperationCompleted, userState);
        }
        
        private void OnreportListOperationCompleted(object arg) {
            if ((this.reportListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reportListCompleted(this, new reportListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void reportDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ReportDeleteCallParms reportDeleteCallParms) {
            this.Invoke("reportDelete", new object[] {
                        reportDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginreportDelete(ReportDeleteCallParms reportDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("reportDelete", new object[] {
                        reportDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndreportDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void reportDeleteAsync(ReportDeleteCallParms reportDeleteCallParms) {
            this.reportDeleteAsync(reportDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void reportDeleteAsync(ReportDeleteCallParms reportDeleteCallParms, object userState) {
            if ((this.reportDeleteOperationCompleted == null)) {
                this.reportDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreportDeleteOperationCompleted);
            }
            this.InvokeAsync("reportDelete", new object[] {
                        reportDeleteCallParms}, this.reportDeleteOperationCompleted, userState);
        }
        
        private void OnreportDeleteOperationCompleted(object arg) {
            if ((this.reportDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reportDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userFederationCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserFederationCreateCallParms userFederationCreateCallParms) {
            this.Invoke("userFederationCreate", new object[] {
                        userFederationCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserFederationCreate(UserFederationCreateCallParms userFederationCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userFederationCreate", new object[] {
                        userFederationCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserFederationCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userFederationCreateAsync(UserFederationCreateCallParms userFederationCreateCallParms) {
            this.userFederationCreateAsync(userFederationCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void userFederationCreateAsync(UserFederationCreateCallParms userFederationCreateCallParms, object userState) {
            if ((this.userFederationCreateOperationCompleted == null)) {
                this.userFederationCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserFederationCreateOperationCompleted);
            }
            this.InvokeAsync("userFederationCreate", new object[] {
                        userFederationCreateCallParms}, this.userFederationCreateOperationCompleted, userState);
        }
        
        private void OnuserFederationCreateOperationCompleted(object arg) {
            if ((this.userFederationCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userFederationCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userFederationDeleteReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public int userFederationDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserFederationDeleteCallParms userFederationDeleteCallParms) {
            object[] results = this.Invoke("userFederationDelete", new object[] {
                        userFederationDeleteCallParms});
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserFederationDelete(UserFederationDeleteCallParms userFederationDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userFederationDelete", new object[] {
                        userFederationDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public int EnduserFederationDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
    ///  <remarks/>
        public void userFederationDeleteAsync(UserFederationDeleteCallParms userFederationDeleteCallParms) {
            this.userFederationDeleteAsync(userFederationDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void userFederationDeleteAsync(UserFederationDeleteCallParms userFederationDeleteCallParms, object userState) {
            if ((this.userFederationDeleteOperationCompleted == null)) {
                this.userFederationDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserFederationDeleteOperationCompleted);
            }
            this.InvokeAsync("userFederationDelete", new object[] {
                        userFederationDeleteCallParms}, this.userFederationDeleteOperationCompleted, userState);
        }
        
        private void OnuserFederationDeleteOperationCompleted(object arg) {
            if ((this.userFederationDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userFederationDeleteCompleted(this, new userFederationDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("userFederationGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserFederationInfo[] userFederationGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserFederationGetCallParms userFederationGetCallParms) {
            object[] results = this.Invoke("userFederationGet", new object[] {
                        userFederationGetCallParms});
            return ((UserFederationInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserFederationGet(UserFederationGetCallParms userFederationGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userFederationGet", new object[] {
                        userFederationGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserFederationInfo[] EnduserFederationGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserFederationInfo[])(results[0]));
        }
        
    ///  <remarks/>
        public void userFederationGetAsync(UserFederationGetCallParms userFederationGetCallParms) {
            this.userFederationGetAsync(userFederationGetCallParms, null);
        }
        
    ///  <remarks/>
        public void userFederationGetAsync(UserFederationGetCallParms userFederationGetCallParms, object userState) {
            if ((this.userFederationGetOperationCompleted == null)) {
                this.userFederationGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserFederationGetOperationCompleted);
            }
            this.InvokeAsync("userFederationGet", new object[] {
                        userFederationGetCallParms}, this.userFederationGetOperationCompleted, userState);
        }
        
        private void OnuserFederationGetOperationCompleted(object arg) {
            if ((this.userFederationGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userFederationGetCompleted(this, new userFederationGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void userFederationSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserFederationSetCallParms userFederationSetCallParms) {
            this.Invoke("userFederationSet", new object[] {
                        userFederationSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserFederationSet(UserFederationSetCallParms userFederationSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userFederationSet", new object[] {
                        userFederationSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EnduserFederationSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void userFederationSetAsync(UserFederationSetCallParms userFederationSetCallParms) {
            this.userFederationSetAsync(userFederationSetCallParms, null);
        }
        
    ///  <remarks/>
        public void userFederationSetAsync(UserFederationSetCallParms userFederationSetCallParms, object userState) {
            if ((this.userFederationSetOperationCompleted == null)) {
                this.userFederationSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserFederationSetOperationCompleted);
            }
            this.InvokeAsync("userFederationSet", new object[] {
                        userFederationSetCallParms}, this.userFederationSetOperationCompleted, userState);
        }
        
        private void OnuserFederationSetOperationCompleted(object arg) {
            if ((this.userFederationSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userFederationSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userFederationListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public UserFederationListResult userFederationList([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] UserFederationListCallParms userFederationListCallParms) {
            object[] results = this.Invoke("userFederationList", new object[] {
                        userFederationListCallParms});
            return ((UserFederationListResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginuserFederationList(UserFederationListCallParms userFederationListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userFederationList", new object[] {
                        userFederationListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public UserFederationListResult EnduserFederationList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserFederationListResult)(results[0]));
        }
        
    ///  <remarks/>
        public void userFederationListAsync(UserFederationListCallParms userFederationListCallParms) {
            this.userFederationListAsync(userFederationListCallParms, null);
        }
        
    ///  <remarks/>
        public void userFederationListAsync(UserFederationListCallParms userFederationListCallParms, object userState) {
            if ((this.userFederationListOperationCompleted == null)) {
                this.userFederationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserFederationListOperationCompleted);
            }
            this.InvokeAsync("userFederationList", new object[] {
                        userFederationListCallParms}, this.userFederationListOperationCompleted, userState);
        }
        
        private void OnuserFederationListOperationCompleted(object arg) {
            if ((this.userFederationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userFederationListCompleted(this, new userFederationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void managedCaCreate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ManagedCaCreateCallParms managedCaCreateCallParms) {
            this.Invoke("managedCaCreate", new object[] {
                        managedCaCreateCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginmanagedCaCreate(ManagedCaCreateCallParms managedCaCreateCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("managedCaCreate", new object[] {
                        managedCaCreateCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndmanagedCaCreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void managedCaCreateAsync(ManagedCaCreateCallParms managedCaCreateCallParms) {
            this.managedCaCreateAsync(managedCaCreateCallParms, null);
        }
        
    ///  <remarks/>
        public void managedCaCreateAsync(ManagedCaCreateCallParms managedCaCreateCallParms, object userState) {
            if ((this.managedCaCreateOperationCompleted == null)) {
                this.managedCaCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmanagedCaCreateOperationCompleted);
            }
            this.InvokeAsync("managedCaCreate", new object[] {
                        managedCaCreateCallParms}, this.managedCaCreateOperationCompleted, userState);
        }
        
        private void OnmanagedCaCreateOperationCompleted(object arg) {
            if ((this.managedCaCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.managedCaCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void managedCaDelete([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ManagedCaDeleteCallParms managedCaDeleteCallParms) {
            this.Invoke("managedCaDelete", new object[] {
                        managedCaDeleteCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginmanagedCaDelete(ManagedCaDeleteCallParms managedCaDeleteCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("managedCaDelete", new object[] {
                        managedCaDeleteCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndmanagedCaDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void managedCaDeleteAsync(ManagedCaDeleteCallParms managedCaDeleteCallParms) {
            this.managedCaDeleteAsync(managedCaDeleteCallParms, null);
        }
        
    ///  <remarks/>
        public void managedCaDeleteAsync(ManagedCaDeleteCallParms managedCaDeleteCallParms, object userState) {
            if ((this.managedCaDeleteOperationCompleted == null)) {
                this.managedCaDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmanagedCaDeleteOperationCompleted);
            }
            this.InvokeAsync("managedCaDelete", new object[] {
                        managedCaDeleteCallParms}, this.managedCaDeleteOperationCompleted, userState);
        }
        
        private void OnmanagedCaDeleteOperationCompleted(object arg) {
            if ((this.managedCaDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.managedCaDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("managedCaGetReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public ManagedCaInfo managedCaGet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ManagedCaGetCallParms managedCaGetCallParms) {
            object[] results = this.Invoke("managedCaGet", new object[] {
                        managedCaGetCallParms});
            return ((ManagedCaInfo)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginmanagedCaGet(ManagedCaGetCallParms managedCaGetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("managedCaGet", new object[] {
                        managedCaGetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public ManagedCaInfo EndmanagedCaGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ManagedCaInfo)(results[0]));
        }
        
    ///  <remarks/>
        public void managedCaGetAsync(ManagedCaGetCallParms managedCaGetCallParms) {
            this.managedCaGetAsync(managedCaGetCallParms, null);
        }
        
    ///  <remarks/>
        public void managedCaGetAsync(ManagedCaGetCallParms managedCaGetCallParms, object userState) {
            if ((this.managedCaGetOperationCompleted == null)) {
                this.managedCaGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmanagedCaGetOperationCompleted);
            }
            this.InvokeAsync("managedCaGet", new object[] {
                        managedCaGetCallParms}, this.managedCaGetOperationCompleted, userState);
        }
        
        private void OnmanagedCaGetOperationCompleted(object arg) {
            if ((this.managedCaGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.managedCaGetCompleted(this, new managedCaGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void managedCaSet([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ManagedCaSetCallParms managedCaSetCallParms) {
            this.Invoke("managedCaSet", new object[] {
                        managedCaSetCallParms});
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginmanagedCaSet(ManagedCaSetCallParms managedCaSetCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("managedCaSet", new object[] {
                        managedCaSetCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public void EndmanagedCaSet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
    ///  <remarks/>
        public void managedCaSetAsync(ManagedCaSetCallParms managedCaSetCallParms) {
            this.managedCaSetAsync(managedCaSetCallParms, null);
        }
        
    ///  <remarks/>
        public void managedCaSetAsync(ManagedCaSetCallParms managedCaSetCallParms, object userState) {
            if ((this.managedCaSetOperationCompleted == null)) {
                this.managedCaSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmanagedCaSetOperationCompleted);
            }
            this.InvokeAsync("managedCaSet", new object[] {
                        managedCaSetCallParms}, this.managedCaSetOperationCompleted, userState);
        }
        
        private void OnmanagedCaSetOperationCompleted(object arg) {
            if ((this.managedCaSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.managedCaSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("managedCaListReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public ManagedCaInfoList managedCaList([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] managedCaListCallParms) {
            object[] results = this.Invoke("managedCaList", new object[] {
                        managedCaListCallParms});
            return ((ManagedCaInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginmanagedCaList(NameValue[] managedCaListCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("managedCaList", new object[] {
                        managedCaListCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public ManagedCaInfoList EndmanagedCaList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ManagedCaInfoList)(results[0]));
        }
        
    ///  <remarks/>
        public void managedCaListAsync(NameValue[] managedCaListCallParms) {
            this.managedCaListAsync(managedCaListCallParms, null);
        }
        
    ///  <remarks/>
        public void managedCaListAsync(NameValue[] managedCaListCallParms, object userState) {
            if ((this.managedCaListOperationCompleted == null)) {
                this.managedCaListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmanagedCaListOperationCompleted);
            }
            this.InvokeAsync("managedCaList", new object[] {
                        managedCaListCallParms}, this.managedCaListOperationCompleted, userState);
        }
        
        private void OnmanagedCaListOperationCompleted(object arg) {
            if ((this.managedCaListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.managedCaListCompleted(this, new managedCaListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("pivSignContentReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public PivSignContentResult managedCaPivSignContent([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] PivSignContentCallParms pivSignContentCallParms) {
            object[] results = this.Invoke("managedCaPivSignContent", new object[] {
                        pivSignContentCallParms});
            return ((PivSignContentResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginmanagedCaPivSignContent(PivSignContentCallParms pivSignContentCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("managedCaPivSignContent", new object[] {
                        pivSignContentCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public PivSignContentResult EndmanagedCaPivSignContent(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PivSignContentResult)(results[0]));
        }
        
    ///  <remarks/>
        public void managedCaPivSignContentAsync(PivSignContentCallParms pivSignContentCallParms) {
            this.managedCaPivSignContentAsync(pivSignContentCallParms, null);
        }
        
    ///  <remarks/>
        public void managedCaPivSignContentAsync(PivSignContentCallParms pivSignContentCallParms, object userState) {
            if ((this.managedCaPivSignContentOperationCompleted == null)) {
                this.managedCaPivSignContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmanagedCaPivSignContentOperationCompleted);
            }
            this.InvokeAsync("managedCaPivSignContent", new object[] {
                        pivSignContentCallParms}, this.managedCaPivSignContentOperationCompleted, userState);
        }
        
        private void OnmanagedCaPivSignContentOperationCompleted(object arg) {
            if ((this.managedCaPivSignContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.managedCaPivSignContentCompleted(this, new managedCaPivSignContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("microsoftCaSupportAvailableReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public bool isMicrosoftCaSupportAvailable([System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] NameValue[] microsoftCaSupportAvailableCallParms) {
            object[] results = this.Invoke("isMicrosoftCaSupportAvailable", new object[] {
                        microsoftCaSupportAvailableCallParms});
            return ((bool)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginisMicrosoftCaSupportAvailable(NameValue[] microsoftCaSupportAvailableCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("isMicrosoftCaSupportAvailable", new object[] {
                        microsoftCaSupportAvailableCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public bool EndisMicrosoftCaSupportAvailable(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
    ///  <remarks/>
        public void isMicrosoftCaSupportAvailableAsync(NameValue[] microsoftCaSupportAvailableCallParms) {
            this.isMicrosoftCaSupportAvailableAsync(microsoftCaSupportAvailableCallParms, null);
        }
        
    ///  <remarks/>
        public void isMicrosoftCaSupportAvailableAsync(NameValue[] microsoftCaSupportAvailableCallParms, object userState) {
            if ((this.isMicrosoftCaSupportAvailableOperationCompleted == null)) {
                this.isMicrosoftCaSupportAvailableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisMicrosoftCaSupportAvailableOperationCompleted);
            }
            this.InvokeAsync("isMicrosoftCaSupportAvailable", new object[] {
                        microsoftCaSupportAvailableCallParms}, this.isMicrosoftCaSupportAvailableOperationCompleted, userState);
        }
        
        private void OnisMicrosoftCaSupportAvailableOperationCompleted(object arg) {
            if ((this.isMicrosoftCaSupportAvailableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isMicrosoftCaSupportAvailableCompleted(this, new isMicrosoftCaSupportAvailableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("managedCaIsCertRevokedReturn", Namespace="urn:entrust.com:ig:adminV9:wsdl")]
        public ManagedCaIsCertRevokedResult managedCaIsCertRevoked([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")] ManagedCaIsCertRevokedCallParms managedCaIsCertRevokedCallParms) {
            object[] results = this.Invoke("managedCaIsCertRevoked", new object[] {
                        managedCaIsCertRevokedCallParms});
            return ((ManagedCaIsCertRevokedResult)(results[0]));
        }
        
    ///  <remarks/>
        public System.IAsyncResult BeginmanagedCaIsCertRevoked(ManagedCaIsCertRevokedCallParms managedCaIsCertRevokedCallParms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("managedCaIsCertRevoked", new object[] {
                        managedCaIsCertRevokedCallParms}, callback, asyncState);
        }
        
    ///  <remarks/>
        public ManagedCaIsCertRevokedResult EndmanagedCaIsCertRevoked(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ManagedCaIsCertRevokedResult)(results[0]));
        }
        
    ///  <remarks/>
        public void managedCaIsCertRevokedAsync(ManagedCaIsCertRevokedCallParms managedCaIsCertRevokedCallParms) {
            this.managedCaIsCertRevokedAsync(managedCaIsCertRevokedCallParms, null);
        }
        
    ///  <remarks/>
        public void managedCaIsCertRevokedAsync(ManagedCaIsCertRevokedCallParms managedCaIsCertRevokedCallParms, object userState) {
            if ((this.managedCaIsCertRevokedOperationCompleted == null)) {
                this.managedCaIsCertRevokedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmanagedCaIsCertRevokedOperationCompleted);
            }
            this.InvokeAsync("managedCaIsCertRevoked", new object[] {
                        managedCaIsCertRevokedCallParms}, this.managedCaIsCertRevokedOperationCompleted, userState);
        }
        
        private void OnmanagedCaIsCertRevokedOperationCompleted(object arg) {
            if ((this.managedCaIsCertRevokedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.managedCaIsCertRevokedCompleted(this, new managedCaIsCertRevokedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
    ///  <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to login. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class LoginCallParms {
        
        private LoginParms parmsField;
        
    /// <datatype>
    ///   LoginParms
    /// </datatype>
    /// <value>
    ///   Includes the administrator ID and password of the administrator 
    ///   logging in. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoginParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information passed to a login or changePassword request. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class LoginParms {
        
        private string adminIdField;
        
        private string passwordField;
        
        private string[] responseField;
        
        private NameValue[] parmsField;
        
        private string delegateIdField;
        
        private byte[][] clientCertField;
        
        private System.Nullable<DelegationAuthType> delegateAuthField;
        
        private bool delegateAuthFieldSpecified;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID of the administrator logging in.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string adminId {
            get {
                return this.adminIdField;
            }
            set {
                this.adminIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The password for the first phase of authentication.
    ///   When performing the second phase of two-factor authentication, this 
    ///   value must be set to null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The response to a GRID or TOKENCR challenge, or the value displayed on 
    ///   the token for TOKENRO authentication, for the second phase of 
    ///   authentication. 
    ///   When performing the second call to login or changePassword when 
    ///   second-factor authentication is required, set this value to the response 
    ///   and set the password parameter to null. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   Parameters passed to login. Currently the only supported parameter 
    ///   here is "locale", used to provide the location of the administrator 
    ///   logging in. This locale is an ISO language code, optionally followed by 
    ///   an ISO country code, separated by an underscore, for example "en_US" 
    ///   for American English. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID of the administrator logging in by delegation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string delegateId {
            get {
                return this.delegateIdField;
            }
            set {
                this.delegateIdField = value;
            }
        }
        
    /// <datatype>
    ///   Base64Binary[]
    /// </datatype>
    /// <value>
    ///   The certificate chain from an SSL client.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=false)]
        public byte[][] clientCert {
            get {
                return this.clientCertField;
            }
            set {
                this.clientCertField = value;
            }
        }
        
    /// <datatype>
    ///   DelegationAuthType
    /// </datatype>
    /// <value>
    ///   The kind of authenticator being provided for a delegation login. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<DelegationAuthType> delegateAuth {
            get {
                return this.delegateAuthField;
            }
            set {
                this.delegateAuthField = value;
            }
        }
        
    ///  <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool delegateAuthSpecified {
            get {
                return this.delegateAuthFieldSpecified;
            }
            set {
                this.delegateAuthFieldSpecified = value;
            }
        }
    }
    
    /// <summary>
    ///   A name/value pair.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public partial class NameValue {
        
        private string nameField;
        
        private string valueField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The value.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <summary>
    ///   Result from a 'managed CA is revoked' operation
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaIsCertRevokedResult {
        
        private System.Nullable<bool> isRevokedField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates whether or not the certificate is revoked: TRUE if the 
    ///   certificate is revoked, FALSE if the certificate is not revoked, NULL if 
    ///   the revocation status of the certificate could not be determined 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> isRevoked {
            get {
                return this.isRevokedField;
            }
            set {
                this.isRevokedField = value;
            }
        }
    }
    
    /// <summary>
    ///   Parameters for the 'managed CA is revoked' operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaIsCertRevokedCallParms {
        
        private string managedCaNameField;
        
        private string certSubjectDnField;
        
        private string certSerialNumberField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the managed CA that issued the certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string managedCaName {
            get {
                return this.managedCaNameField;
            }
            set {
                this.managedCaNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The subject DN of the certificate that the revocation check is being 
    ///   performed on. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string certSubjectDn {
            get {
                return this.certSubjectDnField;
            }
            set {
                this.certSubjectDnField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the certificate that the revocation check is 
    ///   being performed on (hexadecimal string representation). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string certSerialNumber {
            get {
                return this.certSerialNumberField;
            }
            set {
                this.certSerialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   Result from a PIV content signing operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PivSignContentResult {
        
        private byte[] signatureField;
        
        private SignatureAlg signatureAlgField;
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The signature. When this structure is the result of a NO_OP signature 
    ///   operation, this signature value will be the empty byte array. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] signature {
            get {
                return this.signatureField;
            }
            set {
                this.signatureField = value;
            }
        }
        
    /// <datatype>
    ///   SignatureAlg
    /// </datatype>
    /// <value>
    ///   This signature algorithm that was used to create the signature. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SignatureAlg signatureAlg {
            get {
                return this.signatureAlgField;
            }
            set {
                this.signatureAlgField = value;
            }
        }
    }
    
    /// <summary>
    ///   A signature algorithm.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum SignatureAlg {
        
    /// <value>
    ///   The RSA-SHA1 signing algorithm.
    /// </value>
        RSA_SHA1,
        
    /// <value>
    ///   The RSA-SHA224 signing algorithm.
    /// </value>
        RSA_SHA224,
        
    /// <value>
    ///   The RSA-SHA256 signing algorithm.
    /// </value>
        RSA_SHA256,
        
    /// <value>
    ///   The RSA-SHA384 signing algorithm.
    /// </value>
        RSA_SHA384,
        
    /// <value>
    ///   The RSA-SHA512 signing algorithm.
    /// </value>
        RSA_SHA512,
        
    /// <value>
    ///   The RSA-RECOMMENDED signing algorithm.
    /// </value>
        RSA_RECOMMENDED,
        
    /// <value>
    ///   The RSA-RECOMMENDED-NO-SHA224 signing algorithm.
    /// </value>
        RSA_RECOMMENDED_NO_SHA224,
        
    /// <value>
    ///   The RSAPSS-SHA1 signing algorithm.
    /// </value>
        RSAPSS_SHA1,
        
    /// <value>
    ///   The RSAPSS-SHA224 signing algorithm.
    /// </value>
        RSAPSS_SHA224,
        
    /// <value>
    ///   The RSAPSS-SHA256 signing algorithm.
    /// </value>
        RSAPSS_SHA256,
        
    /// <value>
    ///   The RSAPSS-SHA384 signing algorithm.
    /// </value>
        RSAPSS_SHA384,
        
    /// <value>
    ///   The RSAPSS-SHA512 signing algorithm.
    /// </value>
        RSAPSS_SHA512,
        
    /// <value>
    ///   The RSAPSS-RECOMMENDED signing algorithm.
    /// </value>
        RSAPSS_RECOMMENDED,
        
    /// <value>
    ///   The RSAPSS-RECOMMENDED-NO-SHA224 signing algorithm.
    /// </value>
        RSAPSS_RECOMMENDED_NO_SHA224,
        
    /// <value>
    ///   The ECDSA-SHA1 signing algorithm.
    /// </value>
        ECDSA_SHA1,
        
    /// <value>
    ///   The ECDSA-SHA224 signing algorithm.
    /// </value>
        ECDSA_SHA224,
        
    /// <value>
    ///   The ECDSA-SHA256 signing algorithm.
    /// </value>
        ECDSA_SHA256,
        
    /// <value>
    ///   The ECDSA-SHA384 signing algorithm.
    /// </value>
        ECDSA_SHA384,
        
    /// <value>
    ///   The ECDSA-SHA512 signing algorithm.
    /// </value>
        ECDSA_SHA512,
        
    /// <value>
    ///   The ECDSA-RECOMMENDED signing algorithm.
    /// </value>
        ECDSA_RECOMMENDED,
        
    /// <value>
    ///   The ECDSA-RECOMMENDED-NO-SHA224 signing algorithm.
    /// </value>
        ECDSA_RECOMMENDED_NO_SHA224,
    }
    
    /// <summary>
    ///   Parameters for the PIV content signing' operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PivSignContentCallParms {
        
        private string managedCaNameField;
        
        private PivContentSigningOperationType operationTypeField;
        
        private byte[] dataToSignField;
        
        private string uuidField;
        
        private byte[] fascnField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the managed CA whose PIV content signer will be used to 
    ///   perform the signing operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string managedCaName {
            get {
                return this.managedCaNameField;
            }
            set {
                this.managedCaNameField = value;
            }
        }
        
    /// <datatype>
    ///   PivContentSigningOperationType
    /// </datatype>
    /// <value>
    ///   The type of PIV content signer operation that is being performed; this 
    ///   effects how the input is validated and how the signing is done. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PivContentSigningOperationType operationType {
            get {
                return this.operationTypeField;
            }
            set {
                this.operationTypeField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The data over which the signature is being calculated. For example, 
    ///   when performing a CHUID signing operation, this will contain the 
    ///   encoded CHUID. The format of this data is validated. Ignored when the 
    ///   operationType is NO_OP. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] dataToSign {
            get {
                return this.dataToSignField;
            }
            set {
                this.dataToSignField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The UUID of the user for which this signing operation is being 
    ///   performed; the resulting signature will will be incorporated into a PIV data 
    ///   object that is part of this user's PIV smart credential. When 
    ///   present, the UUID is included as a signed attribute in the resulting 
    ///   signature; otherwise the UUID is not included as a signed attribute in the 
    ///   resulting signature. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The FASCN of the user for which this signing operation is being 
    ///   performed; the resulting signature will will be incorporated into a PIV 
    ///   data object that is part of this user's PIV smart credential. When 
    ///   present, the FASCN is included as a signed attribute in the resulting 
    ///   signature; otherwise the FASCN is not included as a signed attribute in 
    ///   the resulting signature. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] fascn {
            get {
                return this.fascnField;
            }
            set {
                this.fascnField = value;
            }
        }
    }
    
    /// <summary>
    ///   Type of PIV content signing operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum PivContentSigningOperationType {
        
    /// <value>
    ///   Indicates a CHUID is being signed.
    /// </value>
        CHUID,
        
    /// <value>
    ///   Indicates a biometric is being signed.
    /// </value>
        BIOMETRIC,
        
    /// <value>
    ///   Indicates the signed data object is being signed.
    /// </value>
        SECURITY_OBJECT,
        
    /// <value>
    ///   Indicates that a signing operation should not be performed; intended 
    ///   to be used for querying the signature algorithm. 
    /// </value>
        NO_OP,
    }
    
    /// <summary>
    ///   Defines a list of ManagedCaInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaInfoList {
        
        private ManagedCaInfo[] managedCaInfoField;
        
    /// <datatype>
    ///   ManagedCaInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a managed CA.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ManagedCaInfo[] ManagedCaInfo {
            get {
                return this.managedCaInfoField;
            }
            set {
                this.managedCaInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a managed CA; can be either an Entrust 
    ///   managed CA or a Microsoft managed CA. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaInfo {
        
        private string nameField;
        
        private string hostField;
        
        private string proxyField;
        
        private string dirHostField;
        
        private int dirLdapPortField;
        
        private ContentSigner pivContentSignerField;
        
        private ManagedCaCredentialConfig scepRaField;
        
        private bool publishCRLAfterRevocationField;
        
        private int revocationCacheTimeoutField;
        
        private string certificateIssuanceCallbackField;
        
        private ManagedCaType typeField;
        
        private ManagedCaEntrustSpecificInfo entrustSpecificInfoField;
        
        private ManagedCaMicrosoftSpecificInfo microsoftSpecificInfoField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A name for the managed CA (a friendly name, can be different than the 
    ///   CA DN). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The host the CA is running on.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If set, the proxy used to communicate with the CA.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Proxy {
            get {
                return this.proxyField;
            }
            set {
                this.proxyField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The host the Directory used by the CA is running on.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DirHost {
            get {
                return this.dirHostField;
            }
            set {
                this.dirHostField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The port of the LDAP service provided by the Directory.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int DirLdapPort {
            get {
                return this.dirLdapPortField;
            }
            set {
                this.dirLdapPortField = value;
            }
        }
        
    /// <datatype>
    ///   ContentSigner
    /// </datatype>
    /// <value>
    ///   If set, the PIV content signer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ContentSigner PivContentSigner {
            get {
                return this.pivContentSignerField;
            }
            set {
                this.pivContentSignerField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaCredentialConfig
    /// </datatype>
    /// <value>
    ///   If set, the SCEP RA.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ManagedCaCredentialConfig ScepRa {
            get {
                return this.scepRaField;
            }
            set {
                this.scepRaField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating of the CA should publish CRLs after IdentityGuard 
    ///   revokes certificates. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool PublishCRLAfterRevocation {
            get {
                return this.publishCRLAfterRevocationField;
            }
            set {
                this.publishCRLAfterRevocationField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   This attribute specifies the revocation cache timeout in minutes. A 
    ///   value of 0 means revocation information is not cached. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int RevocationCacheTimeout {
            get {
                return this.revocationCacheTimeoutField;
            }
            set {
                this.revocationCacheTimeoutField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This optional value defines a URL that is called when a certificate is 
    ///   issued. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CertificateIssuanceCallback {
            get {
                return this.certificateIssuanceCallbackField;
            }
            set {
                this.certificateIssuanceCallbackField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaType
    /// </datatype>
    /// <value>
    ///   Indicates the type of managed CA. If the type is ENTRUST, then the 
    ///   EntrustSpecificInfo component will be non-null; if the type is 
    ///   MICROSOFT, then the MicrosoftSpecificInfo component will be non-null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ManagedCaType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaEntrustSpecificInfo
    /// </datatype>
    /// <value>
    ///   If set, indicates that this information is for an Entrust CA and 
    ///   contains the Entrust specific information. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ManagedCaEntrustSpecificInfo EntrustSpecificInfo {
            get {
                return this.entrustSpecificInfoField;
            }
            set {
                this.entrustSpecificInfoField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaMicrosoftSpecificInfo
    /// </datatype>
    /// <value>
    ///   If set, indicates that this information is for a Microsoft CA and 
    ///   contains the Microsoft specific information. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ManagedCaMicrosoftSpecificInfo MicrosoftSpecificInfo {
            get {
                return this.microsoftSpecificInfoField;
            }
            set {
                this.microsoftSpecificInfoField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a content signer.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ContentSigner {
        
        private ManagedCaCredentialConfig credentialConfigField;
        
        private System.Nullable<SignatureAlg> signingAlgField;
        
    /// <datatype>
    ///   ManagedCaCredentialConfig
    /// </datatype>
    /// <value>
    ///   The credential configuration for the content signer in the managed CA. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ManagedCaCredentialConfig credentialConfig {
            get {
                return this.credentialConfigField;
            }
            set {
                this.credentialConfigField = value;
            }
        }
        
    /// <datatype>
    ///   SignatureAlg
    /// </datatype>
    /// <value>
    ///   The signature algorithm the content signer will use.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SignatureAlg> SigningAlg {
            get {
                return this.signingAlgField;
            }
            set {
                this.signingAlgField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a credential issued/used by a managed CA; 
    ///   can be either a software-based or hardware-based managed CA credential 
    ///   configuration. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaCredentialConfig {
        
        private System.Nullable<ManagedCaCredentialConfigType> credentialConfigTypeField;
        
        private ManagedCaCredentialConfigSoftwareBased softwareBasedCredentialConfigField;
        
        private ManagedCaCredentialConfigHardwareBased hardwareBasedCredentialConfigField;
        
        private string userDnField;
        
    /// <datatype>
    ///   ManagedCaCredentialConfigType
    /// </datatype>
    /// <value>
    ///   Indicates the type of managed CA credential configuration. If the type 
    ///   is SOFTWARE_BASED, then the SoftwareBasedCredentialConfig component 
    ///   will be non-null; if the type is HARDWARD_BASED, then the 
    ///   HardwareBasedCredentialConfig component will be non-null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ManagedCaCredentialConfigType> CredentialConfigType {
            get {
                return this.credentialConfigTypeField;
            }
            set {
                this.credentialConfigTypeField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaCredentialConfigSoftwareBased
    /// </datatype>
    /// <value>
    ///   If set, indicates that this credential configuration is for a 
    ///   software-based credential. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ManagedCaCredentialConfigSoftwareBased SoftwareBasedCredentialConfig {
            get {
                return this.softwareBasedCredentialConfigField;
            }
            set {
                this.softwareBasedCredentialConfigField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaCredentialConfigHardwareBased
    /// </datatype>
    /// <value>
    ///   If set, indicates that this credential configuration is for a 
    ///   hardware-based credential. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ManagedCaCredentialConfigHardwareBased HardwareBasedCredentialConfig {
            get {
                return this.hardwareBasedCredentialConfigField;
            }
            set {
                this.hardwareBasedCredentialConfigField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The distinguished name (DN) of the user from the credential. This 
    ///   value is extracted from the security store during the create and set 
    ///   operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string UserDn {
            get {
                return this.userDnField;
            }
            set {
                this.userDnField = value;
            }
        }
    }
    
    /// <summary>
    ///   Identifies a Managed CA credential configuration type.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum ManagedCaCredentialConfigType {
        
    /// <value>
    ///   A software-based managed CA credential configuration.
    /// </value>
        SOFTWARE_BASED,
        
    /// <value>
    ///   A hardware-based managed CA credential configuration.
    /// </value>
        HARDWARE_BASED,
    }
    
    /// <summary>
    ///   Defines information specific to a software-based managed CA credential 
    ///   configuration. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaCredentialConfigSoftwareBased {
        
        private byte[] securityStoreField;
        
        private string passwordField;
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The security store.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] SecurityStore {
            get {
                return this.securityStoreField;
            }
            set {
                this.securityStoreField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The password to the security store.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information specific to a hardware-based managed CA credential 
    ///   configuration. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaCredentialConfigHardwareBased {
        
        private string p11LibraryField;
        
        private System.Nullable<long> slotField;
        
        private string pINField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The PKCS#11 library used for accessing the credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string P11Library {
            get {
                return this.p11LibraryField;
            }
            set {
                this.p11LibraryField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The slot on the PKCS#11 device where the credential is stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> Slot {
            get {
                return this.slotField;
            }
            set {
                this.slotField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The PIN required for accessing the  credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PIN {
            get {
                return this.pINField;
            }
            set {
                this.pINField = value;
            }
        }
    }
    
    /// <summary>
    ///   Identifies a Managed CA type..
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum ManagedCaType {
        
    /// <value>
    ///   An Entrust Managed CA.
    /// </value>
        ENTRUST,
        
    /// <value>
    ///   A Microsoft Managed CA.
    /// </value>
        MICROSOFT,
    }
    
    /// <summary>
    ///   Defines information specific to an Entrust managed CA.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaEntrustSpecificInfo {
        
        private int pkixCmpPortField;
        
        private int xapPortField;
        
        private ManagedCaCredentialConfig xapAdminField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The port for the PKIX-CMP service provided by the CA.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int PkixCmpPort {
            get {
                return this.pkixCmpPortField;
            }
            set {
                this.pkixCmpPortField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The port for the XAP service provided by the CA.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int XapPort {
            get {
                return this.xapPortField;
            }
            set {
                this.xapPortField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaCredentialConfig
    /// </datatype>
    /// <value>
    ///   The XAP administrator.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ManagedCaCredentialConfig XapAdmin {
            get {
                return this.xapAdminField;
            }
            set {
                this.xapAdminField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information specific to a Microsoft managed CA.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaMicrosoftSpecificInfo {
        
        private string caCommonNameField;
        
        private ManagedCaCredentialConfig enrollmentAgentField;
        
        private ManagedCaCredentialConfig keyRecoveryAgentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The common name of the CA (the value of the CN= component from the CA 
    ///   DN). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CaCommonName {
            get {
                return this.caCommonNameField;
            }
            set {
                this.caCommonNameField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaCredentialConfig
    /// </datatype>
    /// <value>
    ///   If set, the Enrollment Agent; required for on-behalf-of request 
    ///   support. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ManagedCaCredentialConfig EnrollmentAgent {
            get {
                return this.enrollmentAgentField;
            }
            set {
                this.enrollmentAgentField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaCredentialConfig
    /// </datatype>
    /// <value>
    ///   If set, the Key Recovery Agent; required for key archival/backup 
    ///   support. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ManagedCaCredentialConfig KeyRecoveryAgent {
            get {
                return this.keyRecoveryAgentField;
            }
            set {
                this.keyRecoveryAgentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   managedCaSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaSetCallParms {
        
        private string nameField;
        
        private ManagedCaParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the managed CA to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaParms
    /// </datatype>
    /// <value>
    ///   Parameters associated with the managed CA.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ManagedCaParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters that can be set when creating or modifying a 
    ///   managed CA; can be either an Entrust managed CA or a Microsoft managed 
    ///   CA. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaParms {
        
        private string nameField;
        
        private string hostField;
        
        private string proxyField;
        
        private string dirHostField;
        
        private System.Nullable<int> dirLdapPortField;
        
        private ContentSigner pivContentSignerField;
        
        private System.Nullable<bool> deletePivContentSignerField;
        
        private ManagedCaCredentialConfig scepRaField;
        
        private System.Nullable<bool> deleteScepRaField;
        
        private System.Nullable<bool> publishCRLAfterRevocationField;
        
        private System.Nullable<int> revocationCacheTimeoutField;
        
        private string certificateIssuanceCallbackField;
        
        private ManagedCaEntrustSpecificParms entrustSpecificParamsField;
        
        private ManagedCaMicrosoftSpecificParms microsoftSpecificParamsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A name for the managed CA (a friendly name, can be different than the 
    ///   CA DN). Ignored on 'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The host the CA is running on. Mandatory on 'create'; optional on 
    ///   'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The proxy used to communicate with the CA. Optional on 'create'; 
    ///   optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Proxy {
            get {
                return this.proxyField;
            }
            set {
                this.proxyField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The host the Directory used by the CA is running on. Mandatory on 
    ///   'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DirHost {
            get {
                return this.dirHostField;
            }
            set {
                this.dirHostField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The port of the LDAP service provided by the Directory. Mandatory on 
    ///   'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> DirLdapPort {
            get {
                return this.dirLdapPortField;
            }
            set {
                this.dirLdapPortField = value;
            }
        }
        
    /// <datatype>
    ///   ContentSigner
    /// </datatype>
    /// <value>
    ///   The PIV content signer. Optional on 'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ContentSigner PivContentSigner {
            get {
                return this.pivContentSignerField;
            }
            set {
                this.pivContentSignerField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set, indicates that the PIV content signer should be deleted. 
    ///   Ignored on 'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> DeletePivContentSigner {
            get {
                return this.deletePivContentSignerField;
            }
            set {
                this.deletePivContentSignerField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaCredentialConfig
    /// </datatype>
    /// <value>
    ///   The SCEP RA. Optional on 'create'; optional on 'set'.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ManagedCaCredentialConfig ScepRa {
            get {
                return this.scepRaField;
            }
            set {
                this.scepRaField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set, indicates that the SCEP RA should be deleted. Ignored on 
    ///   'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> DeleteScepRa {
            get {
                return this.deleteScepRaField;
            }
            set {
                this.deleteScepRaField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating of the CA should publish CRLs after IdentityGuard 
    ///   revokes certificates. Mandatory on 'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> PublishCRLAfterRevocation {
            get {
                return this.publishCRLAfterRevocationField;
            }
            set {
                this.publishCRLAfterRevocationField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   This attribute specifies the revocation cache timeout in minutes. A 
    ///   value of 0 means revocation information is not cached. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> RevocationCacheTimeout {
            get {
                return this.revocationCacheTimeoutField;
            }
            set {
                this.revocationCacheTimeoutField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified this value defines a URL that is called when a 
    ///   certificate is issued. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CertificateIssuanceCallback {
            get {
                return this.certificateIssuanceCallbackField;
            }
            set {
                this.certificateIssuanceCallbackField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaEntrustSpecificParms
    /// </datatype>
    /// <value>
    ///   If set, indicates that these parameters are for a Entrust CA and 
    ///   contains the Entrust specific parameters. Conditionally optional on 
    ///   'create' (mandatory when MicrosoftSpecificParams is missing); optional on 
    ///   'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ManagedCaEntrustSpecificParms EntrustSpecificParams {
            get {
                return this.entrustSpecificParamsField;
            }
            set {
                this.entrustSpecificParamsField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaMicrosoftSpecificParms
    /// </datatype>
    /// <value>
    ///   If set, indicates that these parameters are for a Microsoft CA and 
    ///   contains the Microsoft specific parameters. Conditionally optional on 
    ///   'create' (mandatory when EntrustSpecificParams is missing); optional on 
    ///   'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ManagedCaMicrosoftSpecificParms MicrosoftSpecificParams {
            get {
                return this.microsoftSpecificParamsField;
            }
            set {
                this.microsoftSpecificParamsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the Entrust specific parameters that can be set when creating 
    ///   or modifying an Entrust managed CA. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaEntrustSpecificParms {
        
        private System.Nullable<int> pkixCmpPortField;
        
        private System.Nullable<int> xapPortField;
        
        private ManagedCaCredentialConfig xapAdminField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The port for the PKIX-CMP service provided by the CA. Mandatory on 
    ///   'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> PkixCmpPort {
            get {
                return this.pkixCmpPortField;
            }
            set {
                this.pkixCmpPortField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The port for the XAP service provided by the CA. Mandatory on 
    ///   'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> XapPort {
            get {
                return this.xapPortField;
            }
            set {
                this.xapPortField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaCredentialConfig
    /// </datatype>
    /// <value>
    ///   The XAP administrator. Mandatory on 'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ManagedCaCredentialConfig XapAdmin {
            get {
                return this.xapAdminField;
            }
            set {
                this.xapAdminField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the Microsoft specific parameters that can be set when 
    ///   creating or modifying a Microsoft managed CA. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaMicrosoftSpecificParms {
        
        private string caCommonNameField;
        
        private ManagedCaCredentialConfig enrollmentAgentField;
        
        private System.Nullable<bool> deleteEnrollmentAgentField;
        
        private ManagedCaCredentialConfig keyRecoveryAgentField;
        
        private System.Nullable<bool> deleteKeyRecoveryAgentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The common name of the CA (the value of the CN= component from the CA 
    ///   DN). Mandatory on 'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CaCommonName {
            get {
                return this.caCommonNameField;
            }
            set {
                this.caCommonNameField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaCredentialConfig
    /// </datatype>
    /// <value>
    ///   The Enrollment Agent; required for key archival/backup support. 
    ///   Optional on 'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ManagedCaCredentialConfig EnrollmentAgent {
            get {
                return this.enrollmentAgentField;
            }
            set {
                this.enrollmentAgentField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set, indicates that the Enrollment Agent should be deleted. Ignored 
    ///   on 'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> DeleteEnrollmentAgent {
            get {
                return this.deleteEnrollmentAgentField;
            }
            set {
                this.deleteEnrollmentAgentField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaCredentialConfig
    /// </datatype>
    /// <value>
    ///   The Key Recovery Agent; required for key archival/backup support. 
    ///   Optional on 'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ManagedCaCredentialConfig KeyRecoveryAgent {
            get {
                return this.keyRecoveryAgentField;
            }
            set {
                this.keyRecoveryAgentField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set, indicates that the Key Recovery Agent should be deleted. 
    ///   Ignored on 'create'; optional on 'set'. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> DeleteKeyRecoveryAgent {
            get {
                return this.deleteKeyRecoveryAgentField;
            }
            set {
                this.deleteKeyRecoveryAgentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   managedCaGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the managed CA to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   managedCaDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaDeleteCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the managed CA to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   managedCaCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaCreateCallParms {
        
        private string nameField;
        
        private ManagedCaParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A name of the managed CA to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaParms
    /// </datatype>
    /// <value>
    ///   Parameters associated with the managed CA.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ManagedCaParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   The data returned from a userFederationList operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserFederationListResult {
        
        private UserFederationInfo[] federationsField;
        
        private string nextUserField;
        
    /// <datatype>
    ///   UserFederationInfo[]
    /// </datatype>
    /// <value>
    ///   The list of federations.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserFederationInfo[] federations {
            get {
                return this.federationsField;
            }
            set {
                this.federationsField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The next user number. If set to a non-zero value, indicates that this 
    ///   result only includes a subset of the results, and additional user 
    ///   federations have not yet been returned. This value can be included in 
    ///   the filter for a further search to continue the search at the next 
    ///   user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string nextUser {
            get {
                return this.nextUserField;
            }
            set {
                this.nextUserField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about a user federation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserFederationInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private string typeField;
        
        private string partnerIDField;
        
        private string originatorFederationNameField;
        
        private string receiverFederationNameField;
        
        private bool originatorField;
        
        private string commentField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID that owns the federation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name of the user ID that owns the federation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user ID that owns the federation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The type of the federation. For example, PERSISTENT or TRANSIENT. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The partner ID of the federation. For example the SAML partner entity 
    ///   ID. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PartnerID {
            get {
                return this.partnerIDField;
            }
            set {
                this.partnerIDField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The originator federation name of the federation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OriginatorFederationName {
            get {
                return this.originatorFederationNameField;
            }
            set {
                this.originatorFederationNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The receiver federation name of the federation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ReceiverFederationName {
            get {
                return this.receiverFederationNameField;
            }
            set {
                this.receiverFederationNameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this server is the originator of the federation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Originator {
            get {
                return this.originatorField;
            }
            set {
                this.originatorField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A comment associated with this federation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userFederationList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserFederationListCallParms {
        
        private UserFilter filterField;
        
    /// <datatype>
    ///   UserFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which federations are to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the filter to limit which users, cards, tokens or certificates 
    ///   are to be returned from the userList, userCardList, userTokenList or 
    ///   userCertificateList operations. To match the filter, a user, card, 
    ///   token or certificate must match all of the criteria specified. 
    ///   <p>
    ///   Note that it is possible to construct filters that cannot match any 
    ///   users, cards, tokens or certificates, for example by setting one of the 
    ///   "start date" fields to be after the corresponding "end date" field. 
    ///   Such invalid filters will return an empty results list, and do not 
    ///   result in a fault. 
    ///   </p>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserFilter {
        
        private string useridField;
        
        private string aliasField;
        
        private string aliasOrUseridField;
        
        private string fullNameField;
        
        private string[] localeField;
        
        private string[] groupsField;
        
        private string serialNumberField;
        
        private System.Nullable<System.DateTime> createStartDateField;
        
        private System.Nullable<System.DateTime> createEndDateField;
        
        private System.Nullable<System.DateTime> expireStartDateField;
        
        private System.Nullable<System.DateTime> expireEndDateField;
        
        private State[] statesField;
        
        private State[] absentCardStatesField;
        
        private UserState[] userStatesField;
        
        private System.Nullable<int> minChallengeCountField;
        
        private System.Nullable<int> maxChallengeCountField;
        
        private System.Nullable<int> minLeastUsedCellUsageCountField;
        
        private System.Nullable<int> maxLeastUsedCellUsageCountField;
        
        private CardUsageThresholdIndicator[] cardUsageThresholdIndicatorField;
        
        private System.Nullable<bool> hasPINField;
        
        private System.Nullable<int> minNumTempPINUsesField;
        
        private System.Nullable<int> maxNumTempPINUsesField;
        
        private System.Nullable<System.DateTime> tempPINExpireStartDateField;
        
        private System.Nullable<System.DateTime> tempPINExpireEndDateField;
        
        private System.Nullable<bool> hasPVNField;
        
        private System.Nullable<bool> hasPasswordField;
        
        private System.Nullable<bool> pvnChangeRequiredField;
        
        private System.Nullable<System.DateTime> pvnLastChangeStartDateField;
        
        private System.Nullable<System.DateTime> pvnLastChangeEndDateField;
        
        private System.Nullable<bool> passwordChangeRequiredField;
        
        private System.Nullable<System.DateTime> passwordExpireStartDateField;
        
        private System.Nullable<System.DateTime> passwordExpireEndDateField;
        
        private System.Nullable<System.DateTime> passwordLastChangeStartDateField;
        
        private System.Nullable<System.DateTime> passwordLastChangeEndDateField;
        
        private System.Nullable<System.DateTime> activationExpireStartDateField;
        
        private System.Nullable<System.DateTime> activationExpireEndDateField;
        
        private System.Nullable<ActivationCodeFilter> activationExpireCodeField;
        
        private System.Nullable<bool> otpAllowedField;
        
        private AttributeState[] otpDeliveryEnabledField;
        
        private System.Nullable<int> minNumOTPsField;
        
        private System.Nullable<int> maxNumOTPsField;
        
        private System.Nullable<System.DateTime> oTPExpiryStartDateField;
        
        private System.Nullable<System.DateTime> oTPExpiryEndDateField;
        
        private System.Nullable<bool> hasContactInfoField;
        
        private System.Nullable<int> minUsableContactInfoField;
        
        private System.Nullable<int> maxUsableContactInfoField;
        
        private System.Nullable<int> minNumLocationsField;
        
        private System.Nullable<int> maxNumLocationsField;
        
        private System.Nullable<bool> lockedField;
        
        private string tokenVendorIdField;
        
        private string tokenSerialNumberField;
        
        private System.Nullable<System.DateTime> tokenLoadStartDateField;
        
        private System.Nullable<System.DateTime> tokenLoadEndDateField;
        
        private System.Nullable<System.DateTime> tokenLastUsedStartDateField;
        
        private System.Nullable<System.DateTime> tokenLastUsedEndDateField;
        
        private State[] tokenStatesField;
        
        private State[] absentTokenStatesField;
        
        private string certificateIssuerDNField;
        
        private string certificateSubjectDNField;
        
        private string certificateSerialNumberField;
        
        private System.Nullable<System.DateTime> certificateIssueStartDateField;
        
        private System.Nullable<System.DateTime> certificateIssueEndDateField;
        
        private System.Nullable<System.DateTime> certificateExpiryStartDateField;
        
        private System.Nullable<System.DateTime> certificateExpiryEndDateField;
        
        private System.Nullable<System.DateTime> certificateLastUsedStartDateField;
        
        private System.Nullable<System.DateTime> certificateLastUsedEndDateField;
        
        private System.Nullable<System.DateTime> certificateAssignStartDateField;
        
        private System.Nullable<System.DateTime> certificateAssignEndDateField;
        
        private CertificateState[] certificateStatesField;
        
        private System.Nullable<bool> certificateSelfSignedField;
        
        private System.Nullable<bool> certificateCANotRegisteredField;
        
        private string[] certificateCAsField;
        
        private CertificateState[] absentCertificateStatesField;
        
        private string smartCredentialIDField;
        
        private string[] smartCredentialDefinitionsField;
        
        private string smartCredentialSerialNumberField;
        
        private string smartCredentialCardUIDField;
        
        private string smartCredentialCardTypeField;
        
        private SmartCredentialState[] smartCredentialStatesField;
        
        private SmartCredentialState[] absentSmartCredentialStatesField;
        
        private SmartCredentialIssueState[] smartCredentialIssueStatesField;
        
        private SmartCredentialIssueState[] absentSmartCredentialIssueStatesField;
        
        private System.Nullable<bool> smartCredentialSealedField;
        
        private System.Nullable<bool> smartCredentialApprovedField;
        
        private System.Nullable<bool> smartCredentialValidField;
        
        private System.Nullable<System.DateTime> smartCredentialCreateStartDateField;
        
        private System.Nullable<System.DateTime> smartCredentialCreateEndDateField;
        
        private System.Nullable<System.DateTime> smartCredentialExpiryStartDateField;
        
        private System.Nullable<System.DateTime> smartCredentialExpiryEndDateField;
        
        private System.Nullable<System.DateTime> smartCredentialIssueStartDateField;
        
        private System.Nullable<System.DateTime> smartCredentialIssueEndDateField;
        
        private System.Nullable<bool> smartCredentialSupportsUnblockField;
        
        private SmartCredentialVariableFilter[] smartCredentialVariableFiltersField;
        
        private string digitalIdDNField;
        
        private string[] digitalIdManagedCAsField;
        
        private string[] digitalIdConfigsField;
        
        private string digitalIdClientTypeField;
        
        private System.Nullable<System.DateTime> digitalIdCreateRecoverStartDateField;
        
        private System.Nullable<System.DateTime> digitalIdCreateRecoverEndDateField;
        
        private System.Nullable<System.DateTime> digitalIdExpiryStartDateField;
        
        private System.Nullable<System.DateTime> digitalIdExpiryEndDateField;
        
        private System.Nullable<int> minNumQaField;
        
        private System.Nullable<int> maxNumQaField;
        
        private System.Nullable<int> minNumMachineSecretsField;
        
        private System.Nullable<int> maxNumMachineSecretsField;
        
        private System.Nullable<bool> hasAuthenticationSecretsField;
        
        private System.Nullable<bool> hasRoleField;
        
        private string[] rolesField;
        
        private System.Nullable<System.DateTime> lastAuthStartDateField;
        
        private System.Nullable<System.DateTime> lastAuthEndDateField;
        
        private System.Nullable<bool> lastAuthNeverField;
        
        private AuthenticationType[] lastAuthTypesField;
        
        private System.Nullable<System.DateTime> lastFailedAuthStartDateField;
        
        private System.Nullable<System.DateTime> lastFailedAuthEndDateField;
        
        private System.Nullable<bool> lastFailedAuthNeverField;
        
        private AuthenticationType[] lastFailedAuthTypesField;
        
        private System.Nullable<bool> disabledInRepositoryField;
        
        private string[] federationTypesField;
        
        private string federationPartnerIDField;
        
        private System.Nullable<bool> federationOriginatorField;
        
        private System.Nullable<bool> invalidUsersField;
        
        private System.Nullable<int> maxReturnField;
        
        private string nextUserField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns only users, cards, certificates or tokens whose 
    ///   user name matches this value. 
    ///   The '*' character can be included for wildcard matching.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns only users, cards, certificates or tokens who 
    ///   have an alias matching this value. 
    ///   The '*' character can be included for wildcard matching.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns only users, cards, certificates or tokens whose 
    ///   user name matches this value, or who have an alias matching this 
    ///   value. 
    ///   The '*' character can be included for wildcard matching.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string aliasOrUserid {
            get {
                return this.aliasOrUseridField;
            }
            set {
                this.aliasOrUseridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns only users, cards, certificates or tokens who 
    ///   have a full name matching this value. 
    ///   The '*' character can be included for wildcard matching.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, returns only users, cards, certificates or tokens who 
    ///   have a locale matching on of the specified values. A value that is the 
    ///   empty string will match users who don't have a locale set. 
    ///   The '*' character can be included for wildcard matching.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, provides a list of group names and returns only users, 
    ///   cards, certificates or tokens whose user is in one of the specified 
    ///   groups 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns only cards with a serial number matching this 
    ///   value, or users who have a card with a serial number matching this 
    ///   value. The '*' character can be included for wildcard matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only cards or users who have a card whose 
    ///   creation date is after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> createStartDate {
            get {
                return this.createStartDateField;
            }
            set {
                this.createStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only cards or users who have a card whose 
    ///   creation date is before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> createEndDate {
            get {
                return this.createEndDateField;
            }
            set {
                this.createEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only cards or users who have a card whose expiry 
    ///   date is after the given date. This will include cards that don't 
    ///   have an expiry date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> expireStartDate {
            get {
                return this.expireStartDateField;
            }
            set {
                this.expireStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only cards or users who have a card whose expiry 
    ///   date is before the given date. This will not include cards that 
    ///   don't have an expiry date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> expireEndDate {
            get {
                return this.expireEndDateField;
            }
            set {
                this.expireEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   State[]
    /// </datatype>
    /// <value>
    ///   If specified, returns only cards or users who have a card whose state 
    ///   matches one of the given values. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public State[] states {
            get {
                return this.statesField;
            }
            set {
                this.statesField = value;
            }
        }
        
    /// <datatype>
    ///   State[]
    /// </datatype>
    /// <value>
    ///   If set, only cards not in any of these states, or users who have no 
    ///   cards with any of the states in this list will be returned. For 
    ///   example, if this list includes both CURRENT and PENDING in a call to 
    ///   userList, only users with no cards, or users whose only cards are in the 
    ///   HOLD_PENDING, HOLD or CANCELED states will be returned. No users with 
    ///   CURRENT or PENDING cards will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public State[] absentCardStates {
            get {
                return this.absentCardStatesField;
            }
            set {
                this.absentCardStatesField = value;
            }
        }
        
    /// <datatype>
    ///   UserState[]
    /// </datatype>
    /// <value>
    ///   If specified, returns users who have one of the indicated states. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserState[] userStates {
            get {
                return this.userStatesField;
            }
            set {
                this.userStatesField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If specified, returns only cards or users who have a card with a 
    ///   challenge count no less than this value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> MinChallengeCount {
            get {
                return this.minChallengeCountField;
            }
            set {
                this.minChallengeCountField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If specified, returns only cards or users who have a card with a 
    ///   challenge count no greater than this value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> MaxChallengeCount {
            get {
                return this.maxChallengeCountField;
            }
            set {
                this.maxChallengeCountField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If specified, returns only cards or users who have a card with a least 
    ///   used cell usage count no less than this value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> MinLeastUsedCellUsageCount {
            get {
                return this.minLeastUsedCellUsageCountField;
            }
            set {
                this.minLeastUsedCellUsageCountField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If specified, returns only cards or users who have a card with a least 
    ///   used cell usage count no greater than this value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> MaxLeastUsedCellUsageCount {
            get {
                return this.maxLeastUsedCellUsageCountField;
            }
            set {
                this.maxLeastUsedCellUsageCountField = value;
            }
        }
        
    /// <datatype>
    ///   CardUsageThresholdIndicator[]
    /// </datatype>
    /// <value>
    ///   If specified, returns only cards or users who have a card whose usage 
    ///   threshold indicator matches one of the given values. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CardUsageThresholdIndicator[] CardUsageThresholdIndicator {
            get {
                return this.cardUsageThresholdIndicatorField;
            }
            set {
                this.cardUsageThresholdIndicatorField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, returns only users with a temporary PIN, or 
    ///   cards, certificates or tokens whose user has a temporary PIN. 
    ///   If specified as false, returns only users without a temporary PIN, or 
    ///   cards or tokens whose user does not have a temporary PIN. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> hasPIN {
            get {
                return this.hasPINField;
            }
            set {
                this.hasPINField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If set, only users with a temporary PIN with at least this many uses 
    ///   remaining, or cards or tokens whose user has a temporary PIN with at 
    ///   least this many uses remaining will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> minNumTempPINUses {
            get {
                return this.minNumTempPINUsesField;
            }
            set {
                this.minNumTempPINUsesField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If set, only users with a temporary PIN with at most this many uses 
    ///   remaining, or cards or tokens whose user has a temporary PIN with at 
    ///   most this many uses remaining will be returned. 
    ///   Temporary PINs with an unlimited number of uses will not be matched if 
    ///   this value is specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxNumTempPINUses {
            get {
                return this.maxNumTempPINUsesField;
            }
            set {
                this.maxNumTempPINUsesField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If set, only users with a temporary PIN that expires on or after this 
    ///   date, or cards or tokens whose user has a temporary PIN that expires 
    ///   on or after this date will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> tempPINExpireStartDate {
            get {
                return this.tempPINExpireStartDateField;
            }
            set {
                this.tempPINExpireStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If set, only users with a temporary PIN that expires on or before this 
    ///   date, or cards or tokens whose user has a temporary PIN that expires 
    ///   on or before this date will be returned. 
    ///   Temporary PINs that are set to never expire will not be matched if 
    ///   this value is specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> tempPINExpireEndDate {
            get {
                return this.tempPINExpireEndDateField;
            }
            set {
                this.tempPINExpireEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, returns only users with a personal verification 
    ///   number (PVN), or cards or tokens whose user has a PVN. 
    ///   If specified as false, returns only users without a PVN, or cards or 
    ///   tokens whose user does not have a PVN. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> hasPVN {
            get {
                return this.hasPVNField;
            }
            set {
                this.hasPVNField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, returns only users with a password, or cards or 
    ///   tokens whose user has a password. 
    ///   If specified as false, returns only users without a password, or cards 
    ///   or tokens whose user does not have a password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> hasPassword {
            get {
                return this.hasPasswordField;
            }
            set {
                this.hasPasswordField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, returns only users that require a personal 
    ///   verification number (PVN) change, or cards or tokens whose user requires a 
    ///   PVN change. 
    ///   If specified as false, returns only users that do not require a PVN 
    ///   change, or cards or tokens whose user does not require a PVN change. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> pvnChangeRequired {
            get {
                return this.pvnChangeRequiredField;
            }
            set {
                this.pvnChangeRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only users who have a PVN last change date on or 
    ///   after the given date, or cards or tokens whose user has a PVN last 
    ///   change date on or after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> pvnLastChangeStartDate {
            get {
                return this.pvnLastChangeStartDateField;
            }
            set {
                this.pvnLastChangeStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only users who have a PVN last change date on or 
    ///   before the given date, or cards or tokens whose user has a PVN last 
    ///   change date on or before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> pvnLastChangeEndDate {
            get {
                return this.pvnLastChangeEndDateField;
            }
            set {
                this.pvnLastChangeEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, returns only users that require a password 
    ///   change, or cards or tokens whose user requires a password change. 
    ///   If specified as false, returns only users that do not require a 
    ///   password change, or cards or tokens whose user does not require a password 
    ///   change. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> passwordChangeRequired {
            get {
                return this.passwordChangeRequiredField;
            }
            set {
                this.passwordChangeRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only users who have a password expiry date on or 
    ///   after the given date, or cards or tokens whose user has a password 
    ///   expiring on or after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> passwordExpireStartDate {
            get {
                return this.passwordExpireStartDateField;
            }
            set {
                this.passwordExpireStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only users who have a password expiry date on or 
    ///   before the given date, or cards or tokens whose user has a password 
    ///   expiring on or before the given date. 
    ///   Passwords set to never expire will not be matched if this value is 
    ///   set. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> passwordExpireEndDate {
            get {
                return this.passwordExpireEndDateField;
            }
            set {
                this.passwordExpireEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only users who have a password last change date 
    ///   on or after the given date, or cards or tokens whose user last 
    ///   changed their password on or after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> passwordLastChangeStartDate {
            get {
                return this.passwordLastChangeStartDateField;
            }
            set {
                this.passwordLastChangeStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only users who have a password last change date 
    ///   on or before the given date, or cards or tokens whose user last 
    ///   changed their password on or before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> passwordLastChangeEndDate {
            get {
                return this.passwordLastChangeEndDateField;
            }
            set {
                this.passwordLastChangeEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only users who have an activation expiry date on 
    ///   or after the given date, or cards or tokens whose user has an 
    ///   activation expiry date on or after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> activationExpireStartDate {
            get {
                return this.activationExpireStartDateField;
            }
            set {
                this.activationExpireStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only users who have an activation expiry date on 
    ///   or before the given date, or cards or tokens whose user has an 
    ///   activation expiry date on or before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> activationExpireEndDate {
            get {
                return this.activationExpireEndDateField;
            }
            set {
                this.activationExpireEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   ActivationCodeFilter
    /// </datatype>
    /// <value>
    ///   If specified, returns only users whose activation state matches the 
    ///   given state, or cards or tokens whose user has an activation state 
    ///   matching the given state. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ActivationCodeFilter> activationExpireCode {
            get {
                return this.activationExpireCodeField;
            }
            set {
                this.activationExpireCodeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, returns only users that are allowed to use 
    ///   one-time password (OTP), or cards or tokens whose user is allowed to use 
    ///   an OTP. 
    ///   If specified as true, returns only users that are not allowed to use 
    ///   an OTP, or cards or tokens whose user is not allowed to use an OTP. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> otpAllowed {
            get {
                return this.otpAllowedField;
            }
            set {
                this.otpAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   AttributeState[]
    /// </datatype>
    /// <value>
    ///   If specified, returns users whose otpDeliveryEnabled attribute is one 
    ///   of the indicated states, or cards or tokens whose user has an 
    ///   otpDeliveryEnabled attribute matching one of the indicated states. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AttributeState[] otpDeliveryEnabled {
            get {
                return this.otpDeliveryEnabledField;
            }
            set {
                this.otpDeliveryEnabledField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If set, only users with at least this many OTPs, or cards or tokens or 
    ///   certificates whose user has at least this many OTPs, will be 
    ///   returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> minNumOTPs {
            get {
                return this.minNumOTPsField;
            }
            set {
                this.minNumOTPsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If set, only users with at most this many OTPs, or cards or tokens or 
    ///   certificates whose user has at most this many OTPs, will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxNumOTPs {
            get {
                return this.maxNumOTPsField;
            }
            set {
                this.maxNumOTPsField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only users whose OTPs have an expiry date on or 
    ///   after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> OTPExpiryStartDate {
            get {
                return this.oTPExpiryStartDateField;
            }
            set {
                this.oTPExpiryStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only users whose OTPs expire on or before the 
    ///   given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> OTPExpiryEndDate {
            get {
                return this.oTPExpiryEndDateField;
            }
            set {
                this.oTPExpiryEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, returns only users who have contact information, 
    ///   or cards or tokens whose user has contact information. If specified 
    ///   as false, returns only users who do not have contact information, or 
    ///   cards or tokens whose user does not have contact information. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> hasContactInfo {
            get {
                return this.hasContactInfoField;
            }
            set {
                this.hasContactInfoField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If set, returns only users with at least this many contact information 
    ///   that refer to a delivery mechanism other than the special "NONE" 
    ///   mechanism, or cards or tokens whose user matches this criteria. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> minUsableContactInfo {
            get {
                return this.minUsableContactInfoField;
            }
            set {
                this.minUsableContactInfoField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If set, returns only users with at most this many contact information 
    ///   that refer to a delivery mechanism other than the special "NONE" 
    ///   mechanism, or cards or tokens whose user matches this criteria. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxUsableContactInfo {
            get {
                return this.maxUsableContactInfoField;
            }
            set {
                this.maxUsableContactInfoField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If set, only users with at least this many locations in their location 
    ///   history, or cards or tokens whose user has at least this many 
    ///   locations in their location history, will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> minNumLocations {
            get {
                return this.minNumLocationsField;
            }
            set {
                this.minNumLocationsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If set, only users with at most this many locations in their location 
    ///   history, or cards or tokens whose user has at most this many 
    ///   locations in their location history, will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxNumLocations {
            get {
                return this.maxNumLocationsField;
            }
            set {
                this.maxNumLocationsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, returns only users who are locked out, or cards 
    ///   or tokens whose user is locked out. 
    ///   If specified as false, returns only users who are not locked out, or 
    ///   cards or tokens whose user is not locked out. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> locked {
            get {
                return this.lockedField;
            }
            set {
                this.lockedField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns only tokens or users who have a token whose name 
    ///   or id matches the given value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string tokenVendorId {
            get {
                return this.tokenVendorIdField;
            }
            set {
                this.tokenVendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns only tokens with a serial number matching this 
    ///   value, or users who have a token with a serial number matching this 
    ///   value. The '*' character can be included for wildcard matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string tokenSerialNumber {
            get {
                return this.tokenSerialNumberField;
            }
            set {
                this.tokenSerialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only tokens or users who have a token whose load 
    ///   date is after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> tokenLoadStartDate {
            get {
                return this.tokenLoadStartDateField;
            }
            set {
                this.tokenLoadStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only tokens or users who have a token whose load 
    ///   date is before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> tokenLoadEndDate {
            get {
                return this.tokenLoadEndDateField;
            }
            set {
                this.tokenLoadEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only tokens or users who have a token whose last 
    ///   used date is after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> tokenLastUsedStartDate {
            get {
                return this.tokenLastUsedStartDateField;
            }
            set {
                this.tokenLastUsedStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only tokens or users who have a token whose last 
    ///   used date is before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> tokenLastUsedEndDate {
            get {
                return this.tokenLastUsedEndDateField;
            }
            set {
                this.tokenLastUsedEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   State[]
    /// </datatype>
    /// <value>
    ///   If specified, returns only tokens or users who have a token whose 
    ///   state matches one of the given values. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public State[] tokenStates {
            get {
                return this.tokenStatesField;
            }
            set {
                this.tokenStatesField = value;
            }
        }
        
    /// <datatype>
    ///   State[]
    /// </datatype>
    /// <value>
    ///   If set, only tokens not in any of these states, or users who have no 
    ///   tokens with any of the states in this list will be returned. For 
    ///   example, if this list includes both CURRENT and PENDING in a call to 
    ///   userList, only users with no tokens, or users whose only tokens are in the 
    ///   HOLD_PENDING, HOLD or CANCELED states will be returned. No users 
    ///   with CURRENT or PENDING tokens will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public State[] absentTokenStates {
            get {
                return this.absentTokenStatesField;
            }
            set {
                this.absentTokenStatesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns only certificates or users who have a 
    ///   certificate whose issuer DN matches the given value. The '*' character can be 
    ///   included for wildcard matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string certificateIssuerDN {
            get {
                return this.certificateIssuerDNField;
            }
            set {
                this.certificateIssuerDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns only certificates or users who have a 
    ///   certificate whose subject DN matches the given value. The '*' character can be 
    ///   included for wildcard matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string certificateSubjectDN {
            get {
                return this.certificateSubjectDNField;
            }
            set {
                this.certificateSubjectDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns only certificates with a serial number matching 
    ///   this value, or users who have a certificate with a serial number 
    ///   matching this value. The '*' character can be included for wildcard 
    ///   matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string certificateSerialNumber {
            get {
                return this.certificateSerialNumberField;
            }
            set {
                this.certificateSerialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only certificates or users who have a 
    ///   certificate whose issue date is after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> certificateIssueStartDate {
            get {
                return this.certificateIssueStartDateField;
            }
            set {
                this.certificateIssueStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only certificates or users who have a 
    ///   certificate whose issue date is before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> certificateIssueEndDate {
            get {
                return this.certificateIssueEndDateField;
            }
            set {
                this.certificateIssueEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only certificates or users who have a 
    ///   certificate whose expiry date is after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> certificateExpiryStartDate {
            get {
                return this.certificateExpiryStartDateField;
            }
            set {
                this.certificateExpiryStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only certificates or users who have a 
    ///   certificate whose expiry date is before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> certificateExpiryEndDate {
            get {
                return this.certificateExpiryEndDateField;
            }
            set {
                this.certificateExpiryEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only certificates or users who have a 
    ///   certificate whose last used date is after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> certificateLastUsedStartDate {
            get {
                return this.certificateLastUsedStartDateField;
            }
            set {
                this.certificateLastUsedStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only certificates or users who have a 
    ///   certificate whose last used date is before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> certificateLastUsedEndDate {
            get {
                return this.certificateLastUsedEndDateField;
            }
            set {
                this.certificateLastUsedEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only certificates or users who have a 
    ///   certificate whose assign date is after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> certificateAssignStartDate {
            get {
                return this.certificateAssignStartDateField;
            }
            set {
                this.certificateAssignStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only certificates or users who have a 
    ///   certificate whose assign date is before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> certificateAssignEndDate {
            get {
                return this.certificateAssignEndDateField;
            }
            set {
                this.certificateAssignEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   CertificateState[]
    /// </datatype>
    /// <value>
    ///   If specified, returns only certificates or users who have a 
    ///   certificate whose state matches one of the given values. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CertificateState[] certificateStates {
            get {
                return this.certificateStatesField;
            }
            set {
                this.certificateStatesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified, returns certificates that are or are not self signed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> certificateSelfSigned {
            get {
                return this.certificateSelfSignedField;
            }
            set {
                this.certificateSelfSignedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified, returns certificates that were or were not issued by a 
    ///   registered CA. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> certificateCANotRegistered {
            get {
                return this.certificateCANotRegisteredField;
            }
            set {
                this.certificateCANotRegisteredField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, returns certificates that were issued by one of the 
    ///   named registered CAs. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] certificateCAs {
            get {
                return this.certificateCAsField;
            }
            set {
                this.certificateCAsField = value;
            }
        }
        
    /// <datatype>
    ///   CertificateState[]
    /// </datatype>
    /// <value>
    ///   If set, only certificates not in any of these states, or users who 
    ///   have no certificates with any of the states in this list will be 
    ///   returned. 
    ///   For example, if this list includes ACTIVE in a call to userList, only 
    ///   users with no certificates, or users whose only certificates are in 
    ///   the INACTIVE state will be returned. No users with ACTIVE certificates 
    ///   will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CertificateState[] absentCertificateStates {
            get {
                return this.absentCertificateStatesField;
            }
            set {
                this.absentCertificateStatesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns Smart Credentials that have an Id matching the 
    ///   given value. 
    ///   The '*' character can be included for wildcard matching.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SmartCredentialID {
            get {
                return this.smartCredentialIDField;
            }
            set {
                this.smartCredentialIDField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, returns Smart Credentials that have one of the specified 
    ///   Smart Credential Definitions. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] SmartCredentialDefinitions {
            get {
                return this.smartCredentialDefinitionsField;
            }
            set {
                this.smartCredentialDefinitionsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns Smart Credentials that have a serial number that 
    ///   matches the given value. An empty string value will match Smart 
    ///   Credentials that do not have a serial number. 
    ///   The '*' character can be included for wildcard matching.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SmartCredentialSerialNumber {
            get {
                return this.smartCredentialSerialNumberField;
            }
            set {
                this.smartCredentialSerialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns Smart Credentials that have a card UID that 
    ///   matches the given value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SmartCredentialCardUID {
            get {
                return this.smartCredentialCardUIDField;
            }
            set {
                this.smartCredentialCardUIDField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns Smart Credentials that have a card type that 
    ///   matches the given value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SmartCredentialCardType {
            get {
                return this.smartCredentialCardTypeField;
            }
            set {
                this.smartCredentialCardTypeField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialState[]
    /// </datatype>
    /// <value>
    ///   If specified, returns Smart Credentials that have one of the specified 
    ///   Smart Credential states. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialState[] SmartCredentialStates {
            get {
                return this.smartCredentialStatesField;
            }
            set {
                this.smartCredentialStatesField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialState[]
    /// </datatype>
    /// <value>
    ///   If specified, returns Smart Credentials that do not have one of the 
    ///   specified Smart Credential states. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialState[] AbsentSmartCredentialStates {
            get {
                return this.absentSmartCredentialStatesField;
            }
            set {
                this.absentSmartCredentialStatesField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialIssueState[]
    /// </datatype>
    /// <value>
    ///   If specified, returns Smart Credentials that have one of the specified 
    ///   Smart Credential print states. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialIssueState[] SmartCredentialIssueStates {
            get {
                return this.smartCredentialIssueStatesField;
            }
            set {
                this.smartCredentialIssueStatesField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialIssueState[]
    /// </datatype>
    /// <value>
    ///   If specified, returns Smart Credentials that do not have one of the 
    ///   specified Smart Credential print states. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialIssueState[] AbsentSmartCredentialIssueStates {
            get {
                return this.absentSmartCredentialIssueStatesField;
            }
            set {
                this.absentSmartCredentialIssueStatesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified, returns Smart Credentials that are or are not sealed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> SmartCredentialSealed {
            get {
                return this.smartCredentialSealedField;
            }
            set {
                this.smartCredentialSealedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified, returns Smart Credentials that are or are not approved. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> SmartCredentialApproved {
            get {
                return this.smartCredentialApprovedField;
            }
            set {
                this.smartCredentialApprovedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified, returns Smart Credentials that have or have not got 
    ///   enrollment values that have been validated against the type description 
    ///   of their Definition. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> SmartCredentialValid {
            get {
                return this.smartCredentialValidField;
            }
            set {
                this.smartCredentialValidField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only Smart Credentials whose creation date is 
    ///   after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> SmartCredentialCreateStartDate {
            get {
                return this.smartCredentialCreateStartDateField;
            }
            set {
                this.smartCredentialCreateStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only Smart Credentials whose creation date is 
    ///   before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> SmartCredentialCreateEndDate {
            get {
                return this.smartCredentialCreateEndDateField;
            }
            set {
                this.smartCredentialCreateEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only Smart Credentials whose expiry date is 
    ///   after the given date. 
    ///   This filter does not match smart credentials that don't have an expiry 
    ///   date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> SmartCredentialExpiryStartDate {
            get {
                return this.smartCredentialExpiryStartDateField;
            }
            set {
                this.smartCredentialExpiryStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only Smart Credentials whose expiry date is 
    ///   before the given date. 
    ///   This filter does not match smart credentials that don't have an expiry 
    ///   date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> SmartCredentialExpiryEndDate {
            get {
                return this.smartCredentialExpiryEndDateField;
            }
            set {
                this.smartCredentialExpiryEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only Smart Credentials whose issue date is after 
    ///   the given date. 
    ///   This filter does not match smart credentials that don't have an issue 
    ///   date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> SmartCredentialIssueStartDate {
            get {
                return this.smartCredentialIssueStartDateField;
            }
            set {
                this.smartCredentialIssueStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only Smart Credentials whose issue date is 
    ///   before the given date. 
    ///   This filter does not match smart credentials that don't have an issue 
    ///   date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> SmartCredentialIssueEndDate {
            get {
                return this.smartCredentialIssueEndDateField;
            }
            set {
                this.smartCredentialIssueEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified, returns only Smart Credentials that support/don't 
    ///   support unblock. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> SmartCredentialSupportsUnblock {
            get {
                return this.smartCredentialSupportsUnblockField;
            }
            set {
                this.smartCredentialSupportsUnblockField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableFilter[]
    /// </datatype>
    /// <value>
    ///   If specified, returns Smart Credentials that match the given Smart 
    ///   Credential variable filters. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialVariableFilter[] SmartCredentialVariableFilters {
            get {
                return this.smartCredentialVariableFiltersField;
            }
            set {
                this.smartCredentialVariableFiltersField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns the Digital Id that has the specified DN 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DigitalIdDN {
            get {
                return this.digitalIdDNField;
            }
            set {
                this.digitalIdDNField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, returns Digital Ids that have one of the specified 
    ///   Managed CAs. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] DigitalIdManagedCAs {
            get {
                return this.digitalIdManagedCAsField;
            }
            set {
                this.digitalIdManagedCAsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, returns Digital Ids that have one of the specified 
    ///   Digital Id Configs. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] DigitalIdConfigs {
            get {
                return this.digitalIdConfigsField;
            }
            set {
                this.digitalIdConfigsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns only Digital Ids with the given client type. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DigitalIdClientType {
            get {
                return this.digitalIdClientTypeField;
            }
            set {
                this.digitalIdClientTypeField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only Digital Ids whose create/recover date is 
    ///   after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> DigitalIdCreateRecoverStartDate {
            get {
                return this.digitalIdCreateRecoverStartDateField;
            }
            set {
                this.digitalIdCreateRecoverStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only Digital Ids whose create/recover date is 
    ///   before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> DigitalIdCreateRecoverEndDate {
            get {
                return this.digitalIdCreateRecoverEndDateField;
            }
            set {
                this.digitalIdCreateRecoverEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only Digital Ids whose expiry date is after the 
    ///   given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> DigitalIdExpiryStartDate {
            get {
                return this.digitalIdExpiryStartDateField;
            }
            set {
                this.digitalIdExpiryStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only Digital Ids whose expiry date is before the 
    ///   given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> DigitalIdExpiryEndDate {
            get {
                return this.digitalIdExpiryEndDateField;
            }
            set {
                this.digitalIdExpiryEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If set, only users with at least this many question/answer (Q/A) pairs 
    ///   defined, or cards or tokens whose user has at least this many Q/A 
    ///   pairs, will be returned. 
    ///   To find all users with Q/A pairs defined, set this value to 1. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> minNumQa {
            get {
                return this.minNumQaField;
            }
            set {
                this.minNumQaField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If set, only users with at most this many question/answer (Q/A) pairs 
    ///   defined, or cards or tokens whose user has at most this many Q/A 
    ///   pairs, will be returned. 
    ///   To find all users with no Q/A pairs, set this value to 0.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxNumQa {
            get {
                return this.maxNumQaField;
            }
            set {
                this.maxNumQaField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If set, only users with at least this many machine secrets (registered 
    ///   machines), or cards or tokens whose user has at least this many 
    ///   machine secrets, will be returned. To find all users who have machine 
    ///   secrets, or cards or tokens whose user has machine secrets, set this 
    ///   value to 1. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> minNumMachineSecrets {
            get {
                return this.minNumMachineSecretsField;
            }
            set {
                this.minNumMachineSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If set, only users with at most this many machine secrets (registered 
    ///   machines), or cards or tokens whose user has at most this many 
    ///   machine secrets, will be returned. To find all users who do not have any 
    ///   machine secrets, or cards or tokens whose user does not have any 
    ///   machine secrets, set this value to 1. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxNumMachineSecrets {
            get {
                return this.maxNumMachineSecretsField;
            }
            set {
                this.maxNumMachineSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, returns any user who has mutual authentication 
    ///   secrets, or any card or token whose user has mutual authentication 
    ///   secrets. If specified as false, only users who do not have mutual 
    ///   authentication secrets, or cards or tokens whose user does not have any 
    ///   mutual authentication secrets, will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> hasAuthenticationSecrets {
            get {
                return this.hasAuthenticationSecretsField;
            }
            set {
                this.hasAuthenticationSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, returns any user who has a role, or cards or 
    ///   tokens whose user has a role. 
    ///   If specified as false, only users who do not have a role, or cards or 
    ///   tokens whose user does not have a role, will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> hasRole {
            get {
                return this.hasRoleField;
            }
            set {
                this.hasRoleField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, only users who have at least one of the roles in this 
    ///   list, or cards or tokens whose user has at least one of the roles in 
    ///   this list, will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only users whose last successful authentication 
    ///   is after the given date. If the start date is not specified, users 
    ///   who have never had a successful authentication will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> lastAuthStartDate {
            get {
                return this.lastAuthStartDateField;
            }
            set {
                this.lastAuthStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only users whose last successful authentication 
    ///   is before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> lastAuthEndDate {
            get {
                return this.lastAuthEndDateField;
            }
            set {
                this.lastAuthEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, returns only users who have never had a 
    ///   successful authentication. If specified as false, returns only users who have 
    ///   had a successful authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> lastAuthNever {
            get {
                return this.lastAuthNeverField;
            }
            set {
                this.lastAuthNeverField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   If specified, returns only users whose last successful authentication 
    ///   was one of the given types. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] lastAuthTypes {
            get {
                return this.lastAuthTypesField;
            }
            set {
                this.lastAuthTypesField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only users whose last failed authentication is 
    ///   after the given date. If the start date is not specified, users who 
    ///   have never had a failed authentication will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> lastFailedAuthStartDate {
            get {
                return this.lastFailedAuthStartDateField;
            }
            set {
                this.lastFailedAuthStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only users whose last failed authentication is 
    ///   before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> lastFailedAuthEndDate {
            get {
                return this.lastFailedAuthEndDateField;
            }
            set {
                this.lastFailedAuthEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, returns only users who have never had a failed 
    ///   authentication. If specified as false, returns only users who have had 
    ///   a failed authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> lastFailedAuthNever {
            get {
                return this.lastFailedAuthNeverField;
            }
            set {
                this.lastFailedAuthNeverField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   If specified, returns only users whose last failed authentication was 
    ///   one of the given types. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] lastFailedAuthTypes {
            get {
                return this.lastFailedAuthTypesField;
            }
            set {
                this.lastFailedAuthTypesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified, returns only users who are/are not disabled in the 
    ///   repository. 
    ///   This search criteria is not supported in Entrust IdentityGuard 9.1 and 
    ///   will be ignored if specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> disabledInRepository {
            get {
                return this.disabledInRepositoryField;
            }
            set {
                this.disabledInRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   Return user federations whose type matches one of the given value. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] federationTypes {
            get {
                return this.federationTypesField;
            }
            set {
                this.federationTypesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The partner ID of the federation. For example the SAML partner entity 
    ///   ID. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string federationPartnerID {
            get {
                return this.federationPartnerIDField;
            }
            set {
                this.federationPartnerIDField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this server is the originator of the federation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> federationOriginator {
            get {
                return this.federationOriginatorField;
            }
            set {
                this.federationOriginatorField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   An invalid user is a user that doesn't pass data integrity. In the 
    ///   case of LDAP, this is a likely indication that the user has been renamed 
    ///   in the repository without being renamed within Entrust 
    ///   IdentityGuard. If this flag is set to true, only users that pass data integrity 
    ///   will be returned. If this flag is set to false, only users that don't 
    ///   pass data integrity will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> invalidUsers {
            get {
                return this.invalidUsersField;
            }
            set {
                this.invalidUsersField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of users, cards or tokens to return.
    ///   If not specified or the value is 0 or less, it defaults to 100. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxReturn {
            get {
                return this.maxReturnField;
            }
            set {
                this.maxReturnField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The nextUser number. If specified, indicates that searching should 
    ///   start at the given user. This value is used to get the next set of 
    ///   users, cards, or tokens following a previous search. 
    ///   The value to set here is the nextUser value from the previous search 
    ///   results. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string nextUser {
            get {
                return this.nextUserField;
            }
            set {
                this.nextUserField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the possible card and token states.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum State {
        
    /// <value>
    ///   State indicating that the card or token has not yet been used by the 
    ///   user it is assigned to for authentication, but authentication is 
    ///   allowed. 
    ///   Cards or tokens in the PENDING state may have their state changed to 
    ///   CURRENT, HOLD, HOLD_PENDING, or CANCELED by the relevant operations in 
    ///   the admin service. 
    /// </value>
        PENDING,
        
    /// <value>
    ///   State indicating that the card or token is considered to have been 
    ///   used by the user it is assigned to for authentication, and 
    ///   authentication with it is allowed. 
    ///   Cards or tokens in the CURRENT state may have their state changed to 
    ///   HOLD or CANCELED by the relevant operations in the admin service. 
    /// </value>
        CURRENT,
        
    /// <value>
    ///   State indicating that the card or token is considered to have been 
    ///   used by the user it is assigned to for authentication, but 
    ///   authentication with it is not allowed until its state is changed to CURRENT. 
    ///   Cards or tokens in the HOLD state may have their state changed to 
    ///   CURRENT or CANCELED by the relevant operations in the admin service. 
    /// </value>
        HOLD,
        
    /// <value>
    ///   State indicating that the card or token has not been used by the user 
    ///   it is assigned to for authentication, and authentication with it is 
    ///   not allowed until its state is changed to PENDING or CURRENT. 
    ///   Cards or tokens in the HOLD_PENDING state may have their state changed 
    ///   to CURRENT, HOLD, PENDING, or CANCELED by the relevant operations in 
    ///   the admin service. 
    /// </value>
        HOLD_PENDING,
        
    /// <value>
    ///   State indicating that the card or token has been canceled, and can 
    ///   never again be used for authentication. 
    ///   Cards or tokens in the CANCELED state may not have their state changed 
    ///   to any other state. 
    /// </value>
        CANCELED,
        
    /// <value>
    ///   A placeholder in case more states are introduced in future releases. 
    ///   If an application ever encounters this value in a card or token, it 
    ///   should be upgraded to use the most recent version of the admin service. 
    /// </value>
        UNKNOWN,
    }
    
    /// <summary>
    ///   Defines the possible user states.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum UserState {
        
    /// <value>
    ///   The user account is active within the system and is allowed to 
    ///   authenticate. 
    ///   Users in the ACTIVE state can be changed to the SUSPENDED state at any 
    ///   time. 
    /// </value>
        ACTIVE,
        
    /// <value>
    ///   The user's account is suspended, and the user is not allowed to 
    ///   authenticate to the system. 
    ///   Accounts in the SUSPENDED state can be changed to the ACTIVE state at 
    ///   any time. 
    /// </value>
        SUSPENDED,
    }
    
    /// <summary>
    ///   Defines the possible card usage threshold indicator values. The 
    ///   CardUsageThresholdIndicator value indicates whether the card's challenge 
    ///   count or least-used cell usage count has reached either the replacement 
    ///   or warning threshold as defined in policy. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum CardUsageThresholdIndicator {
        
    /// <value>
    ///   Placeholder in case new indicator values are added in future releases. 
    ///   This value should never be used in calls to the admin service, and 
    ///   if it is returned to the application then the application needs to be 
    ///   updated to use the latest version of the admin service. 
    /// </value>
        UNKNOWN,
        
    /// <value>
    ///   Indicates that no usage threshold has been reached.
    /// </value>
        NONE,
        
    /// <value>
    ///   Indicates that the warning threshold for either the number of 
    ///   challenges or the least-used cell count has been reached. Cards with this 
    ///   indicator value can still be used to authenticate, but a new card should 
    ///   be issued to the user. 
    /// </value>
        WARNING,
        
    /// <value>
    ///   Indicates that the replacement threshold for either the number of 
    ///   challenges or the least-used cell count has been reached. Cards with this 
    ///   indicator are automatically put in to the HOLD state when used to 
    ///   authenticate. The user to which the card belongs should be issued a 
    ///   replacement card as soon as possible. 
    /// </value>
        REPLACEMENT,
    }
    
    /// <summary>
    ///   Defines possible Activation states for search queries.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum ActivationCodeFilter {
        
    /// <value>
    ///   State for users who have no activation information set.
    /// </value>
        NOTSET,
        
    /// <value>
    ///   State for users who have successfully activated.
    /// </value>
        ACTIVATED,
        
    /// <value>
    ///   State for users who are expected to go through an activation process 
    ///   but have not yet done so. 
    /// </value>
        NOTACTIVATED,
    }
    
    /// <summary>
    ///   Defines the value of an attribute when the attribute can take on a 
    ///   Boolean value, or can be set to use the relevant value defined in the 
    ///   policy. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum AttributeState {
        
    /// <value>
    ///   The attribute has the Boolean value true.
    /// </value>
        TRUE,
        
    /// <value>
    ///   The attribute has the Boolean value false.
    /// </value>
        FALSE,
        
    /// <value>
    ///   The attribute has been set to use whatever corresponding Boolean value 
    ///   is defined in the policy. 
    /// </value>
        USEPOLICY,
    }
    
    /// <summary>
    ///   Defines the possible certificate states.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum CertificateState {
        
    /// <value>
    ///   The certificate can be used for authentication.
    /// </value>
        ACTIVE,
        
    /// <value>
    ///   The certificate can not be used for authentication.
    /// </value>
        INACTIVE,
    }
    
    /// <summary>
    ///   Defines the possible states for unassigned and user smart credentials. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum SmartCredentialState {
        
    /// <value>
    ///   The state of a user smart credential that has not had an unassigned 
    ///   smart credential assigned to it. 
    /// </value>
        UNASSIGNED,
        
    /// <value>
    ///   The state of an active unassigned or user smart credential. An active 
    ///   unassigned smart credential can be assigned to a user smart 
    ///   credential. Administrative operations like unblock and delivery can be 
    ///   performed on an active user smart credential. 
    ///   The state of a smart credential in the active state can be changed to 
    ///   hold or canceled. 
    /// </value>
        ACTIVE,
        
    /// <value>
    ///   The hold state represents unassigned or user smart credentials that 
    ///   are temporarily unavailable but may be available in the future. 
    ///   For example, a smart credential that has been forgotten at home. 
    ///   An unassigned smart credential in the hold state cannot be assigned to 
    ///   a user smart credential. Administrative operations like unblock and 
    ///   delivery cannot be performed on user smart credentials in the hold 
    ///   state. 
    ///   The state of a smart credential in the hold state can be changed to 
    ///   active or canceled. 
    /// </value>
        HOLD,
        
    /// <value>
    ///   The canceled state represents unassigned or user smart credentials 
    ///   that are permanently unavailable. 
    ///   For example, a smart credential that has been lost or broken. 
    ///   An unassigned smart credential in the canceled state cannot be 
    ///   assigned to a user smart credential. Administrative operations like unblock 
    ///   and delivery cannot be performed on user smart credentials in the 
    ///   canceled state. 
    ///   The state of a smart credential in the canceled state cannot be 
    ///   changed. 
    /// </value>
        CANCELED,
    }
    
    /// <summary>
    ///   Defines the possible issue states for a user smart credential. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum SmartCredentialIssueState {
        
    /// <value>
    ///   The print request is queued at the Print Module.
    /// </value>
        QUEUED,
        
    /// <value>
    ///   A queued print request has started printing.
    /// </value>
        PRINT_START,
        
    /// <value>
    ///   A print request has completed.
    /// </value>
        PRINT_DONE,
        
    /// <value>
    ///   A print request has failed with an error.
    /// </value>
        PRINT_ERROR,
        
    /// <value>
    ///   An encode request has started.
    /// </value>
        ENCODE_START,
        
    /// <value>
    ///   An encode request has completed.
    /// </value>
        ENCODE_DONE,
        
    /// <value>
    ///   An encode request has failed with an error.
    /// </value>
        ENCODE_ERROR,
        
    /// <value>
    ///   A proximity request has started.
    /// </value>
        PROXIMITY_START,
        
    /// <value>
    ///   A proximity request has completed.
    /// </value>
        PROXIMITY_DONE,
        
    /// <value>
    ///   A proximity request has failed with an error.
    /// </value>
        PROXIMITY_ERROR,
    }
    
    /// <summary>
    ///   Defines a filter that can be matched against the name and value of a 
    ///   Smart Credential Variable. 
    ///   The variable filter must always include a name and at least one of the 
    ///   string, boolean, integer or date values. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialVariableFilter {
        
        private string nameField;
        
        private System.Nullable<bool> notField;
        
        private string stringValueField;
        
        private System.Nullable<bool> booleanValueField;
        
        private string intValueField;
        
        private string intValueStartField;
        
        private string intValueEndField;
        
        private System.Nullable<System.DateTime> dateValueField;
        
        private System.Nullable<System.DateTime> dateValueStartField;
        
        private System.Nullable<System.DateTime> dateValueEndField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The variable name to match.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified and true then all of the search criteria are negated. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> not {
            get {
                return this.notField;
            }
            set {
                this.notField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Match this value against string variable values.This value may include 
    ///   wildcards. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string stringValue {
            get {
                return this.stringValueField;
            }
            set {
                this.stringValueField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Match this value against boolean variable values.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> booleanValue {
            get {
                return this.booleanValueField;
            }
            set {
                this.booleanValueField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   Match this value against integer variable values.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string intValue {
            get {
                return this.intValueField;
            }
            set {
                this.intValueField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   Match this value against integer variable values matching all 
    ///   variables that have values greater than or equal to this value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string intValueStart {
            get {
                return this.intValueStartField;
            }
            set {
                this.intValueStartField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   Match this value against integer variable values matching all 
    ///   variables that have values less than or equal to this value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string intValueEnd {
            get {
                return this.intValueEndField;
            }
            set {
                this.intValueEndField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   Match this value against date variable values matching all variables 
    ///   that have dates with this value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> dateValue {
            get {
                return this.dateValueField;
            }
            set {
                this.dateValueField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   Match this value against date variable values matching all variables 
    ///   that have dates at or after this value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> dateValueStart {
            get {
                return this.dateValueStartField;
            }
            set {
                this.dateValueStartField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   Match this value against date variable values matching all variables 
    ///   that have dates at or before this value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> dateValueEnd {
            get {
                return this.dateValueEndField;
            }
            set {
                this.dateValueEndField = value;
            }
        }
    }
    
    /// <summary>
    ///   The supported types of authentication. These types are used with the 
    ///   generic authentication operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public enum AuthenticationType {
        
    /// <value>
    ///   Authenticate using a card with a grid containing letters and numbers. 
    ///   To use this method, a user must either have a non-expired card in the 
    ///   CURRENT or PENDING states or a temporary PIN that has not yet 
    ///   expired or used too many times. 
    /// </value>
        GRID,
        
    /// <value>
    ///   Authenticate using a set of questions and answers. The user must have 
    ///   provided answers to the questions during the registration process. 
    /// </value>
        QA,
        
    /// <value>
    ///   Authenticate using a one-time password (OTP). The OTP will be 
    ///   generated when the challenge is requested. Entrust IdentityGuard provides 
    ///   mechanisms to deliver the OTP to the user out-of-band. 
    /// </value>
        OTP,
        
    /// <value>
    ///   Authenticate using a token in response-only mode. When using this mode 
    ///   of authentication, no challenge is generated or stored for the user; 
    ///   they simply enter the value displayed on the token to authenticate. 
    ///   To use this method, a user must have a token in the CURRENT or 
    ///   PENDING state or a temporary PIN that has not yet expired or used too many 
    ///   times. 
    /// </value>
        TOKENRO,
        
    /// <value>
    ///   Authenticate using a token in challenge-response mode. When using this 
    ///   mode of authentication, a challenge is generated and stored for the 
    ///   user; they enter this value into their token and respond with the 
    ///   value generated by the token to authenticate. To use this method, a user 
    ///   must have a token in the CURRENT or PENDING state that supports 
    ///   TOKENCR or a temporary PIN that has not yet expired or used too many 
    ///   times. 
    /// </value>
        TOKENCR,
        
    /// <value>
    ///   Authenticate using an external authentication method. The external 
    ///   authentication mechanism such as LDAP or Kerberos authentication must be 
    ///   configured within Entrust IdentityGuard. 
    /// </value>
        EXTERNAL,
        
    /// <value>
    ///   Authenticate using an Entrust IdentityGuard managed password. 
    /// </value>
        PASSWORD,
        
    /// <value>
    ///   Authenticate using a certificate.
    /// </value>
        CERTIFICATE,
        
    /// <value>
    ///   No authentication is required.
    /// </value>
        NONE,
    }
    
    /// <summary>
    ///   Defines the parameters passed when modifying a user federation. Either 
    ///   the OrginatorFederationName or the ReceiverFederationName are 
    ///   required, or both. 
    ///   The Comment is optional.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserFederationSetParms {
        
        private string originatorFederationNameField;
        
        private string receiverFederationNameField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The new originator federation name of the federation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string OriginatorFederationName {
            get {
                return this.originatorFederationNameField;
            }
            set {
                this.originatorFederationNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The new receiver federation name of the federation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ReceiverFederationName {
            get {
                return this.receiverFederationNameField;
            }
            set {
                this.receiverFederationNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A new comment for the federation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userFederationSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserFederationSetCallParms {
        
        private string useridField;
        
        private UserFederationFilter filterField;
        
        private UserFederationSetParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to update federations for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserFederationFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which federation is to be updated for the user. 
    ///   The filter must specify a single type and a partnerID. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserFederationFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   UserFederationSetParms
    /// </datatype>
    /// <value>
    ///   The parameters to update the federation with.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserFederationSetParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a filter to limit which federations are returned for a user 
    ///   when the filter is used with userFederationGet, userFederationList, and 
    ///   userFederationDelete. In these cases, if no filter items are set 
    ///   then all federations for the user are returned. Defines a filter in 
    ///   order to specify a single type and partnerID when the filter is used with 
    ///   userFederationSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserFederationFilter {
        
        private string[] typesField;
        
        private string partnerIDField;
        
        private System.Nullable<bool> originatorField;
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   Return user federations whose type matches one of the given value. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Types {
            get {
                return this.typesField;
            }
            set {
                this.typesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The partner ID of the federation. For example the SAML partner entity 
    ///   ID. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PartnerID {
            get {
                return this.partnerIDField;
            }
            set {
                this.partnerIDField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this server is the originator of the federation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> Originator {
            get {
                return this.originatorField;
            }
            set {
                this.originatorField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userFederationGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserFederationGetCallParms {
        
        private string useridField;
        
        private string originatorFederationNameField;
        
        private UserFederationFilter filterField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get federations for.
    ///   Either the originator federation name or the userid is required. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The originator federation name to delete federations for. If 
    ///   specified, the associated filter partnerID must also be specified. 
    ///   Either the originator federation name or the userid is required. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string originatorFederationName {
            get {
                return this.originatorFederationNameField;
            }
            set {
                this.originatorFederationNameField = value;
            }
        }
        
    /// <datatype>
    ///   UserFederationFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which federations are to be returned for the 
    ///   user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserFederationFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userFederationDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserFederationDeleteCallParms {
        
        private string useridField;
        
        private UserFederationFilter filterField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to delete federations for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserFederationFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which federations are to be deleted from the 
    ///   user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserFederationFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when creating a user federation. All 
    ///   values are required except for ReceiverFederationName and Comment. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserFederationCreateParms {
        
        private string typeField;
        
        private string partnerIDField;
        
        private string originatorFederationNameField;
        
        private string receiverFederationNameField;
        
        private bool originatorField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The type of the federation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The partner ID of the federation. For example the SAML partner entity 
    ///   ID. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PartnerID {
            get {
                return this.partnerIDField;
            }
            set {
                this.partnerIDField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The originator federation name of the federation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OriginatorFederationName {
            get {
                return this.originatorFederationNameField;
            }
            set {
                this.originatorFederationNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The receiver federation name of the federation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ReceiverFederationName {
            get {
                return this.receiverFederationNameField;
            }
            set {
                this.receiverFederationNameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this server is the originator of the federation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Originator {
            get {
                return this.originatorField;
            }
            set {
                this.originatorField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A comment for the federation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userFederationCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserFederationCreateCallParms {
        
        private string useridField;
        
        private UserFederationCreateParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to create federations for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserFederationCreateParms
    /// </datatype>
    /// <value>
    ///   The parameters to create the federation with.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserFederationCreateParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   reportDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportDeleteCallParms {
        
        private string idField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id of the report being deleted.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the data returned from the reportList operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportListResult {
        
        private ReportInfo[] reportInfoField;
        
        private string nextReportField;
        
    /// <datatype>
    ///   ReportInfo[]
    /// </datatype>
    /// <value>
    ///   The list of reports returned.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ReportInfo[] ReportInfo {
            get {
                return this.reportInfoField;
            }
            set {
                this.reportInfoField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If set, indicates the Id of the next report to be returned. This value 
    ///   should be used as the ReportFilter nextId value when invoking the 
    ///   reportList operation the next time. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string NextReport {
            get {
                return this.nextReportField;
            }
            set {
                this.nextReportField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure provides information about reports. One of these is 
    ///   always not null and two of them are null: QueueInfo, SuccessInfo, 
    ///   FailureInfo. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportInfo {
        
        private string idField;
        
        private string nameField;
        
        private string displayNameField;
        
        private string descriptionField;
        
        private ReportDataSourceType dataSourceField;
        
        private string serviceTypeField;
        
        private string creatorUseridField;
        
        private string creatorUserNameField;
        
        private string creatorGroupField;
        
        private System.DateTime requestDateField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private bool removableField;
        
        private int recordsField;
        
        private ReportQueueInfo queueInfoField;
        
        private ReportSuccessInfo successInfoField;
        
        private ReportFailureInfo failureInfoField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id of the report. This value cannot be null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the report. This value cannot be null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The display name of the report. This value cannot be null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The description of the report. This value cannot be null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
    /// <datatype>
    ///   ReportDataSourceType
    /// </datatype>
    /// <value>
    ///   The data source of the report. This value cannot be null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReportDataSourceType DataSource {
            get {
                return this.dataSourceField;
            }
            set {
                this.dataSourceField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The service type that originated this report.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ServiceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The userid of the creator that generated this report. This value 
    ///   cannot be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CreatorUserid {
            get {
                return this.creatorUseridField;
            }
            set {
                this.creatorUseridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name of the creator that generated this report. This value 
    ///   cannot be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CreatorUserName {
            get {
                return this.creatorUserNameField;
            }
            set {
                this.creatorUserNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the creator that generated this report. This value can be 
    ///   null when a Master user generates the report. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CreatorGroup {
            get {
                return this.creatorGroupField;
            }
            set {
                this.creatorGroupField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date this report was requested (added to the reporting queue). 
    ///   This value cannot be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime RequestDate {
            get {
                return this.requestDateField;
            }
            set {
                this.requestDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date this report started being generated. This value is irrelevant 
    ///   if the report has not yet started being generated. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   An indicator for whether this report can be deleted. A report is 
    ///   removable if the user retrieving this structure has the required 
    ///   permission to delete reports. Reports that have not completed generation 
    ///   cannot be removed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Removable {
            get {
                return this.removableField;
            }
            set {
                this.removableField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The approximate number of records processed thus far. This value 
    ///   cannot be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Records {
            get {
                return this.recordsField;
            }
            set {
                this.recordsField = value;
            }
        }
        
    /// <datatype>
    ///   ReportQueueInfo
    /// </datatype>
    /// <value>
    ///   Information about reports that have not completed generation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReportQueueInfo QueueInfo {
            get {
                return this.queueInfoField;
            }
            set {
                this.queueInfoField = value;
            }
        }
        
    /// <datatype>
    ///   ReportSuccessInfo
    /// </datatype>
    /// <value>
    ///   Information about reports that have completed successfully.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReportSuccessInfo SuccessInfo {
            get {
                return this.successInfoField;
            }
            set {
                this.successInfoField = value;
            }
        }
        
    /// <datatype>
    ///   ReportFailureInfo
    /// </datatype>
    /// <value>
    ///   Information about reports that have not completed successfully. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReportFailureInfo FailureInfo {
            get {
                return this.failureInfoField;
            }
            set {
                this.failureInfoField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the available data sources for reports.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum ReportDataSourceType {
        
    /// <value>
    ///   The user data source.
    /// </value>
        USER,
        
    /// <value>
    ///   The card data source.
    /// </value>
        CARD,
        
    /// <value>
    ///   The token data source.
    /// </value>
        TOKEN,
        
    /// <value>
    ///   The certificate data source.
    /// </value>
        CERTIFICATE,
        
    /// <value>
    ///   The digital id data source.
    /// </value>
        DIGITALID,
        
    /// <value>
    ///   The smart credential data source.
    /// </value>
        SMARTCREDENTIAL,
        
    /// <value>
    ///   The audit data source.
    /// </value>
        AUDIT,
        
    /// <value>
    ///   The unassigned card data source.
    /// </value>
        UNASSIGNEDCARD,
        
    /// <value>
    ///   The unassigned token data source.
    /// </value>
        UNASSIGNEDTOKEN,
        
    /// <value>
    ///   The unassigned smart credential data source.
    /// </value>
        UNASSIGNEDSMARTCREDENTIAL,
    }
    
    /// <summary>
    ///   This structure provides information about reports that have not yet 
    ///   been generated. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportQueueInfo {
        
        private int positionField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The current position on the reporting queue. A position of 0 implies 
    ///   the report is currently running and retrieving data. A position of -1 
    ///   implies the report is currently running and in the process of 
    ///   formatting the report. This value cannot be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure provides information about generated reports that have 
    ///   completed successfully. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportSuccessInfo {
        
        private System.DateTime endDateField;
        
        private bool viewableField;
        
        private ReportDetailInfo detailField;
        
        private bool truncatedField;
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date this report finished being generated. This value cannot be 
    ///   null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   An indicator for whether this report is viewable. A report is viewable 
    ///   if the user retrieving this structure has a role that satisfies the 
    ///   required permissions, groups, and roles used to create the actual 
    ///   report. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Viewable {
            get {
                return this.viewableField;
            }
            set {
                this.viewableField = value;
            }
        }
        
    /// <datatype>
    ///   ReportDetailInfo
    /// </datatype>
    /// <value>
    ///   The formatted report detail. If null, the formatted report is no 
    ///   longer available. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReportDetailInfo Detail {
            get {
                return this.detailField;
            }
            set {
                this.detailField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   An indicator for whether this report was truncated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Truncated {
            get {
                return this.truncatedField;
            }
            set {
                this.truncatedField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure provides information about a generated report instance. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportDetailInfo {
        
        private string formatField;
        
        private int kilobytesField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The format for this report instance. This value cannot be null. For 
    ///   example, PDF or CSV. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The size, in kilobytes, for this report instance. This value cannot be 
    ///   null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Kilobytes {
            get {
                return this.kilobytesField;
            }
            set {
                this.kilobytesField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure provides information about generated reports that have 
    ///   not completed successfully. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportFailureInfo {
        
        private System.DateTime endDateField;
        
        private string errorCodeField;
        
        private string errorMessageField;
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date this report finished being generated. This value cannot be 
    ///   null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The error code associated with the failure. This value cannot be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The error message associated with the failure. This value cannot be 
    ///   null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the filter to limit which reports are to be returned from the 
    ///   report list operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportFilter {
        
        private string idField;
        
        private string startIdField;
        
        private string endIdField;
        
        private string nextIdField;
        
        private System.Nullable<int> maxReturnField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only the report with the given Id is returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only reports with an Id greater than or equal to this 
    ///   value are returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string startId {
            get {
                return this.startIdField;
            }
            set {
                this.startIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only reports with an Id less than or equal to this value 
    ///   are returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string endId {
            get {
                return this.endIdField;
            }
            set {
                this.endIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only reports with an Id from this value onward are 
    ///   returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string nextId {
            get {
                return this.nextIdField;
            }
            set {
                this.nextIdField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of reports to return. If not specified or the value is 0 or 
    ///   less, it defaults to 100. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> MaxReturn {
            get {
                return this.maxReturnField;
            }
            set {
                this.maxReturnField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to reportList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportListCallParms {
        
        private ReportFilter filterField;
        
    /// <datatype>
    ///   ReportFilter
    /// </datatype>
    /// <value>
    ///   Return the entries in the report list matching the given search 
    ///   parameters. 
    ///   This value cannot be null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReportFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to reportGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportGetCallParms {
        
        private string idField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id of the report being retrieved. This value cannot be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the set of filters for creating a report. At least one of the 
    ///   filters must not be null. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportCreateFilters {
        
        private UserFilter userFilterField;
        
        private PreproducedCardFilter preproducedCardFilterField;
        
        private TokenFilter tokenFilterField;
        
        private SmartCredentialFilter smartCredentialFilterField;
        
        private AuditFilter auditFilterField;
        
    /// <datatype>
    ///   UserFilter
    /// </datatype>
    /// <value>
    ///   The search filter, specifying which users, cards, tokens, smart 
    ///   credentials and certificates should be returned for the report. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserFilter UserFilter {
            get {
                return this.userFilterField;
            }
            set {
                this.userFilterField = value;
            }
        }
        
    /// <datatype>
    ///   PreproducedCardFilter
    /// </datatype>
    /// <value>
    ///   The search filter, specifying which preproduced cards should be 
    ///   returned for the report. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public PreproducedCardFilter PreproducedCardFilter {
            get {
                return this.preproducedCardFilterField;
            }
            set {
                this.preproducedCardFilterField = value;
            }
        }
        
    /// <datatype>
    ///   TokenFilter
    /// </datatype>
    /// <value>
    ///   The search filter, specifying which unassigned tokens should be 
    ///   returned for the report. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TokenFilter TokenFilter {
            get {
                return this.tokenFilterField;
            }
            set {
                this.tokenFilterField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialFilter
    /// </datatype>
    /// <value>
    ///   The search filter, specifying which unassigned smart credentials 
    ///   should be returned for the report. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SmartCredentialFilter SmartCredentialFilter {
            get {
                return this.smartCredentialFilterField;
            }
            set {
                this.smartCredentialFilterField = value;
            }
        }
        
    /// <datatype>
    ///   AuditFilter
    /// </datatype>
    /// <value>
    ///   The search filter, specifying which audits should be returned for the 
    ///   report. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public AuditFilter AuditFilter {
            get {
                return this.auditFilterField;
            }
            set {
                this.auditFilterField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the filter to limit which preproduced cards are to be returned 
    ///   from the preproducedCardList operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PreproducedCardFilter {
        
        private string serialNumberField;
        
        private string[] serialNumbersField;
        
        private SerialNumberRange[] serialNumberRangesField;
        
        private System.Nullable<System.DateTime> createStartDateField;
        
        private System.Nullable<System.DateTime> createEndDateField;
        
        private string[] groupsField;
        
        private System.Nullable<int> maxReturnField;
        
        private string nextCardField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only cards with this serial number or serial numbers 
    ///   matching the serialNumbers or serialNumberRanges arguments will be 
    ///   returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, only cards with one of these serial numbers or serial 
    ///   numbers matching the serialNumber or serialNumberRanges arguments will 
    ///   be returned. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] serialNumbers {
            get {
                return this.serialNumbersField;
            }
            set {
                this.serialNumbersField = value;
            }
        }
        
    /// <datatype>
    ///   SerialNumberRange[]
    /// </datatype>
    /// <value>
    ///   If specified, only cards with serial numbers in these ranges or serial 
    ///   numbers matching the serialNumber or serialNumberRanges arguments 
    ///   will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SerialNumberRange[] serialNumberRanges {
            get {
                return this.serialNumberRangesField;
            }
            set {
                this.serialNumberRangesField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only cards whose creation date is after the 
    ///   given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> createStartDate {
            get {
                return this.createStartDateField;
            }
            set {
                this.createStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only cards whose creation date is before the 
    ///   given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> createEndDate {
            get {
                return this.createEndDateField;
            }
            set {
                this.createEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, provides a list of group names and returns only cards in 
    ///   the specified groups. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of cards to return. If not specified, or the value is 0 or 
    ///   less, it defaults to 100. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxReturn {
            get {
                return this.maxReturnField;
            }
            set {
                this.maxReturnField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the next card to be returned. If specified, 
    ///   indicates that searching should start at the given card. This value is 
    ///   used to get the next set of cards following a previous search. The value 
    ///   can be found in the PreproducedCardListResult from the previous 
    ///   search. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string nextCard {
            get {
                return this.nextCardField;
            }
            set {
                this.nextCardField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a range of serial numbers. At least one of the start or end 
    ///   values must be specified. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SerialNumberRange {
        
        private string startField;
        
        private string endField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the start serial number of the range.
    ///   If not specified, all serial numbers less than or equal to the end of 
    ///   the range will be matched. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the end serial number of the range.
    ///   If not specified, all serial numbers greater than or equal to the 
    ///   start of the range will be matched. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string end {
            get {
                return this.endField;
            }
            set {
                this.endField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the filter to limit which unassigned tokens are to be returned 
    ///   from the token list operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenFilter {
        
        private string vendorIdField;
        
        private string serialNumberField;
        
        private System.Nullable<System.DateTime> loadStartDateField;
        
        private System.Nullable<System.DateTime> loadEndDateField;
        
        private string[] groupsField;
        
        private System.Nullable<int> maxReturnField;
        
        private string nextTokenVendorIdField;
        
        private string nextTokenSerialNumberField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only tokens with the given vendor are returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string vendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only tokens whose serial numbers match this expression 
    ///   are returned. This string can include the '*' character for wildcard 
    ///   matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only tokens whose load date is after the given 
    ///   date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> loadStartDate {
            get {
                return this.loadStartDateField;
            }
            set {
                this.loadStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only tokens whose load date is before the given 
    ///   date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> loadEndDate {
            get {
                return this.loadEndDateField;
            }
            set {
                this.loadEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, provides a list of group names and returns only tokens 
    ///   in the specified groups. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of tokens to return. If not specified or the value is 0 or 
    ///   less, it defaults to 100. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxReturn {
            get {
                return this.maxReturnField;
            }
            set {
                this.maxReturnField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The vendor id of the next token to be returned. If specified, 
    ///   indicates that searching should start at the given token. This value is used 
    ///   to get the next set of tokens following a previous search. The value 
    ///   can be found in the TokenListResult from the previous search. This 
    ///   value is ignored if the nextTokenSerialNumber is not specified. 
    ///   If not specified when nextTokenSerialNumber is specified, the default 
    ///   vendorid is used. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string nextTokenVendorId {
            get {
                return this.nextTokenVendorIdField;
            }
            set {
                this.nextTokenVendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serialNumber of the next token to be returned. If specified, 
    ///   indicates that searching should start at the given token. This value is 
    ///   used to get the next set of tokens following a previous search. The 
    ///   value can be found in the TokenListResult from the previous search. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string nextTokenSerialNumber {
            get {
                return this.nextTokenSerialNumberField;
            }
            set {
                this.nextTokenSerialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the filter to limit which unassigned smart credentials are to 
    ///   be returned from the smartCredentialList operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialFilter {
        
        private string serialNumberField;
        
        private string cardUIDField;
        
        private System.Nullable<System.DateTime> loadStartDateField;
        
        private System.Nullable<System.DateTime> loadEndDateField;
        
        private string[] groupsField;
        
        private SmartCredentialState[] statesField;
        
        private SmartCredentialState[] absentStatesField;
        
        private System.Nullable<int> maxReturnField;
        
        private string nextSmartCredentialSerialNumberField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only smart credentials whose serial numbers match this 
    ///   expression are returned. This string can include the '*' character for 
    ///   wildcard matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, returns Smart Credentials that have a card UID that 
    ///   matches the given value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string cardUID {
            get {
                return this.cardUIDField;
            }
            set {
                this.cardUIDField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only smart credentials whose load date is after 
    ///   the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> loadStartDate {
            get {
                return this.loadStartDateField;
            }
            set {
                this.loadStartDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only smart credentials whose load date is before 
    ///   the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> loadEndDate {
            get {
                return this.loadEndDateField;
            }
            set {
                this.loadEndDateField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, provides a list of group names and returns only smart 
    ///   credentials in the specified groups. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialState[]
    /// </datatype>
    /// <value>
    ///   If specified, provides a list of smart credential states and returns 
    ///   only smart credentials with one of the specified states. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialState[] states {
            get {
                return this.statesField;
            }
            set {
                this.statesField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialState[]
    /// </datatype>
    /// <value>
    ///   If specified, provides a list of smart credential states and returns 
    ///   only smart credentials not in one of the specified states. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialState[] absentStates {
            get {
                return this.absentStatesField;
            }
            set {
                this.absentStatesField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of smart credentials to return. If not specified or the 
    ///   value is 0 or less, it defaults to 100. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxReturn {
            get {
                return this.maxReturnField;
            }
            set {
                this.maxReturnField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serialNumber of the next smart credential to be returned. If 
    ///   specified, indicates that searching should start at the given smart 
    ///   credential. This value is used to get the next set of smart credentials 
    ///   following a previous search. The value can be found in the 
    ///   SmartCredentialListResult from the previous search. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string nextSmartCredentialSerialNumber {
            get {
                return this.nextSmartCredentialSerialNumberField;
            }
            set {
                this.nextSmartCredentialSerialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the filter to limit which audits are to be returned from the 
    ///   audit list operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class AuditFilter {
        
        private System.Nullable<long> seqNoField;
        
        private System.Nullable<long> seqNoStartField;
        
        private System.Nullable<long> seqNoEndField;
        
        private string hostField;
        
        private string levelField;
        
        private System.Nullable<int> codeField;
        
        private int[] codesField;
        
        private System.Nullable<int> codeStartField;
        
        private System.Nullable<int> codeEndField;
        
        private System.Nullable<System.DateTime> dateStartField;
        
        private System.Nullable<System.DateTime> dateEndField;
        
        private string serviceField;
        
        private string adminGroupField;
        
        private string adminNameField;
        
        private string targetTypeField;
        
        private string[] targetTypesField;
        
        private string targetOpField;
        
        private string[] targetOpsField;
        
        private string targetGroupField;
        
        private string targetNameField;
        
        private string targetSubnameField;
        
        private string externalCodeField;
        
        private string externalServiceField;
        
        private string textField;
        
        private System.Nullable<int> maxReturnField;
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   If specified, only audits with the given sequence number are returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> seqNo {
            get {
                return this.seqNoField;
            }
            set {
                this.seqNoField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   If specified, only audits with a sequence number greater than or equal 
    ///   to this value are returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> seqNoStart {
            get {
                return this.seqNoStartField;
            }
            set {
                this.seqNoStartField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   If specified, only audits with a sequence number less than or equal to 
    ///   this value are returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> seqNoEnd {
            get {
                return this.seqNoEndField;
            }
            set {
                this.seqNoEndField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose host match this expression are 
    ///   returned. This string can include the '*' character for wildcard matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose level match this expression are 
    ///   returned. This string can include the '*' character for wildcard matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If specified, only audits with the given code are returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
    /// <datatype>
    ///   int[]
    /// </datatype>
    /// <value>
    ///   If specified, only audits with one of the given codes are returned. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public int[] codes {
            get {
                return this.codesField;
            }
            set {
                this.codesField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If specified, only audits with a code greater than or equal to this 
    ///   value are returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> codeStart {
            get {
                return this.codeStartField;
            }
            set {
                this.codeStartField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If specified, only audits with a code less than or equal to this value 
    ///   are returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> codeEnd {
            get {
                return this.codeEndField;
            }
            set {
                this.codeEndField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only audits whose date is after the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> dateStart {
            get {
                return this.dateStartField;
            }
            set {
                this.dateStartField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, returns only audits whose date is before the given date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> dateEnd {
            get {
                return this.dateEndField;
            }
            set {
                this.dateEndField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose service match this expression are 
    ///   returned. This string can include the '*' character for wildcard 
    ///   matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose admin group match this expression are 
    ///   returned. This string can include the '*' character for wildcard 
    ///   matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string adminGroup {
            get {
                return this.adminGroupField;
            }
            set {
                this.adminGroupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose admin name match this expression are 
    ///   returned. This string can include the '*' character for wildcard 
    ///   matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string adminName {
            get {
                return this.adminNameField;
            }
            set {
                this.adminNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose target type match this expression are 
    ///   returned. This string can include the '*' character for wildcard 
    ///   matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetType {
            get {
                return this.targetTypeField;
            }
            set {
                this.targetTypeField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose target type matches one of these 
    ///   expressions are returned. 
    ///   Each value can include the '*' character for wildcard matching. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] targetTypes {
            get {
                return this.targetTypesField;
            }
            set {
                this.targetTypesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose target op match this expression are 
    ///   returned. This string can include the '*' character for wildcard 
    ///   matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetOp {
            get {
                return this.targetOpField;
            }
            set {
                this.targetOpField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose target op match one of these 
    ///   expressions are returned. 
    ///   Each value can include the '*' character for wildcard matching. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] targetOps {
            get {
                return this.targetOpsField;
            }
            set {
                this.targetOpsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose target group match this expression are 
    ///   returned. This string can include the '*' character for wildcard 
    ///   matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetGroup {
            get {
                return this.targetGroupField;
            }
            set {
                this.targetGroupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose target name match this expression are 
    ///   returned. This string can include the '*' character for wildcard 
    ///   matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetName {
            get {
                return this.targetNameField;
            }
            set {
                this.targetNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose target subname match this expression 
    ///   are returned. This string can include the '*' character for wildcard 
    ///   matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetSubname {
            get {
                return this.targetSubnameField;
            }
            set {
                this.targetSubnameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose external code match this expression 
    ///   are returned. This string can include the '*' character for wildcard 
    ///   matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string externalCode {
            get {
                return this.externalCodeField;
            }
            set {
                this.externalCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose external service match this expression 
    ///   are returned. 
    ///   This string can include the '*' character for wildcard matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string externalService {
            get {
                return this.externalServiceField;
            }
            set {
                this.externalServiceField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only audits whose text match this expression are 
    ///   returned. This string can include the '*' character for wildcard matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of audits to return. If not specified or the value is 0 or 
    ///   less, it defaults to 100. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxReturn {
            get {
                return this.maxReturnField;
            }
            set {
                this.maxReturnField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when creating a report.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportCreateParms {
        
        private string nameField;
        
        private string descriptionField;
        
        private string formatField;
        
        private NameValue[] parameterPropertiesField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of this report. The name is used to identify information 
    ///   about how the report should be generated. This value cannot be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The report description. This value cannot be null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The report format. For example, PDF or CSV. This value cannot be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   The parameter properties that are passed into the report generator. 
    ///   The available properties are ReportDescription, ReportLocale, 
    ///   ReportTimeZone, and ReportSummaryOnly. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] ParameterProperties {
            get {
                return this.parameterPropertiesField;
            }
            set {
                this.parameterPropertiesField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   reportCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportCreateCallParms {
        
        private ReportCreateParms parmsField;
        
        private ReportCreateFilters filtersField;
        
    /// <datatype>
    ///   ReportCreateParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling what report should be generated. This value 
    ///   cannot be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReportCreateParms Parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
        
    /// <datatype>
    ///   ReportCreateFilters
    /// </datatype>
    /// <value>
    ///   The search filter, specifying which data should be returned for the 
    ///   report. This value cannot be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReportCreateFilters Filters {
            get {
                return this.filtersField;
            }
            set {
                this.filtersField = value;
            }
        }
    }
    
    /// <summary>
    ///   The data returned from a ReportDefinitionList operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportDefinitionListResult {
        
        private ReportDefinitionInfo[] definitionsField;
        
    /// <datatype>
    ///   ReportDefinitionInfo[]
    /// </datatype>
    /// <value>
    ///   The list of reports that can be generated.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ReportDefinitionInfo[] definitions {
            get {
                return this.definitionsField;
            }
            set {
                this.definitionsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure provides information about the reports that can be 
    ///   generated. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportDefinitionInfo {
        
        private string nameField;
        
        private string displayNameField;
        
        private string helpMessageField;
        
        private ReportDataSourceType dataSourceField;
        
        private string[] formatsField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the report. This value cannot be null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The display name of the report. This value cannot be null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The help message of the report.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string HelpMessage {
            get {
                return this.helpMessageField;
            }
            set {
                this.helpMessageField = value;
            }
        }
        
    /// <datatype>
    ///   ReportDataSourceType
    /// </datatype>
    /// <value>
    ///   The data source of the report. This value cannot be null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReportDataSourceType DataSource {
            get {
                return this.dataSourceField;
            }
            set {
                this.dataSourceField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of supported report formats allowed. This value cannot be 
    ///   null and must have at least one entry. For example, PDF or CSV. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Formats {
            get {
                return this.formatsField;
            }
            set {
                this.formatsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   reportDefinitionGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ReportDefinitionGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the report being retrieved. This value cannot be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned from a caCertificateLoadVerify 
    ///   operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CACertificateLoadVerifyResult {
        
        private CertificateDataType typeField;
        
        private string issuerDNField;
        
        private string subjectDNField;
        
        private string serialNumberField;
        
        private System.DateTime issueDateField;
        
        private System.DateTime expiryDateField;
        
        private string mD5HashField;
        
        private string sHA1HashField;
        
        private string sHA256HashField;
        
    /// <datatype>
    ///   CertificateDataType
    /// </datatype>
    /// <value>
    ///   The type of data that was specified as an argument to the 
    ///   caCertificateLoadVerify operation. 
    ///   The value will be one of CERT or P7.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CertificateDataType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The issuer DN of the certificate in the loaded data. For PKCS#7 data, 
    ///   the certificate information is returned for the child certificate in 
    ///   the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IssuerDN {
            get {
                return this.issuerDNField;
            }
            set {
                this.issuerDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The subject DN of the certificate in the loaded data. For PKCS#7 data, 
    ///   the certificate information is returned for the child certificate in 
    ///   the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SubjectDN {
            get {
                return this.subjectDNField;
            }
            set {
                this.subjectDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the certificate in the loaded data. For PKCS#7 
    ///   data, the certificate information is returned for the child certificate 
    ///   in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The issue date of the certificate in the loaded data. For PKCS#7 data, 
    ///   the certificate information is returned for the child certificate in 
    ///   the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime issueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The expiry date of the certificate in the loaded data. For PKCS#7 
    ///   data, the certificate information is returned for the child certificate 
    ///   in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The MD5 hash of the imported data. The hash will be encoded as a 
    ///   string using HEX encoding. For a certificate the hash is calculated on the 
    ///   entire data. For PKCS#7 data, the hash is calculated in the root 
    ///   certificate in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MD5Hash {
            get {
                return this.mD5HashField;
            }
            set {
                this.mD5HashField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The SHA1 hash of the imported data. The hash will be encoded as a 
    ///   string using HEX encoding. For a certificate the hash is calculated on 
    ///   the entire data. For PKCS#7 data, the hash is calculated in the root 
    ///   certificate in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHA1Hash {
            get {
                return this.sHA1HashField;
            }
            set {
                this.sHA1HashField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The SHA256 hash of the imported data. The hash will be encoded as a 
    ///   string using HEX encoding. For a certificate the hash is calculated on 
    ///   the entire data. For PKCS#7 data, the hash is calculated in the root 
    ///   certificate in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHA256Hash {
            get {
                return this.sHA256HashField;
            }
            set {
                this.sHA256HashField = value;
            }
        }
    }
    
    /// <summary>
    ///   The type of data used in a certificate export operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum CertificateDataType {
        
    /// <value>
    ///   The data is an X.509 certificate.
    /// </value>
        CERT,
        
    /// <value>
    ///   The data is a PKCS#7 encoded certificate chain.
    /// </value>
        P7,
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   caCertificateLoadVerify. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CACertificateLoadVerifyCallParms {
        
        private CACertificateParms parmsField;
        
    /// <datatype>
    ///   CACertificateParms
    /// </datatype>
    /// <value>
    ///   The parameters specifying the CA certificate to be loaded. The 
    ///   parameters must include the data element which must be a BASE-64 encoded 
    ///   certificate or PKCS#7 certificate chain specifying a CA certificate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CACertificateParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters used for the CA certificate load and set 
    ///   operations. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CACertificateParms {
        
        private string nameField;
        
        private string dataField;
        
        private System.Nullable<CertificateState> stateField;
        
        private System.Nullable<bool> lDAPUseURLCDPField;
        
        private string lDAPURLField;
        
        private string lDAPUserDNField;
        
        private string lDAPUserPasswordField;
        
        private string oCSPURLField;
        
        private System.Nullable<bool> oCSPUseAIAField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the CA certificate.
    ///   It must be specified during the load operation and is used to rename 
    ///   the CA certificate during the set operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the certificate data to be loaded During the load operation. 
    ///   It must be specified during the load operation. The data must be a 
    ///   Base-64 encoded X.509 certificate or PKCS#7 certificate chain. 
    ///   The specified certificate must be a CA certificate and must not 
    ///   already be loaded into the system. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
    /// <datatype>
    ///   CertificateState
    /// </datatype>
    /// <value>
    ///   The state of the CA certificate.
    ///   During the load operation, the state defaults to ACTIVE if not 
    ///   specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<CertificateState> state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If an LDAP URL is not specified, this flag controls whether 
    ///   certificate authentication will use URL CDPs in the certificate to find CRLs. 
    ///   If a LDAP URL is specified, this flag must be true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> LDAPUseURLCDP {
            get {
                return this.lDAPUseURLCDPField;
            }
            set {
                this.lDAPUseURLCDPField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the LDAP URL for the CA certificate during the load or set 
    ///   operation. 
    ///   The specified value must be a valid URL or an empty string.
    ///   The LDAP URL if defined specifies the LDAP server used during 
    ///   certificate validation to retrieve certificates and CRLs as required. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LDAPURL {
            get {
                return this.lDAPURLField;
            }
            set {
                this.lDAPURLField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the LDAP User DN for the CA certificate during the load or 
    ///   set operation. 
    ///   This value can only be set if the LDAPURL value is set. If this value 
    ///   is set, the LDAPUserPassword value must be set. If this value is not 
    ///   set and the LDAP URL value is set, anonymous bind is used to connect 
    ///   to the LDAP server. 
    ///   used to
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LDAPUserDN {
            get {
                return this.lDAPUserDNField;
            }
            set {
                this.lDAPUserDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the LDAP User Password for the CA certificate during the 
    ///   load or set operation. 
    ///   This value can only be set if the LDAPURL value is set. If this value 
    ///   is set, the LDAPUserDN value must be set. If this value is not set 
    ///   and the LDAP URL value is set, anonymous bind is used to connect to the 
    ///   LDAP server. 
    ///   used to
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LDAPUserPassword {
            get {
                return this.lDAPUserPasswordField;
            }
            set {
                this.lDAPUserPasswordField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the OCSP URL for the CA certificate during the load or set 
    ///   operation. 
    ///   The specified value must be valid URL or an empty string.
    ///   If specified, the OCSP URL specifies the location of an OCSP server 
    ///   that may be used during certificate authentication to retrieve 
    ///   certificate revocation information. If this value isn't specified and 
    ///   OCSPUseAIA is set to false, then OCSP is not used to perform revocation 
    ///   checking. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string OCSPURL {
            get {
                return this.oCSPURLField;
            }
            set {
                this.oCSPURLField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag that indicates if the CA certificate's AIA extension is used to 
    ///   determine the location of the OCSP server. If this value is set to 
    ///   false and OCSPURL is not specified, then OCSP is not used to perform 
    ///   revocation checking. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> OCSPUseAIA {
            get {
                return this.oCSPUseAIAField;
            }
            set {
                this.oCSPUseAIAField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the comment for the CA certificate during the load or set 
    ///   operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned from a caCertificateExport operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CACertificateExportResult {
        
        private CertificateDataType typeField;
        
        private string dataField;
        
        private string mD5HashField;
        
        private string sHA1HashField;
        
        private string sHA256HashField;
        
    /// <datatype>
    ///   CertificateDataType
    /// </datatype>
    /// <value>
    ///   The type of data being returned.
    ///   This value will be CERT or P7 depending on what type was requested. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CertificateDataType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The exported data encoded as a string using BASE-64 encoding. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The MD5 hash of the exported data. The hash will be encoded as a 
    ///   string using HEX encoding. For certificate data, the hash is calculated on 
    ///   the entire data. For PKCS#7 data, the hash is calculated in the root 
    ///   certificate in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MD5Hash {
            get {
                return this.mD5HashField;
            }
            set {
                this.mD5HashField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The SHA-1 hash of the exported data. The hash will be encoded as a 
    ///   string using HEX encoding. For certificate data, the hash is calculated 
    ///   on the entire data. For PKCS#7 data, the hash is calculated in the 
    ///   root certificate in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHA1Hash {
            get {
                return this.sHA1HashField;
            }
            set {
                this.sHA1HashField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The SHA-256 hash of the exported data. The hash will be encoded as a 
    ///   string using HEX encoding. For certificate data, the hash is 
    ///   calculated on the entire data. For PKCS#7 data, the hash is calculated in the 
    ///   root certificate in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHA256Hash {
            get {
                return this.sHA256HashField;
            }
            set {
                this.sHA256HashField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   caCertificateExport. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CACertificateExportCallParms {
        
        private string nameField;
        
        private System.Nullable<CertificateDataType> typeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the CA certificate to be exported.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   CertificateDataType
    /// </datatype>
    /// <value>
    ///   The type of data to export for the CA certificate. If not specified, 
    ///   this value defaults to CERT. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<CertificateDataType> type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   caCertificateSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CACertificateSetCallParms {
        
        private string nameField;
        
        private CACertificateParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the CA certificate to be modified.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   CACertificateParms
    /// </datatype>
    /// <value>
    ///   The parameters for the set operation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CACertificateParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   caCertificateDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CACertificateDeleteCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the CA certificate to be deleted.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   caCertificateLoad. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CACertificateLoadCallParms {
        
        private string nameField;
        
        private CACertificateParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the new CA certificate to be loaded.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   CACertificateParms
    /// </datatype>
    /// <value>
    ///   The parameters for the load operation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CACertificateParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the results of a caCertificateLDAPGet operation
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CACertificateLDAPGetResult {
        
        private System.Nullable<bool> binaryField;
        
        private string[] stringAttributeField;
        
        private byte[][] binaryAttributeField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates whether the returns attribute is string data or binary data. 
    ///   True if the attribute is binary.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> Binary {
            get {
                return this.binaryField;
            }
            set {
                this.binaryField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of the strings found at a string attribute.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] StringAttribute {
            get {
                return this.stringAttributeField;
            }
            set {
                this.stringAttributeField = value;
            }
        }
        
    /// <datatype>
    ///   Base64Binary[]
    /// </datatype>
    /// <value>
    ///   A list of the base64 encoded data found at a binary attribute. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=false)]
        public byte[][] BinaryAttribute {
            get {
                return this.binaryAttributeField;
            }
            set {
                this.binaryAttributeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   caCertificateLDAPGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CACertificateLDAPGetCallParms {
        
        private string caNameField;
        
        private string dnField;
        
        private string attributeNameField;
        
        private bool binaryField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the CA.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string caName {
            get {
                return this.caNameField;
            }
            set {
                this.caNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The distinguished name of the entry.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dn {
            get {
                return this.dnField;
            }
            set {
                this.dnField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The attribute to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string attributeName {
            get {
                return this.attributeNameField;
            }
            set {
                this.attributeNameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Set to true if the requested attribute is binary.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool binary {
            get {
                return this.binaryField;
            }
            set {
                this.binaryField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   caCertificateValidate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CACertificateValidateCallParms {
        
        private byte[] certificateField;
        
        private string[] cAsField;
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The X.509 certificate to be validated.
    ///   The certificate will be authenticated against the CA Certificate 
    ///   matching its issuer. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] certificate {
            get {
                return this.certificateField;
            }
            set {
                this.certificateField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, the CA certificate that issued the certificate must be 
    ///   one of the CAs specified in the list. If this argument is null or 
    ///   empty, any configured CA certificate is allowed. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] CAs {
            get {
                return this.cAsField;
            }
            set {
                this.cAsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the results of a caCertificateList operation
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CACertificateListResult {
        
        private CACertificateInfo[] cACertificatesField;
        
    /// <datatype>
    ///   CACertificateInfo[]
    /// </datatype>
    /// <value>
    ///   A list of CA certificates.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CACertificateInfo[] CACertificates {
            get {
                return this.cACertificatesField;
            }
            set {
                this.cACertificatesField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about a CA certificate
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CACertificateInfo {
        
        private string nameField;
        
        private CertificateState stateField;
        
        private string subjectDNField;
        
        private string issuerDNField;
        
        private string serialNumberField;
        
        private System.DateTime issueDateField;
        
        private System.DateTime expiryDateField;
        
        private bool lDAPUseURLCDPField;
        
        private string lDAPURLField;
        
        private string lDAPUserDNField;
        
        private bool lDAPHasUserPasswordField;
        
        private string oCSPURLField;
        
        private bool oCSPUseAIAField;
        
        private string commentField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the CA certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   CertificateState
    /// </datatype>
    /// <value>
    ///   The state of the CA certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CertificateState state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The subject DN of the CA certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string subjectDN {
            get {
                return this.subjectDNField;
            }
            set {
                this.subjectDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The issuer DN of the CA certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string issuerDN {
            get {
                return this.issuerDNField;
            }
            set {
                this.issuerDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the CA certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The issue date of the CA certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime issueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The expiry date of the CA certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If an LDAP URL is not specified, this flag controls whether 
    ///   certificate authentication will use URL CDPs in the certificate to find CRLs. 
    ///   If a LDAP URL is specified, this flag must be true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool LDAPUseURLCDP {
            get {
                return this.lDAPUseURLCDPField;
            }
            set {
                this.lDAPUseURLCDPField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The LDAP URL for this CA certificate.
    ///   The LDAP URL if defined specifies the LDAP server used during 
    ///   certificate validation to retrieve certificates and CRLs as required. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LDAPURL {
            get {
                return this.lDAPURLField;
            }
            set {
                this.lDAPURLField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The LDAP User DN for this CA certificate.
    ///   If specified, the User DN and password values are used to authenticate 
    ///   to the LDAP server. If not specified, anonymous binding is used. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LDAPUserDN {
            get {
                return this.lDAPUserDNField;
            }
            set {
                this.lDAPUserDNField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating whether this CA Certificate has a LDAP User Password 
    ///   set. 
    ///   If specified, the User DN and password values are used to authenticate 
    ///   to the LDAP server. If not specified, anonymous binding is used. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool LDAPHasUserPassword {
            get {
                return this.lDAPHasUserPasswordField;
            }
            set {
                this.lDAPHasUserPasswordField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The OCSP URL for this CA certificate.
    ///   If specified, the OCSP URL specifies the location of an OCSP server 
    ///   that may be used during certificate authentication to retrieve 
    ///   certificate revocation information. If this value isn't specified and 
    ///   OCSPUseAIA is set to false, then OCSP is not used to perform revocation 
    ///   checking. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string OCSPURL {
            get {
                return this.oCSPURLField;
            }
            set {
                this.oCSPURLField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating whether the AIA extension of certificates should be 
    ///   used to locate the OCSP server which is used to retrieve certificate 
    ///   revocation information. 
    ///   If OCSPUseAIA is set to false and an OCSPURL value isn't specified, 
    ///   then OCSP is not used to perform revocation checking. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool OCSPUseAIA {
            get {
                return this.oCSPUseAIAField;
            }
            set {
                this.oCSPUseAIAField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The comment for this CA certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   caCertificateGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CACertificateGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the CA certificate to get.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   transactionCertificateImport. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TransactionCertificateImportCallParms {
        
        private string dataField;
        
        private System.Nullable<bool> forceField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The import data. The data must be a BASE-64 encoded certificate or 
    ///   PKCS#7 corresponding to the pending transaction certificate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The import operation will fail if an active transaction certificate 
    ///   already exists unless the force option is specified as true. If an 
    ///   active transaction certificate already exists and the force option is 
    ///   specified as true, the existing active transaction certificate will have 
    ///   its state changed to inactive. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> force {
            get {
                return this.forceField;
            }
            set {
                this.forceField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned from a 
    ///   transactionCertificateImportVerify operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TransactionCertificateImportVerifyResult {
        
        private TransactionCertificateDataType typeField;
        
        private string issuerDNField;
        
        private string subjectDNField;
        
        private string serialNumberField;
        
        private System.DateTime expiryDateField;
        
        private string mD5HashField;
        
        private string sHA1HashField;
        
        private string sHA256HashField;
        
    /// <datatype>
    ///   TransactionCertificateDataType
    /// </datatype>
    /// <value>
    ///   The type of data that was specified as an argument to the 
    ///   transactionCertificateImportVerify operation. 
    ///   The value will be one of CERT or P7.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionCertificateDataType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The issuer DN of the certificate in the imported data. For PKCS#7 
    ///   data, the certificate information is returned for the child certificate 
    ///   in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IssuerDN {
            get {
                return this.issuerDNField;
            }
            set {
                this.issuerDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The subject DN of the certificate in the imported data. For PKCS#7 
    ///   data, the certificate information is returned for the child certificate 
    ///   in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SubjectDN {
            get {
                return this.subjectDNField;
            }
            set {
                this.subjectDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the certificate in the imported data. For PKCS#7 
    ///   data, the certificate information is returned for the child 
    ///   certificate in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The expiry date of the certificate in the imported data. For PKCS#7 
    ///   data, the certificate information is returned for the child certificate 
    ///   in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The MD5 hash of the imported data. The hash will be encoded as a 
    ///   string using HEX encoding. For a certificate the hash is calculated on the 
    ///   entire data. For PKCS#7 data, the hash is calculated in the root 
    ///   certificate in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MD5Hash {
            get {
                return this.mD5HashField;
            }
            set {
                this.mD5HashField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The SHA1 hash of the imported data. The hash will be encoded as a 
    ///   string using HEX encoding. For a certificate the hash is calculated on 
    ///   the entire data. For PKCS#7 data, the hash is calculated in the root 
    ///   certificate in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHA1Hash {
            get {
                return this.sHA1HashField;
            }
            set {
                this.sHA1HashField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The SHA256 hash of the imported data. The hash will be encoded as a 
    ///   string using HEX encoding. For a certificate the hash is calculated on 
    ///   the entire data. For PKCS#7 data, the hash is calculated in the root 
    ///   certificate in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHA256Hash {
            get {
                return this.sHA256HashField;
            }
            set {
                this.sHA256HashField = value;
            }
        }
    }
    
    /// <summary>
    ///   The type of data used in a transaction certificate export or import 
    ///   operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum TransactionCertificateDataType {
        
    /// <value>
    ///   The data is an X.509 certificate.
    /// </value>
        CERT,
        
    /// <value>
    ///   The data is a PKCS#7 encoded certificate chain.
    /// </value>
        P7,
        
    /// <value>
    ///   The data is a PKCS#10 encoded certificate request.
    /// </value>
        P10,
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   transactionCertificateImportVerify. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TransactionCertificateImportVerifyCallParms {
        
        private string dataField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The import data that is to be verified. The data must be a BASE-64 
    ///   encoded certificate or PKCS#7 corresponding to the pending transaction 
    ///   certificate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned from a transactionCertificateExport 
    ///   operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TransactionCertificateExportResult {
        
        private TransactionCertificateDataType typeField;
        
        private string dataField;
        
        private string mD5HashField;
        
        private string sHA1HashField;
        
        private string sHA256HashField;
        
    /// <datatype>
    ///   TransactionCertificateDataType
    /// </datatype>
    /// <value>
    ///   The type of data being returned. For a pending certificate, the type 
    ///   will be P10. 
    ///   For an active or inactive certificate the type will be CERT or P7. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionCertificateDataType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The exported data encoded as a string using BASE-64 encoding. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The MD5 hash of the exported data. The hash will be encoded as a 
    ///   string using HEX encoding. For certificate or PKCS#10 data, the hash is 
    ///   calculated on the entire data. For PKCS#7 data, the hash is calculated 
    ///   in the root certificate in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MD5Hash {
            get {
                return this.mD5HashField;
            }
            set {
                this.mD5HashField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The SHA-1 hash of the exported data. The hash will be encoded as a 
    ///   string using HEX encoding. For certificate or PKCS#10 data, the hash is 
    ///   calculated on the entire data. For PKCS#7 data, the hash is 
    ///   calculated in the root certificate in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHA1Hash {
            get {
                return this.sHA1HashField;
            }
            set {
                this.sHA1HashField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The SHA-256 hash of the exported data. The hash will be encoded as a 
    ///   string using HEX encoding. For certificate or PKCS#10 data, the hash 
    ///   is calculated on the entire data. For PKCS#7 data, the hash is 
    ///   calculated in the root certificate in the certificate chain. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHA256Hash {
            get {
                return this.sHA256HashField;
            }
            set {
                this.sHA256HashField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   transactionCertificateExport. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TransactionCertificateExportCallParms {
        
        private string nameField;
        
        private System.Nullable<TransactionCertificateDataType> typeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the transaction certificate to be exported.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   TransactionCertificateDataType
    /// </datatype>
    /// <value>
    ///   The type of data to export for the transaction certificate. If 
    ///   specified, this value must be P10 for pending transaction certificates and 
    ///   CERT or P7 for active and inactive transaction certificates. If not 
    ///   specified, this value defaults to P10 for pending transaction 
    ///   certificates and CERT for active and inactive transaction certificates. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<TransactionCertificateDataType> type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   transactionCertificateSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TransactionCertificateSetCallParms {
        
        private string nameField;
        
        private TransactionCertificateParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the transaction certificate to be modified.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   TransactionCertificateParms
    /// </datatype>
    /// <value>
    ///   The parameters for the set operation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionCertificateParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters used for the transaction certificate create and 
    ///   set operations. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TransactionCertificateParms {
        
        private string nameField;
        
        private System.Nullable<TransactionCertificateState> stateField;
        
        private string subjectDNField;
        
        private System.Nullable<int> lifetimeField;
        
        private string hashAlgField;
        
        private string keyAlgField;
        
        private System.Nullable<bool> forceField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the transaction certificate.
    ///   If specified, it is used to rename the transaction certificate during 
    ///   the set operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   TransactionCertificateState
    /// </datatype>
    /// <value>
    ///   The state of the transaction certificate.
    ///   During the create operation, the states PENDING or ACTIVE can be 
    ///   specified. During the set operation, the states ACTIVE or INACTIVE can be 
    ///   specified. If this value is not specified during the create operation 
    ///   it defaults to ACTIVE. 
    ///   If specified during the set operation, it is used to change the state 
    ///   of the transaction certificate. The state of an active transaction 
    ///   certificate can be changed to inactive and the state of an inactive 
    ///   transaction certificate can be changed to active if there isn't already 
    ///   an active transaction certificate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<TransactionCertificateState> state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the subject DN for the transaction certificate during the 
    ///   create or set operation. 
    ///   If not specified during the create operation, the subject DN will be 
    ///   cn=name where name is the name of the transaction certificate. The 
    ///   subject DN can only be changed during the set operation for transaction 
    ///   certificates in the pending state. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string subjectDN {
            get {
                return this.subjectDNField;
            }
            set {
                this.subjectDNField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   During the create operation, this value specifies the lifetime of the 
    ///   transaction certificate lifetime in days. If not specified, the 
    ///   lifetime defaults to 365 days. 
    ///   This value must be between 1 and 7300 (20 years). The lifetime is only 
    ///   applied to the creation of active certificates. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> lifetime {
            get {
                return this.lifetimeField;
            }
            set {
                this.lifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If provided, this value specifies the hashing algorithm used when the 
    ///   transaction certificate is used to sign a transaction receipt. This 
    ///   algorithm is also used to sign the certificate when creating an active 
    ///   transaction certificate. 
    ///   The value must be SHA-1.
    ///   If not specified during the create operation, it defaults to SHA-1. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string hashAlg {
            get {
                return this.hashAlgField;
            }
            set {
                this.hashAlgField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If provided, this value species the key algorithm used to generate the 
    ///   key pair for this transaction certificate during the create 
    ///   operation. 
    ///   The value must be one of RSA-1024 or RSA-2048.
    ///   If not specified, it defaults to RSA-2048.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string keyAlg {
            get {
                return this.keyAlgField;
            }
            set {
                this.keyAlgField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   During the create operation, creation of a pending or active 
    ///   transaction certificate will fail if a pending or active transaction 
    ///   certificate already exists unless the force option is specified as true. If 
    ///   the force option is specified as true, the existing pending transaction 
    ///   certificate will be deleted and the existing active transaction 
    ///   certificate will have it's state changed to inactive. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> force {
            get {
                return this.forceField;
            }
            set {
                this.forceField = value;
            }
        }
    }
    
    /// <summary>
    ///   The state of a transaction certificate.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum TransactionCertificateState {
        
    /// <value>
    ///   The transaction certificate was created in the pending state and the 
    ///   certificate has not yet been imported from a certificate authority. 
    /// </value>
        PENDING,
        
    /// <value>
    ///   The transaction certificate that is currently being used to sign 
    ///   transaction receipts. 
    ///   An active certificate is created by creating a self-signed certificate 
    ///   or creating a pending certificate and then completing the creation 
    ///   by importing the certificate from a certificate authority. 
    /// </value>
        ACTIVE,
        
    /// <value>
    ///   A formerly active transaction certificate that is no longer being used 
    ///   to sign transaction receipts. 
    /// </value>
        INACTIVE,
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   transactionCertificateDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TransactionCertificateDeleteCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the transaction certificate to be deleted.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   transactionCertificateCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TransactionCertificateCreateCallParms {
        
        private string nameField;
        
        private TransactionCertificateParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the transaction certificate to be created.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   TransactionCertificateParms
    /// </datatype>
    /// <value>
    ///   The parameters for the create operation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionCertificateParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the results of a transactionCertificateList operation 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TransactionCertificateListResult {
        
        private TransactionCertificateInfo[] transactionCertificatesField;
        
    /// <datatype>
    ///   TransactionCertificateInfo[]
    /// </datatype>
    /// <value>
    ///   A list of transaction certificates.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public TransactionCertificateInfo[] transactionCertificates {
            get {
                return this.transactionCertificatesField;
            }
            set {
                this.transactionCertificatesField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about a transaction certificate 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TransactionCertificateInfo {
        
        private string nameField;
        
        private TransactionCertificateState stateField;
        
        private string subjectDNField;
        
        private string issuerDNField;
        
        private string serialNumberField;
        
        private System.Nullable<System.DateTime> expiryDateField;
        
        private string hashAlgField;
        
        private string keyAlgField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the transaction certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   TransactionCertificateState
    /// </datatype>
    /// <value>
    ///   The state of the transaction certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionCertificateState state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The subject DN of the transaction certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string subjectDN {
            get {
                return this.subjectDNField;
            }
            set {
                this.subjectDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The issuer DN of the transaction certificate.
    ///   This value is not defined for transaction certificates in the PENDING 
    ///   state. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string issuerDN {
            get {
                return this.issuerDNField;
            }
            set {
                this.issuerDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the transaction certificate. This value is not 
    ///   defined for transaction certificates in the PENDING state. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The expiry date of the transaction certificate.
    ///   This value is not defined for transaction certificates in the PENDING 
    ///   state. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The hashing algorithm used when this transaction certificate is used 
    ///   to sign a transaction receipt. Currently the only supported value is 
    ///   SHA-1. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hashAlg {
            get {
                return this.hashAlgField;
            }
            set {
                this.hashAlgField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The key algorithm used to generate the key pair for this transaction 
    ///   certificate. 
    ///   Possible values are RSA-1024 and RSA-2048.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string keyAlg {
            get {
                return this.keyAlgField;
            }
            set {
                this.keyAlgField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   transactionCertificateGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TransactionCertificateGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the transaction certificate to get.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   auditDelete. At least one of the parameters must be specified. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class AuditDeleteCallParms {
        
        private System.Nullable<long> seqNoField;
        
        private System.Nullable<long> seqNoStartField;
        
        private System.Nullable<long> seqNoEndField;
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   If specified, the audit with the given sequence number is deleted. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> seqNo {
            get {
                return this.seqNoField;
            }
            set {
                this.seqNoField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   If specified, audits with a sequence number greater than or equal to 
    ///   the given value are deleted. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> seqNoStart {
            get {
                return this.seqNoStartField;
            }
            set {
                this.seqNoStartField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   If specified, audits with a sequence number less than or equal to the 
    ///   given value are deleted. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> seqNoEnd {
            get {
                return this.seqNoEndField;
            }
            set {
                this.seqNoEndField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information that can be specified when an external service 
    ///   creates an audit using the auditCreate method. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class AuditParms {
        
        private string targetTypeField;
        
        private string targetOpField;
        
        private string targetGroupField;
        
        private string targetNameField;
        
        private string targetSubnameField;
        
        private string externalCodeField;
        
        private string externalServiceField;
        
        private string textField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The target of the audit is the object that the operation was performed 
    ///   on. The targetType describes the type of the target object. Example 
    ///   target types include USER, USERCARD, USERTOKEN and POLICY. If 
    ///   specified, the value has a maximum length of 20 characters. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetType {
            get {
                return this.targetTypeField;
            }
            set {
                this.targetTypeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The targetOp describes the operation performed on the target object. 
    ///   Example target operations include CREATE, DELETE and MODIFY. 
    ///   If specified, the value has a maximum length of 20 characters. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetOp {
            get {
                return this.targetOpField;
            }
            set {
                this.targetOpField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The target of the audit is the object that the operation was performed 
    ///   on. If the name of the target includes a group, the targetGroup will 
    ///   be the group of the target object. An example of a name that 
    ///   includes a group are userids that include both a group and username. 
    ///   If specified, the value has a maximum length of 255 characters. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetGroup {
            get {
                return this.targetGroupField;
            }
            set {
                this.targetGroupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The target of the audit is the object that the operation was performed 
    ///   on. The targetName will be the name of the target object. 
    ///   value will be the group of the userid. An example of an object name is 
    ///   the username of a user, the name of a policy, role or group or the 
    ///   serial number of an unassigned token or preproduced card. 
    ///   If specified, the value has a maximum length of 255 characters. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetName {
            get {
                return this.targetNameField;
            }
            set {
                this.targetNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The target of the audit is the object that the operation was performed 
    ///   on. For objects that have subnames, the targetSubname will be the 
    ///   subname of the object. An example of a subname is the serial number for 
    ///   a user card or token. 
    ///   If specified, the value has a maximum length of 255 characters. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetSubname {
            get {
                return this.targetSubnameField;
            }
            set {
                this.targetSubnameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this audit was generated by an external service, this value will 
    ///   include the code provided by the external service. 
    ///   The value has a maximum length of 20 characters.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string externalCode {
            get {
                return this.externalCodeField;
            }
            set {
                this.externalCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this audit was generated by an external service, this value will 
    ///   include the service name provided by the external service. 
    ///   The value has a maximum length of 255 characters.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string externalService {
            get {
                return this.externalServiceField;
            }
            set {
                this.externalServiceField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The text of this audit.
    ///   The value has a maximum length of 4096 characters.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   auditCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class AuditCreateCallParms {
        
        private AuditParms parmsField;
        
    /// <datatype>
    ///   AuditParms
    /// </datatype>
    /// <value>
    ///   The values that will be included in the audit.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AuditParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   The data returned from an auditList operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class AuditListResult {
        
        private AuditInfo[] auditsField;
        
        private System.Nullable<long> nextAuditField;
        
    /// <datatype>
    ///   AuditInfo[]
    /// </datatype>
    /// <value>
    ///   The list of audits.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuditInfo[] audits {
            get {
                return this.auditsField;
            }
            set {
                this.auditsField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   If set, indicates the sequence number of the next audit to be 
    ///   returned. 
    ///   Since audits are ordered from newest to oldest, setting this value in 
    ///   the seqNoEnd value of the AuditFilter of the next auditList operation 
    ///   will return the next series of audits. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> nextAudit {
            get {
                return this.nextAuditField;
            }
            set {
                this.nextAuditField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about an audit
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class AuditInfo {
        
        private long seqNoField;
        
        private System.DateTime dateField;
        
        private string hostField;
        
        private string levelField;
        
        private int codeField;
        
        private string symbolField;
        
        private string adminGroupField;
        
        private string adminNameField;
        
        private string targetTypeField;
        
        private string targetOpField;
        
        private string targetGroupField;
        
        private string targetNameField;
        
        private string targetSubnameField;
        
        private string serviceField;
        
        private string externalCodeField;
        
        private string externalServiceField;
        
        private string textField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The sequence number of the audit.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long seqNo {
            get {
                return this.seqNoField;
            }
            set {
                this.seqNoField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date on which the audit was generated
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The host of the audit.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The level of the audit.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The code of the audit.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The symbolic name for the code of the audit.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the administrator performing this operation. This value 
    ///   will be null if the audit was not generated by an administrator. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string adminGroup {
            get {
                return this.adminGroupField;
            }
            set {
                this.adminGroupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the administrator or master user performing this 
    ///   operation. This value will be null if the audit was not generated by an 
    ///   administrator or master user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string adminName {
            get {
                return this.adminNameField;
            }
            set {
                this.adminNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The target of the audit is the object that the operation was performed 
    ///   on. The targetType describes the type of the target object. Example 
    ///   target types include USER, USERCARD, USERTOKEN and POLICY. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetType {
            get {
                return this.targetTypeField;
            }
            set {
                this.targetTypeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The targetOp describes the operation performed on the target object. 
    ///   Example target operations include CREATE, DELETE and MODIFY. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetOp {
            get {
                return this.targetOpField;
            }
            set {
                this.targetOpField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The target of the audit is the object that the operation was performed 
    ///   on. If the name of the target includes a group, the targetGroup will 
    ///   be the group of the target object. An example of a name that 
    ///   includes a group are userids that include both a group and username. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetGroup {
            get {
                return this.targetGroupField;
            }
            set {
                this.targetGroupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The target of the audit is the object that the operation was performed 
    ///   on. The targetName will be the name of the target object. 
    ///   value will be the group of the userid. An example of an object name is 
    ///   the username of a user, the name of a policy, role or group or the 
    ///   serial number of an unassigned token or preproduced card. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetName {
            get {
                return this.targetNameField;
            }
            set {
                this.targetNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The target of the audit is the object that the operation was performed 
    ///   on. For objects that have subnames, the targetSubname will be the 
    ///   subname of the object. An example of a subname is the serial number for 
    ///   a user card or token. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string targetSubname {
            get {
                return this.targetSubnameField;
            }
            set {
                this.targetSubnameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Entrust IdentityGuard service that generated this audit.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this audit was generated by an external service, this value will 
    ///   include the code provided by the external service. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string externalCode {
            get {
                return this.externalCodeField;
            }
            set {
                this.externalCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this audit was generated by an external service, this value will 
    ///   include the service name provided by the external service. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string externalService {
            get {
                return this.externalServiceField;
            }
            set {
                this.externalServiceField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The text of this audit.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to auditList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class AuditListCallParms {
        
        private AuditFilter filterField;
        
    /// <datatype>
    ///   AuditFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which audits are to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AuditFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to auditGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class AuditGetCallParms {
        
        private long seqNoField;
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The sequence number of the audit to get.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long seqNo {
            get {
                return this.seqNoField;
            }
            set {
                this.seqNoField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure defines the results of an ipListList operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class IPListListResult {
        
        private string nextEntryField;
        
        private IPListEntry[] entriesField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If set, the next ipListList operation should specify this address as 
    ///   the start address in order to continue the list operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string nextEntry {
            get {
                return this.nextEntryField;
            }
            set {
                this.nextEntryField = value;
            }
        }
        
    /// <datatype>
    ///   IPListEntry[]
    /// </datatype>
    /// <value>
    ///   The list of entries returned by this ipListList operation.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public IPListEntry[] entries {
            get {
                return this.entriesField;
            }
            set {
                this.entriesField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure defines an entry in the IP blacklist.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class IPListEntry {
        
        private string startIPAddressField;
        
        private string endIPAddressField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The starting entry.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startIPAddress {
            get {
                return this.startIPAddressField;
            }
            set {
                this.startIPAddressField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The ending entry. If not set, it defaults to the start entry. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string endIPAddress {
            get {
                return this.endIPAddressField;
            }
            set {
                this.endIPAddressField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure defines search parameters for a ipListList operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class IPListFilter {
        
        private string startIPAddressField;
        
        private string endIPAddressField;
        
        private System.Nullable<int> maxReturnField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The starting entry. If not specified, start with the first entry. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string startIPAddress {
            get {
                return this.startIPAddressField;
            }
            set {
                this.startIPAddressField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The ending entry.  If not set, end with the last entry.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string endIPAddress {
            get {
                return this.endIPAddressField;
            }
            set {
                this.endIPAddressField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of entries to return.
    ///   If not specified or a value of 0 or less is specified, it defaults to 
    ///   100. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxReturn {
            get {
                return this.maxReturnField;
            }
            set {
                this.maxReturnField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to ipListList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class IPListListCallParms {
        
        private IPListFilter filterField;
        
    /// <datatype>
    ///   IPListFilter
    /// </datatype>
    /// <value>
    ///   Return the entries in the IP blacklist matching the given search 
    ///   parameters. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IPListFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to ipListGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class IPListGetCallParms {
        
        private string iPAddressField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Return the entry in the IP blacklist containing this IP address. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   ipListDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class IPListDeleteCallParms {
        
        private IPListEntry entryField;
        
    /// <datatype>
    ///   IPListEntry
    /// </datatype>
    /// <value>
    ///   The IP list entry to remove from the IP blacklist.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IPListEntry entry {
            get {
                return this.entryField;
            }
            set {
                this.entryField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to ipListAdd. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class IPListAddCallParms {
        
        private IPListEntry entryField;
        
    /// <datatype>
    ///   IPListEntry
    /// </datatype>
    /// <value>
    ///   The IP list entry to add to the IP blacklist.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IPListEntry entry {
            get {
                return this.entryField;
            }
            set {
                this.entryField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   challengeAuthenticate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ChallengeAuthenticateCallParms {
        
        private string useridField;
        
        private UserCardFilter cardFilterField;
        
        private string[] responseField;
        
        private System.Nullable<bool> obeyLockoutField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID to authenticate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCardFilter
    /// </datatype>
    /// <value>
    ///   The cards to authenticate against.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCardFilter cardFilter {
            get {
                return this.cardFilterField;
            }
            set {
                this.cardFilterField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The user's response to the challenge.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this flag is true, this operation will check the user's current 
    ///   lockout and update the lockout based on whether the response 
    ///   authenticates. If this flag is false, this operation will ignore lockout. If not 
    ///   set, this flag defaults to false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> obeyLockout {
            get {
                return this.obeyLockoutField;
            }
            set {
                this.obeyLockoutField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a filter to limit which cards are returned for a user. If both 
    ///   SerialNumber and State are set, SerialNumber is used. If neither are 
    ///   set, all cards for the user are returned. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCardFilter {
        
        private string serialNumberField;
        
        private State[] stateField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Filter cards that match the given serial number.
    ///   The value can include the '*' character for wildcard matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   State[]
    /// </datatype>
    /// <value>
    ///   Filter cards that match one of the given states.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public State[] State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   challengeGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ChallengeGetCallParms {
        
        private string useridField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get the challenge for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
    }
    
    /// <summary>
    ///   The data returned from a smartCredentialList operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialListResult {
        
        private SmartCredentialInfo[] smartCredentialsField;
        
        private string nextSmartCredentialSerialNumberField;
        
    /// <datatype>
    ///   SmartCredentialInfo[]
    /// </datatype>
    /// <value>
    ///   The list of smart credentials.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialInfo[] smartCredentials {
            get {
                return this.smartCredentialsField;
            }
            set {
                this.smartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If set, indicates that more smart credentials are left to be returned. 
    ///   The value can be set in the SmartCredentialFilter of the next 
    ///   smartCredentialList operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string nextSmartCredentialSerialNumber {
            get {
                return this.nextSmartCredentialSerialNumberField;
            }
            set {
                this.nextSmartCredentialSerialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about an unassigned smart credential. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialInfo {
        
        private string serialNumberField;
        
        private string cardUIDField;
        
        private byte[][] cardManagerKeysField;
        
        private System.Nullable<int> cardManagerKeyVersionField;
        
        private SmartCredentialState stateField;
        
        private System.DateTime loadDateField;
        
        private string groupField;
        
        private NameValue[] enrollmentValuesField;
        
        private string cardTypeField;
        
        private string commentField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the smart credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional UID of the card.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CardUID {
            get {
                return this.cardUIDField;
            }
            set {
                this.cardUIDField = value;
            }
        }
        
    /// <datatype>
    ///   Base64Binary[]
    /// </datatype>
    /// <value>
    ///   The card manager keys of this smart credential. If the administrator 
    ///   does not have permission to view the card manager keys, this value 
    ///   will be null. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=false)]
        public byte[][] CardManagerKeys {
            get {
                return this.cardManagerKeysField;
            }
            set {
                this.cardManagerKeysField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The version of the card manager keys of this smart credential. If the 
    ///   administrator does not have permission to view the card manager keys, 
    ///   this value will be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> CardManagerKeyVersion {
            get {
                return this.cardManagerKeyVersionField;
            }
            set {
                this.cardManagerKeyVersionField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialState
    /// </datatype>
    /// <value>
    ///   The state of the smart credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The load date of the smart credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime LoadDate {
            get {
                return this.loadDateField;
            }
            set {
                this.loadDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group this smart credential belongs to.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   A list of values provided for the smart credential when loaded from 
    ///   the data file. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] EnrollmentValues {
            get {
                return this.enrollmentValuesField;
            }
            set {
                this.enrollmentValuesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The type of card this smart credential represents.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The smart credential comment.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialListCallParms {
        
        private SmartCredentialFilter filterField;
        
    /// <datatype>
    ///   SmartCredentialFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which smart credentials are to be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialSetCallParms {
        
        private string serialNumberField;
        
        private SmartCredentialParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the smart credential to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialParms
    /// </datatype>
    /// <value>
    ///   The parameters to update the smart credential with.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when loading or modifying unassigned 
    ///   smart credentials. All values can be null indicating that the default is 
    ///   used when loading or the value is not changed for modify. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialParms {
        
        private string groupField;
        
        private System.Nullable<SmartCredentialState> stateField;
        
        private byte[] dataField;
        
        private string keyField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group this smart credential belongs to. If null during load, the 
    ///   smart credential will belong to the default group. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialState
    /// </datatype>
    /// <value>
    ///   The state of this smart credential.
    ///   during load, the state will default to ACTIVE.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialState> State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The smart credential data to load for the smartCredentialLoad 
    ///   operation. 
    ///   Ignored when modifying smart credentials.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The key used to unlock the smart credential data in the 
    ///   smartCredentialLoad operation. 
    ///   Ignored when modifying smart credentials.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The smart credential comment. Defaults to an empty string if not 
    ///   specified during a smartCredentialLoad operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialChallengeAuthenticate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialChallengeAuthenticateCallParms {
        
        private string serialNumberField;
        
        private SmartCredentialChallengeParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the smart credential to get an authentication 
    ///   challenge for. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialChallengeParms
    /// </datatype>
    /// <value>
    ///   The parameters used to authenticate the challenge response.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialChallengeParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when authenticating a smart card 
    ///   challenge. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialChallengeParms {
        
        private byte[] challengeField;
        
        private byte[] responseField;
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The challenge originally generated by calling 
    ///   smartCredentialChallengeGet. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] challenge {
            get {
                return this.challengeField;
            }
            set {
                this.challengeField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The response passed from the smart card.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialChallengeGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialChallengeGetCallParms {
        
        private string serialNumberField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the smart credential to get an authentication 
    ///   challenge for. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialGetCallParms {
        
        private string serialNumberField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the smart credential to get.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDeleteCallParms {
        
        private string serialNumberField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the smart credential to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information returned from the smartCredentialLoad operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLoadResult {
        
        private int numLoadedField;
        
        private int numFailedField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of smart credentials successfully loaded.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numLoaded {
            get {
                return this.numLoadedField;
            }
            set {
                this.numLoadedField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of smart credentials that failed to load.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numFailed {
            get {
                return this.numFailedField;
            }
            set {
                this.numFailedField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialLoad. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLoadCallParms {
        
        private SmartCredentialParms parmsField;
        
    /// <datatype>
    ///   SmartCredentialParms
    /// </datatype>
    /// <value>
    ///   The data to load.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   The data returned from a tokenList operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenListResult {
        
        private TokenInfo[] tokensField;
        
        private string nextTokenVendorIdField;
        
        private string nextTokenSerialNumberField;
        
    /// <datatype>
    ///   TokenInfo[]
    /// </datatype>
    /// <value>
    ///   The list of tokens.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public TokenInfo[] tokens {
            get {
                return this.tokensField;
            }
            set {
                this.tokensField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If set, indicates that more tokens are left to be returned. The value 
    ///   can be set in the TokenFilter of the next tokenList operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string nextTokenVendorId {
            get {
                return this.nextTokenVendorIdField;
            }
            set {
                this.nextTokenVendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If set, indicates that more tokens are left to be returned. The value 
    ///   can be set in the TokenFilter of the next tokenList operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string nextTokenSerialNumber {
            get {
                return this.nextTokenSerialNumberField;
            }
            set {
                this.nextTokenSerialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about an unassigned token.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenInfo {
        
        private string vendorIdField;
        
        private string serialNumberField;
        
        private string tokenTypeField;
        
        private bool responseSupportedField;
        
        private bool challengeSupportedField;
        
        private bool unlockSupportedField;
        
        private bool signatureSupportedField;
        
        private TokenActivationType currentActivationTypeField;
        
        private TokenActivationType[] availableActivationTypesField;
        
        private System.DateTime loadDateField;
        
        private string groupField;
        
        private string[] rolesGrantingAccessField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This value will contain the name of the token vendor if it is defined. 
    ///   Otherwise it will contain the vendor id of the token. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The type of the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TokenType {
            get {
                return this.tokenTypeField;
            }
            set {
                this.tokenTypeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this token supports token response-only 
    ///   authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ResponseSupported {
            get {
                return this.responseSupportedField;
            }
            set {
                this.responseSupportedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this token supports token challenge/response 
    ///   authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ChallengeSupported {
            get {
                return this.challengeSupportedField;
            }
            set {
                this.challengeSupportedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this token supports the unlock operation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool UnlockSupported {
            get {
                return this.unlockSupportedField;
            }
            set {
                this.unlockSupportedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this token supports the data signature operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool SignatureSupported {
            get {
                return this.signatureSupportedField;
            }
            set {
                this.signatureSupportedField = value;
            }
        }
        
    /// <datatype>
    ///   TokenActivationType
    /// </datatype>
    /// <value>
    ///   Value specifying what kind of activation is current configured for 
    ///   this token. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TokenActivationType CurrentActivationType {
            get {
                return this.currentActivationTypeField;
            }
            set {
                this.currentActivationTypeField = value;
            }
        }
        
    /// <datatype>
    ///   TokenActivationType[]
    /// </datatype>
    /// <value>
    ///   Value specifying what kind of activation types are available for this 
    ///   token. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public TokenActivationType[] AvailableActivationTypes {
            get {
                return this.availableActivationTypesField;
            }
            set {
                this.availableActivationTypesField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The load date of the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime LoadDate {
            get {
                return this.loadDateField;
            }
            set {
                this.loadDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group this token belongs to.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The token comment.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   The type of activation supported by the token.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum TokenActivationType {
        
    /// <value>
    ///   The token supports offline activation where an activation code is 
    ///   generated by Entrust IdentityGuard, sent to the end-user who manually 
    ///   enters it into the token. 
    /// </value>
        OFFLINE,
        
    /// <value>
    ///   The token supports online activation where an activation code is 
    ///   generated by Entrust IdentityGuard and downloaded by the token software. 
    ///   No user intervention is required. 
    /// </value>
        ONLINE,
        
    /// <value>
    ///   The token does not support activation.
    /// </value>
        NONE,
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to tokenList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenListCallParms {
        
        private TokenFilter filterField;
        
    /// <datatype>
    ///   TokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which tokens are to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to tokenSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenSetCallParms {
        
        private string vendorIdField;
        
        private string serialNumberField;
        
        private TokenParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The vendor id the token to update. If not specified, the default 
    ///   vendor is used. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string vendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the token to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   TokenParms
    /// </datatype>
    /// <value>
    ///   The parameters to update the token with.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TokenParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when loading or modifying unassigned 
    ///   tokens. All values can be null indicating that the default is used when 
    ///   loading or the value is not changed for modify. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenParms {
        
        private string vendorIdField;
        
        private string groupField;
        
        private string[] tokenDataField;
        
        private byte[] tokenBinaryDataField;
        
        private string tokenKeyField;
        
        private System.Nullable<TokenActivationType> activationTypeField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When loading tokens, the vendor to use for loading the tokens. If not 
    ///   specified, the default vendor is used. 
    ///   This value can contain either the name or ID of the token vendor. 
    ///   Either value will match the token vendor. 
    ///   This value is ignored when modifying tokens.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group this token belongs to. If null during load, the token will 
    ///   belong to the default group. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The token data to load for the tokenLoad operation where the data is 
    ///   specified as a list of text lines. 
    ///   Each element in the array is a line from the token data file. 
    ///   Ignored when modifying tokens.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] TokenData {
            get {
                return this.tokenDataField;
            }
            set {
                this.tokenDataField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The token data to load for the tokenLoad operation where the data is 
    ///   specified as binary data. 
    ///   Ignored when modifying tokens.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] TokenBinaryData {
            get {
                return this.tokenBinaryDataField;
            }
            set {
                this.tokenBinaryDataField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The token key used to unlock the token data in the tokenLoad 
    ///   operation. 
    ///   Ignored when modifying tokens.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string TokenKey {
            get {
                return this.tokenKeyField;
            }
            set {
                this.tokenKeyField = value;
            }
        }
        
    /// <datatype>
    ///   TokenActivationType
    /// </datatype>
    /// <value>
    ///   The activation type to be used for this token.
    ///   Can be specified for the tokenLoad or tokenSet methods.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<TokenActivationType> ActivationType {
            get {
                return this.activationTypeField;
            }
            set {
                this.activationTypeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The token comment. Defaults to an empty string if not specified during 
    ///   a tokenLoad operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to tokenGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenGetCallParms {
        
        private string vendorIdField;
        
        private string serialNumberField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The vendor id of the token to get. If not specified, the default 
    ///   vendor is used. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string vendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the token to get.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   tokenInitializeCancel. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenInitializeCancelCallParms {
        
        private string vendorIdField;
        
        private string serialNumberField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The vendor id of the token being initialized.
    ///   If not specified, the default vendor is used.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string vendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the token being initialized.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   tokenInitializeComplete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenInitializeCompleteCallParms {
        
        private string vendorIdField;
        
        private string serialNumberField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The vendor id of the token being initialized.
    ///   If not specified, the default vendor is used.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string vendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the token being initialized.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information returned from the tokenInitializeStart operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenInitializeResult {
        
        private TokenInfo tokenField;
        
        private string initializeCodeField;
        
        private byte[] initializeQRCodeField;
        
        private string initializeQRCodeLinkField;
        
    /// <datatype>
    ///   TokenInfo
    /// </datatype>
    /// <value>
    ///   The token that is being initialized
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TokenInfo token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   For token vendors that return a string value to be entered into the 
    ///   token, the initializeCode attribute will contain that value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string initializeCode {
            get {
                return this.initializeCodeField;
            }
            set {
                this.initializeCodeField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   For token vendors that return a QR code value to be entered into the 
    ///   token, the initializeQRCode attribute will contain that value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] initializeQRCode {
            get {
                return this.initializeQRCodeField;
            }
            set {
                this.initializeQRCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This value may include the value encoded into the QR code for 
    ///   applications that can't display the QR code. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string initializeQRCodeLink {
            get {
                return this.initializeQRCodeLinkField;
            }
            set {
                this.initializeQRCodeLinkField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   tokenInitializeStart. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenInitializeStartCallParms {
        
        private string vendorIdField;
        
        private string serialNumberField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The vendor id of the token being initialized.
    ///   If not specified, the default vendor is used.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string vendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the token being initialized.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   tokenDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenDeleteCallParms {
        
        private string vendorIdField;
        
        private string serialNumberField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The vendor id of the token to delete. If not specified, the default 
    ///   vendor is used. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string vendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the token to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information returned from the tokenLoad operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenLoadResult {
        
        private int numLoadedField;
        
        private int numFailedField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of tokens being successfully loaded.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numLoaded {
            get {
                return this.numLoadedField;
            }
            set {
                this.numLoadedField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of tokens that failed to load.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numFailed {
            get {
                return this.numFailedField;
            }
            set {
                this.numFailedField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to tokenLoad. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenLoadCallParms {
        
        private TokenParms parmsField;
        
    /// <datatype>
    ///   TokenParms
    /// </datatype>
    /// <value>
    ///   The data to load.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TokenParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   preproducedCardExport. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PreproducedCardExportCallParms {
        
        private PreproducedCardFilter filterField;
        
        private NameValue[] parmsField;
        
    /// <datatype>
    ///   PreproducedCardFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which cards are to be exported.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PreproducedCardFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   A list of parameters. Not currently used.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   The data returned from a PreproducedCardList operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PreproducedCardListResult {
        
        private PreproducedCardInfo[] cardsField;
        
        private string nextCardField;
        
    /// <datatype>
    ///   PreproducedCardInfo[]
    /// </datatype>
    /// <value>
    ///   The list of cards.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public PreproducedCardInfo[] cards {
            get {
                return this.cardsField;
            }
            set {
                this.cardsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If set, indicates that more cards are left to be returned. This value 
    ///   can be included in the filter for a further search to continue the 
    ///   search at the next preproduced card. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string nextCard {
            get {
                return this.nextCardField;
            }
            set {
                this.nextCardField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about a preproduced card.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PreproducedCardInfo {
        
        private string serialNumberField;
        
        private System.DateTime createDateField;
        
        private Grid gridField;
        
        private string groupField;
        
        private string[] rolesGrantingAccessField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the card.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The create date of the card.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
    /// <datatype>
    ///   Grid
    /// </datatype>
    /// <value>
    ///   The contents of the card. The value will be null if the operation used 
    ///   to retrieve the card did not request the grid, or if the caller does 
    ///   not have permission to view the grid. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public Grid Grid {
            get {
                return this.gridField;
            }
            set {
                this.gridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group this preproduced card belongs to.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The card comment.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   A two-dimensional card grid. The grid is represented as a 
    ///   one-dimensional array due to the number of interoperability problems that arise 
    ///   when multi-dimensional arrays are used. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class Grid {
        
        private int numRowsField;
        
        private int numColumnsField;
        
        private GridCell[] cellsField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of rows in the grid.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numRows {
            get {
                return this.numRowsField;
            }
            set {
                this.numRowsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of columns in the grid.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numColumns {
            get {
                return this.numColumnsField;
            }
            set {
                this.numColumnsField = value;
            }
        }
        
    /// <datatype>
    ///   GridCell
    /// </datatype>
    /// <value>
    ///   The cells in the grid.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute("cells", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GridCell[] cells {
            get {
                return this.cellsField;
            }
            set {
                this.cellsField = value;
            }
        }
    }
    
    /// <summary>
    ///   An individual cell in a card grid.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class GridCell {
        
        private int rowField;
        
        private int columnField;
        
        private string valueField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The row in which the cell appears. Row indexes start at 0 and go up to 
    ///   numRows-1 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int row {
            get {
                return this.rowField;
            }
            set {
                this.rowField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The column in which the cell appears. Column indexes start at 0 and go 
    ///   up to numColumns-1 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The value of the cell.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   preproducedCardList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PreproducedCardListCallParms {
        
        private PreproducedCardFilter filterField;
        
        private CardGetParms parmsField;
        
    /// <datatype>
    ///   PreproducedCardFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which cards are to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PreproducedCardFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   CardGetParms
    /// </datatype>
    /// <value>
    ///   Parameters that control what information is returned for each card. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public CardGetParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information returned about a card.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CardGetParms {
        
        private System.Nullable<bool> getGridField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns the card grid. If not set, defaults to false. 
    ///   Even if requested, the card grid will not be returned if the caller 
    ///   does not have permission to view card grids. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getGrid {
            get {
                return this.getGridField;
            }
            set {
                this.getGridField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   preproducedCardSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PreproducedCardSetCallParms {
        
        private string serialNumberField;
        
        private PreproducedCardParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the card to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   PreproducedCardParms
    /// </datatype>
    /// <value>
    ///   The parameters to update each card with.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PreproducedCardParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when creating or modifying a preproduced 
    ///   card. All values can be null indicating that the default is used for 
    ///   create or the value is not changed for modify. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PreproducedCardParms {
        
        private System.Nullable<int> numCardsField;
        
        private string groupField;
        
        private string commentField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   During card creation, this value will define how many preproduced 
    ///   cards are to be created. 
    ///   If not set, one card will be created. This parameter is ignored by 
    ///   preproduced card modify. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> NumCards {
            get {
                return this.numCardsField;
            }
            set {
                this.numCardsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group this preproduced card belongs to. If null during create, the 
    ///   card will belong to the group flagged as the default. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The card comment. Defaults to an empty string when creating new 
    ///   preproduced cards. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   preproducedCardGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PreproducedCardGetCallParms {
        
        private string serialNumberField;
        
        private CardGetParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the card to get.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   CardGetParms
    /// </datatype>
    /// <value>
    ///   Parameters that control what information is returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public CardGetParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   preproducedCardDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PreproducedCardDeleteCallParms {
        
        private string serialNumberField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the preproduced card to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about the preproduced card create 
    ///   operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PreproducedCardCreateResult {
        
        private int numCreatedField;
        
        private int numRequestedField;
        
        private string firstSerialNumberField;
        
        private string lastSerialNumberField;
        
        private AdminServiceFault failureReasonField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of cards that were successfully created.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NumCreated {
            get {
                return this.numCreatedField;
            }
            set {
                this.numCreatedField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of cards requested to be created.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NumRequested {
            get {
                return this.numRequestedField;
            }
            set {
                this.numRequestedField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the first card created.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FirstSerialNumber {
            get {
                return this.firstSerialNumberField;
            }
            set {
                this.firstSerialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the last card created.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LastSerialNumber {
            get {
                return this.lastSerialNumberField;
            }
            set {
                this.lastSerialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   AdminServiceFault
    /// </datatype>
    /// <value>
    ///   The fault describing why the operation failed after some cards were 
    ///   created. Null if the operation didn't fail. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public AdminServiceFault FailureReason {
            get {
                return this.failureReasonField;
            }
            set {
                this.failureReasonField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the base exception that will be returned when operations fail. 
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdminPasswordChangeRequiredFault))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class AdminServiceFault {
        
        private ErrorCode errorCodeField;
        
        private string internalCodeField;
        
        private string errorMessageField;
        
        private string idField;
        
        private string[] paramsField;
        
        private AdminServiceFault causeFaultField;
        
    /// <datatype>
    ///   ErrorCode
    /// </datatype>
    /// <value>
    ///   Error code indicating the reason for the failure.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ErrorCode ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The internal code indicating the reason for the failure.
    ///   This code corresponds to the codes documented in the error guide and 
    ///   the values logged by the Entrust IdentityGuard Server. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InternalCode {
            get {
                return this.internalCodeField;
            }
            set {
                this.internalCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The descriptive error message string corresponding the InternalCode. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   An instance specific value that will be included in the Entrust 
    ///   IdentityGuard logs. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of the parameters associated with the error message of this 
    ///   exception. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Params {
            get {
                return this.paramsField;
            }
            set {
                this.paramsField = value;
            }
        }
        
    /// <datatype>
    ///   AdminServiceFault
    /// </datatype>
    /// <value>
    ///   If this fault was caused by another fault, specifies the causal fault. 
    ///   Otherwise, this element will be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public AdminServiceFault causeFault {
            get {
                return this.causeFaultField;
            }
            set {
                this.causeFaultField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines error codes that will be included in the exceptions returned 
    ///   from operations. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum ErrorCode {
        
    /// <value>
    ///   An operation has specified a userid that does not exist.
    /// </value>
        USER_NOT_EXIST,
        
    /// <value>
    ///   The specified user already exists.
    /// </value>
        USER_EXIST,
        
    /// <value>
    ///   An operation has specified username that exists in multiple groups. 
    ///   The group must also be included to specify a single user. 
    /// </value>
        USERNAME_NOT_UNIQUE,
        
    /// <value>
    ///   An operation has specified a card that does not exist.
    /// </value>
        CARD_NOT_EXIST,
        
    /// <value>
    ///   A card can not be created for a user because the user already has a 
    ///   pending card. 
    /// </value>
        CARD_EXIST,
        
    /// <value>
    ///   The user does not have a temporary PIN.
    /// </value>
        PIN_NOT_EXIST,
        
    /// <value>
    ///   The user already has a temporary PIN.
    /// </value>
        PIN_EXIST,
        
    /// <value>
    ///   An administrator can not change a user's PVN to not require change 
    ///   when this is not allowed by policy. 
    /// </value>
        PVN_CHANGE_REQUIRED,
        
    /// <value>
    ///   When assigning a new PVN to a user, the optional old PVN did not match 
    ///   the existing PVN. 
    /// </value>
        PVN_INVALID,
        
    /// <value>
    ///   An operation has specified a token that does not exist.
    /// </value>
        TOKEN_NOT_EXIST,
        
    /// <value>
    ///   A token can not be assigned to a user because the user already has a 
    ///   token in that state. 
    /// </value>
        TOKEN_EXIST,
        
    /// <value>
    ///   The specified object does not exist.
    /// </value>
        OBJECT_NOT_EXIST,
        
    /// <value>
    ///   The specified object already exists.
    /// </value>
        OBJECT_EXIST,
        
    /// <value>
    ///   The specified card is not in a state that allows the operation or the 
    ///   state of the card can not be changed to the specified state. 
    /// </value>
        INVALID_CARD_STATE,
        
    /// <value>
    ///   The specified token is not in a state that allows the operation or the 
    ///   state of the token can not be changed to the specified state. 
    /// </value>
        INVALID_TOKEN_STATE,
        
    /// <value>
    ///   An invalid argument was specified for the operation.
    /// </value>
        INVALID_ARGUMENT,
        
    /// <value>
    ///   An authentication operation was performed but the required challenge 
    ///   does not exist. 
    /// </value>
        CHALLENGE_NOT_EXIST,
        
    /// <value>
    ///   An authentication operation was performed and the response was 
    ///   invalid. 
    /// </value>
        INVALID_RESPONSE,
        
    /// <value>
    ///   An administration operation was performed but no administrator is 
    ///   logged in. 
    /// </value>
        NOT_LOGGED_IN,
        
    /// <value>
    ///   An administrator specified an invalid userid or password when trying 
    ///   to login. 
    /// </value>
        INVALID_USERID_PASSWORD,
        
    /// <value>
    ///   The administrator can not login because they are locked out.
    /// </value>
        ADMIN_LOCKED,
        
    /// <value>
    ///   The administrator can not login because they require a password 
    ///   change. 
    /// </value>
        PASSWORD_CHANGE_REQUIRED,
        
    /// <value>
    ///   The administrator's login session has expired.
    ///   The administrator will need to login again.
    /// </value>
        SESSION_EXPIRED,
        
    /// <value>
    ///   The administrator is not in the active state.
    /// </value>
        ADMIN_INACTIVE,
        
    /// <value>
    ///   The requested operation cannot proceed because the user's account in 
    ///   the repository has been disabled. 
    ///   This only applies to users with LDAP directory accounts.
    /// </value>
        REPOSITORY_ACCOUNT_DISABLED,
        
    /// <value>
    ///   The requested operation cannot proceed because the user's account in 
    ///   the repository has expired. 
    ///   This only applies to users with LDAP directory accounts.
    /// </value>
        REPOSITORY_ACCOUNT_EXPIRED,
        
    /// <value>
    ///   The administrator can not login because they specified an invalid 
    ///   password or challenge response that has locked them out. 
    /// </value>
        LOGIN_FAILED_ADMIN_LOCKED,
        
    /// <value>
    ///   A miscellaneous error.
    /// </value>
        MISC,
        
    /// <value>
    ///   The administrator's role does not allow the operation to be performed, 
    ///   or the operation being performed is not permitted by the system. For 
    ///   example, deleting the group flagged as the default is never 
    ///   permitted, no matter what the administrator's role allows. 
    /// </value>
        NOT_PERMITTED,
        
    /// <value>
    ///   The specified license is invalid or expired.
    /// </value>
        INVALID_LICENSE,
        
    /// <value>
    ///   A token does not support the specified operation.
    /// </value>
        NOT_SUPPORTED,
        
    /// <value>
    ///   An authentication operation was called specifying a user who has 
    ///   responded incorrectly to a challenge too many times. The user is locked 
    ///   out of their account. 
    /// </value>
        USER_LOCKED,
        
    /// <value>
    ///   An authentication operation was made to authenticate a user and the 
    ///   response was incorrect. The user is locked out of their account. 
    /// </value>
        AUTH_FAILED_USER_LOCKED,
        
    /// <value>
    ///   The user's OTP is expired.
    /// </value>
        OTP_EXPIRED,
        
    /// <value>
    ///   The specified federation already exists.
    /// </value>
        FEDERATION_EXIST,
        
    /// <value>
    ///   An administrator provided an invalid certificate or no certificate 
    ///   when trying to login. 
    /// </value>
        INVALID_CERTIFICATE,
        
    /// <value>
    ///   A call to userSmartCredentialSignComplete has failed because the 
    ///   response to the signature request is not available yet. 
    /// </value>
        NO_RESPONSE,
        
    /// <value>
    ///   A call to userSmartCredentialSignComplete has failed because the user 
    ///   responded with concern. 
    /// </value>
        CONCERN_RESPONSE,
        
    /// <value>
    ///   A call to userSmartCredentialSignComplete has failed because the user 
    ///   responded with cancel. 
    /// </value>
        CANCEL_RESPONSE,
        
    /// <value>
    ///   A call to userSmartCredentialValidate or 
    ///   userSmartCredentialTransactionValidate has failed because the specified transaction does not exist 
    ///   or does not match the current transaction. 
    /// </value>
        INVALID_TRANSACTION,
        
    /// <value>
    ///   An internal error that is mapped to a new ErrorCode in a future 
    ///   version of the API. 
    /// </value>
        FUTURE_ERROR,
    }
    
    /// <summary>
    ///   Defines an exception returned when a login operation fails because the 
    ///   administrator requires a password change. In addition to the values 
    ///   included in the AdminServiceFault, it also includes the current 
    ///   password rules which define the requirements of the new password. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class AdminPasswordChangeRequiredFault : AdminServiceFault {
        
        private PasswordRulesInfo passwordRulesField;
        
    /// <datatype>
    ///   PasswordRulesInfo
    /// </datatype>
    /// <value>
    ///   The password rules defining the requirements for the new password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PasswordRulesInfo PasswordRules {
            get {
                return this.passwordRulesField;
            }
            set {
                this.passwordRulesField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a password policy used to specify the rules newly created 
    ///   passwords must obey. The password rules for the default policy apply to 
    ///   master users as well as regular users of the system. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PasswordRulesInfo {
        
        private string nameField;
        
        private string passwordNameField;
        
        private int minLengthField;
        
        private int lifetimeField;
        
        private int minLifetimeField;
        
        private int historyField;
        
        private bool uniqueField;
        
        private System.Nullable<int> idleTimeoutField;
        
        private System.Nullable<int> confirmationIntervalField;
        
        private PasswordCharacterType uppercaseField;
        
        private int uppercaseRequiredField;
        
        private PasswordCharacterType lowercaseField;
        
        private int lowercaseRequiredField;
        
        private PasswordCharacterType numberField;
        
        private int numberRequiredField;
        
        private PasswordCharacterType specialField;
        
        private int specialRequiredField;
        
        private System.Nullable<AuthenticationType> firstAuthField;
        
        private System.Nullable<AuthenticationType> secondAuthField;
        
        private System.Nullable<bool> samlAuthAllowedField;
        
        private System.Nullable<bool> smartcredentialAuthAllowedField;
        
        private System.Nullable<bool> headerAuthAllowedField;
        
        private PasswordStorage storageField;
        
        private int maxRepeatedCharsField;
        
        private int maxPasswordChangeTimeField;
        
        private int maxPasswordFailuresField;
        
        private string[] rolesGrantingAccessField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the password policy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of a password. This value will be specified for a named 
    ///   password rules and null for the default password rules. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string passwordName {
            get {
                return this.passwordNameField;
            }
            set {
                this.passwordNameField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The minimum length of the password.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int minLength {
            get {
                return this.minLengthField;
            }
            set {
                this.minLengthField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The lifetime of the password in days. A value of 0 means the password 
    ///   has an infinite lifetime. This value does not apply to master user 
    ///   passwords. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int lifetime {
            get {
                return this.lifetimeField;
            }
            set {
                this.lifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The minimum lifetime of the password in days. A value of 0 means the 
    ///   password has no minimum lifetime. This value controls how frequently 
    ///   users can change their passwords. 
    ///   This value does not apply to master user passwords.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int minLifetime {
            get {
                return this.minLifetimeField;
            }
            set {
                this.minLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of old passwords kept in history to prevent duplicates. 
    ///   This value does not apply to master user passwords. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int history {
            get {
                return this.historyField;
            }
            set {
                this.historyField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, a new password value for this password must be unique with 
    ///   respect to the current password values of all other passwords for the 
    ///   user in addition to not matching any passwords in its history. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool unique {
            get {
                return this.uniqueField;
            }
            set {
                this.uniqueField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The time in minutes before a logged in but idle administration service 
    ///   session requires relogin. 
    ///   A value of 0 means a logged in session will not be timed out by this 
    ///   value, but will instead be timed out by the session timeout configured 
    ///   in the application server. 
    ///   This value will not be set for named password rules.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> idleTimeout {
            get {
                return this.idleTimeoutField;
            }
            set {
                this.idleTimeoutField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The interval in seconds that a logged in administration service 
    ///   session is validated to ensure that the administrator is still a valid 
    ///   administrator. A negative value indicates that the administrator is only 
    ///   validated at login time. A value of 0 that the administrator is 
    ///   validated during each request. 
    ///   This value will not be set for named password rules.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> confirmationInterval {
            get {
                return this.confirmationIntervalField;
            }
            set {
                this.confirmationIntervalField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordCharacterType
    /// </datatype>
    /// <value>
    ///   Specify whether an uppercase character is required, allowed or not 
    ///   allowed in the password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PasswordCharacterType uppercase {
            get {
                return this.uppercaseField;
            }
            set {
                this.uppercaseField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If uppercase characters are required, specify the number of uppercase 
    ///   characters required. 
    ///   The specified value must be a positive integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int uppercaseRequired {
            get {
                return this.uppercaseRequiredField;
            }
            set {
                this.uppercaseRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordCharacterType
    /// </datatype>
    /// <value>
    ///   Specify whether a lowercase character is required, allowed or not 
    ///   allowed in the password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PasswordCharacterType lowercase {
            get {
                return this.lowercaseField;
            }
            set {
                this.lowercaseField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If lowercase characters are required, specify the number of lowercase 
    ///   characters required. 
    ///   The specified value must be a positive integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int lowercaseRequired {
            get {
                return this.lowercaseRequiredField;
            }
            set {
                this.lowercaseRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordCharacterType
    /// </datatype>
    /// <value>
    ///   Specify whether a numeric character is required, allowed or not 
    ///   allowed in the password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PasswordCharacterType number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If numeric characters are required, specify the number of numeric 
    ///   characters required. 
    ///   The specified value must be a positive integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberRequired {
            get {
                return this.numberRequiredField;
            }
            set {
                this.numberRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordCharacterType
    /// </datatype>
    /// <value>
    ///   Specify whether a non-alphanumeric character is required, allowed or 
    ///   not allowed in the password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PasswordCharacterType special {
            get {
                return this.specialField;
            }
            set {
                this.specialField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If special characters are required, specify the number of special 
    ///   characters required. 
    ///   The specified value must be a positive integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int specialRequired {
            get {
                return this.specialRequiredField;
            }
            set {
                this.specialRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType
    /// </datatype>
    /// <value>
    ///   The type of first-factor authentication used by an administrator to 
    ///   login to the administration service. Allowed values are PASSWORD and 
    ///   EXTERNAL. 
    ///   This attribute will not be set for named password rules.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<AuthenticationType> firstAuth {
            get {
                return this.firstAuthField;
            }
            set {
                this.firstAuthField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType
    /// </datatype>
    /// <value>
    ///   If set to one of the values GRID, TOKENRO or TOKENCR then an 
    ///   administrator will require this type of second factor authentication to login 
    ///   to the administration service. If set to the value NONE, the 
    ///   administrator will not require second factor authentication to login. This 
    ///   value does not apply to master user login attempts. 
    ///   This attribute will not be set for named password rules.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<AuthenticationType> secondAuth {
            get {
                return this.secondAuthField;
            }
            set {
                this.secondAuthField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, an administrator is allowed to use a SAML assertion to login 
    ///   to the administration service. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> samlAuthAllowed {
            get {
                return this.samlAuthAllowedField;
            }
            set {
                this.samlAuthAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, an administrator is allowed to use Smart Credential 
    ///   authentication to login to the administration service. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> smartcredentialAuthAllowed {
            get {
                return this.smartcredentialAuthAllowedField;
            }
            set {
                this.smartcredentialAuthAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, an administrator is allowed to use header based 
    ///   authentication to login to the administration service. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> headerAuthAllowed {
            get {
                return this.headerAuthAllowedField;
            }
            set {
                this.headerAuthAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordStorage
    /// </datatype>
    /// <value>
    ///   Indicates how the password values are stored in the repository. This 
    ///   value does not apply to how master user passwords are stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PasswordStorage storage {
            get {
                return this.storageField;
            }
            set {
                this.storageField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of times a character can be repeated consecutively 
    ///   in a password. 
    ///   A value of 0 means there is no restriction.
    ///   The default for a new policy is 0.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxRepeatedChars {
            get {
                return this.maxRepeatedCharsField;
            }
            set {
                this.maxRepeatedCharsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum time in hours in which a password which has been set to 
    ///   require change must be changed. 
    ///   A value of 0 means there is no restriction.
    ///   The default for a new policy is 0.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxPasswordChangeTime {
            get {
                return this.maxPasswordChangeTimeField;
            }
            set {
                this.maxPasswordChangeTimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive PASSWORD authentication failures allowed 
    ///   before a user is locked out. A value of 0 means the user is never locked 
    ///   out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxPasswordFailures {
            get {
                return this.maxPasswordFailuresField;
            }
            set {
                this.maxPasswordFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Descriptive comments.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the rules used to control the content of a password.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public enum PasswordCharacterType {
        
    /// <value>
    ///   The password value cannot have characters of the specified type. 
    /// </value>
        NOT_ALLOWED,
        
    /// <value>
    ///   The password value can have characters of the specified type. 
    /// </value>
        ALLOWED,
        
    /// <value>
    ///   The password value must have characters of the specified type. 
    /// </value>
        REQUIRED,
    }
    
    /// <summary>
    ///   Defines the choices for how to encode password values in the 
    ///   repository. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum PasswordStorage {
        
    /// <value>
    ///   Indicates that user's passwords are hashed before being encrypted, 
    ///   meaning the server does not store the actual password. 
    /// </value>
        HASHED,
        
    /// <value>
    ///   Indicates that user's passwords are stored in an encrypted fashion, 
    ///   and the server can access the actual password. 
    /// </value>
        ENCRYPTED,
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   preproducedCardCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PreproducedCardCreateCallParms {
        
        private PreproducedCardParms parmsField;
        
    /// <datatype>
    ///   PreproducedCardParms
    /// </datatype>
    /// <value>
    ///   The parameters for the new cards.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PreproducedCardParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   The data returned from a userCertificateList operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateListResult {
        
        private UserCertificateInfo[] certificatesField;
        
        private string nextUserField;
        
    /// <datatype>
    ///   UserCertificateInfo[]
    /// </datatype>
    /// <value>
    ///   The list of certificates.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserCertificateInfo[] certificates {
            get {
                return this.certificatesField;
            }
            set {
                this.certificatesField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The next user number. If set to a non-zero value, indicates that this 
    ///   result only includes a subset of the results, and additional user 
    ///   certificates have not yet been returned. This value can be included in 
    ///   the filter for a further search to continue the search at the next 
    ///   user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string nextUser {
            get {
                return this.nextUserField;
            }
            set {
                this.nextUserField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about a user certificate.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private string issuerDNField;
        
        private string subjectDNField;
        
        private string serialNumberField;
        
        private CertificateState stateField;
        
        private bool selfSignedField;
        
        private string caField;
        
        private System.DateTime assignDateField;
        
        private System.DateTime issueDateField;
        
        private System.DateTime expiryDateField;
        
        private System.Nullable<System.DateTime> lastUsedDateField;
        
        private string commentField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID that owns the certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name of the user ID  that owns the certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user ID that owns the certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The issuer DN of the certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IssuerDN {
            get {
                return this.issuerDNField;
            }
            set {
                this.issuerDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The subject DN of the certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SubjectDN {
            get {
                return this.subjectDNField;
            }
            set {
                this.subjectDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   CertificateState
    /// </datatype>
    /// <value>
    ///   The state of the certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CertificateState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this certificate is self-signed.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool SelfSigned {
            get {
                return this.selfSignedField;
            }
            set {
                this.selfSignedField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the registered CA that issued this certificate. This value 
    ///   will be null if the certificate is self-signed or was issued by a 
    ///   non-registered CA. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CA {
            get {
                return this.caField;
            }
            set {
                this.caField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date this certificate was assigned to the user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime AssignDate {
            get {
                return this.assignDateField;
            }
            set {
                this.assignDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date this certificate was issued.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime IssueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date this certificate will expire.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date this certificate was last used for authentication. This value 
    ///   will be null if the certificate has never been used for 
    ///   authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> LastUsedDate {
            get {
                return this.lastUsedDateField;
            }
            set {
                this.lastUsedDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A comment associated with this certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCertificateList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateListCallParms {
        
        private UserFilter filterField;
        
    /// <datatype>
    ///   UserFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which certificates are to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCertificateAuthenticate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateAuthenticateCallParms {
        
        private string useridField;
        
        private UserCertificateFilter filterField;
        
        private string responseField;
        
        private System.Nullable<bool> obeyLockoutField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to authenticate using a certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCertificateFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which certificate is to be used for 
    ///   authentication. The filter must evaluate to a single certificate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCertificateFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The response to authenticate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this flag is true, this operation will check the user's current 
    ///   lockout and update the lockout based on whether the response 
    ///   authenticates. If this flag is false, this operation will ignore lockout. If not 
    ///   set, this flag defaults to false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> obeyLockout {
            get {
                return this.obeyLockoutField;
            }
            set {
                this.obeyLockoutField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a filter to limit which tokens are returned for a user. If 
    ///   both IssuerDN/SerialNumber and State are set, IssuerDN/SerialNumber is 
    ///   used. If neither are set, all certificates for the user are returned. 
    ///   If IssuerDN is specified, the SerialNumber must be specified. If 
    ///   SerialNumber is specified, the IssuerDN is optional. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateFilter {
        
        private string issuerDNField;
        
        private string serialNumberField;
        
        private CertificateState[] stateField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Return user certificates whose issuer DN matches the given value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string IssuerDN {
            get {
                return this.issuerDNField;
            }
            set {
                this.issuerDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Return user certificates whose serial number matches the given value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   CertificateState[]
    /// </datatype>
    /// <value>
    ///   Return user certificates whose state matches one of the given value. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CertificateState[] State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains information about a smart credential that can 
    ///   be used to authenticate a certificate challenge. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public partial class SmartCredentialData {
        
        private string smartCredentialIdField;
        
        private string friendlyNameField;
        
        private bool supportsSecurityChallengeField;
        
        private bool mobileField;
        
        private DeliveryStatus deliveryStatusField;
        
        private string responseField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id of the smart credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SmartCredentialId {
            get {
                return this.smartCredentialIdField;
            }
            set {
                this.smartCredentialIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional friendly name of the smart credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FriendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this smart credential supports delivery security 
    ///   challenges. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportsSecurityChallenge {
            get {
                return this.supportsSecurityChallengeField;
            }
            set {
                this.supportsSecurityChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this smart credential is mobile or not.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
    /// <datatype>
    ///   DeliveryStatus
    /// </datatype>
    /// <value>
    ///   A value indicating if the certificate challenge and/or transaction 
    ///   details were delivered as part of generating the challenge. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DeliveryStatus DeliveryStatus {
            get {
                return this.deliveryStatusField;
            }
            set {
                this.deliveryStatusField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When included in the authenticateGenericChallenge response this value 
    ///   will include the base-64 encoded signed challenge response. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <summary>
    ///   This enumerated type defines the possible results of delivering 
    ///   transaction details to a token or smart credential. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public enum DeliveryStatus {
        
    /// <value>
    ///   The transaction details were successfully delivered to the transaction 
    ///   service. 
    /// </value>
        OK,
        
    /// <value>
    ///   An attempt to deliver the transaction details to the transaction 
    ///   service failed. This status probably indicates that either the transaction 
    ///   service was not running or the configured password was incorrect. 
    /// </value>
        ERROR,
        
    /// <value>
    ///   Transaction delivery would have been performed for this request but 
    ///   the transaction service was not configured. 
    /// </value>
        NONE,
        
    /// <value>
    ///   Transaction delivery was not applicable for this token or smart 
    ///   credential. 
    ///   This might indicate that transaction details were not specified for 
    ///   this operation, the token or smart credential does not support delivery 
    ///   of transaction details or delivery of transaction details was 
    ///   disabled for this request. 
    /// </value>
        NA,
    }
    
    /// <summary>
    ///   This structure contains information about a certificate that can be 
    ///   used to authenticate a certificate challenge. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public partial class CertificateData {
        
        private string issuerDNField;
        
        private string subjectDNField;
        
        private string serialNumberField;
        
        private System.DateTime issueDateField;
        
        private System.DateTime expiryDateField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The issuer DN of the certificate
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IssuerDN {
            get {
                return this.issuerDNField;
            }
            set {
                this.issuerDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The subject DN of the certificate
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SubjectDN {
            get {
                return this.subjectDNField;
            }
            set {
                this.subjectDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The issue date of the certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime IssueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The expiry date of the certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains information about a certificate challenge. 
    ///   To authenticate a certificate challenge, the client should hash the 
    ///   challenge using one of the listed allowed hashing algorithms and then 
    ///   sign the resulting value using the private key corresponding to one of 
    ///   the specified certificates or smart credentials. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public partial class CertificateChallenge {
        
        private string challengeField;
        
        private string hashingAlgorithmField;
        
        private CertificateData[] certificatesField;
        
        private SmartCredentialData[] smartCredentialsField;
        
        private string transactionIdField;
        
        private System.DateTime createDateField;
        
        private int lifetimeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The certificate challenge. The application must hash and sign this 
    ///   challenge to authenticate the challenge. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string challenge {
            get {
                return this.challengeField;
            }
            set {
                this.challengeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The hashing algorithm to be used to hash the challenge before it is 
    ///   signed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string hashingAlgorithm {
            get {
                return this.hashingAlgorithmField;
            }
            set {
                this.hashingAlgorithmField = value;
            }
        }
        
    /// <datatype>
    ///   CertificateData[]
    /// </datatype>
    /// <value>
    ///   The certificates that can be used to authenticate the challenge. The 
    ///   application must use a private key corresponding to one of the 
    ///   certificates or one of the smart credentials to sign the hash of the 
    ///   challenge. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CertificateData[] certificates {
            get {
                return this.certificatesField;
            }
            set {
                this.certificatesField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialData[]
    /// </datatype>
    /// <value>
    ///   The smart credentials that can be used to authenticate the challenge. 
    ///   The application must use a private key corresponding to one of the 
    ///   certificates or one of the smart credentials to sign the hash of the 
    ///   challenge. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialData[] smartCredentials {
            get {
                return this.smartCredentialsField;
            }
            set {
                this.smartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The transaction id associated with this request.
    ///   This value will be set only when the challenge was delivered to one or 
    ///   more smart credentials. This transaction id should be specified in a 
    ///   subsequent authenticateGenericChallenge call when the application 
    ///   doesn't provide a response expected the response to be returned to 
    ///   Entrust IdentityGuard out of band. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string TransactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The time that this challenge was created.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The lifetime of this challenge in seconds.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Lifetime {
            get {
                return this.lifetimeField;
            }
            set {
                this.lifetimeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCertificateChallenge. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateChallengeCallParms {
        
        private string useridField;
        
        private UserCertificateFilter filterField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user which owns the token for which a challenge will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCertificateFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which certificate is to be used to generate the 
    ///   challenge. The filter must evaluate to a single certificate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCertificateFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCertificateSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateSetCallParms {
        
        private string useridField;
        
        private UserCertificateFilter filterField;
        
        private UserCertificateParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to update certificates for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCertificateFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which certificates are to be updated for the 
    ///   user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCertificateFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   UserCertificateParms
    /// </datatype>
    /// <value>
    ///   The parameters to update each certificate with.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCertificateParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when assigning or modifying a user 
    ///   certificate. All values can be null indicating that the default is used 
    ///   for assign or the value is not changed for modify. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateParms {
        
        private System.Nullable<CertificateState> stateField;
        
        private string dataField;
        
        private string commentField;
        
    /// <datatype>
    ///   CertificateState
    /// </datatype>
    /// <value>
    ///   The state of the certificate. This value can be used to set the state 
    ///   of the certificate when assigning or modifying a certificate. 
    ///   If not set during the assign operation, it defaults to ACTIVE. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<CertificateState> State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A Base-64 encoded X.509 certificate or P7. This value must be 
    ///   specified during an assign operation. If specified during a modify this value 
    ///   is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A comment for the certificate. This value can be specified during 
    ///   either an assign or modify operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCertificateGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateGetCallParms {
        
        private string useridField;
        
        private UserCertificateFilter filterField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get tokens for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCertificateFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which certificates are to be returned for the 
    ///   user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCertificateFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCertificateDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateDeleteCallParms {
        
        private string useridField;
        
        private UserCertificateFilter filterField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to delete certificates for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCertificateFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which certificates are to be deleted from the 
    ///   user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCertificateFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure defines the values returned by a call to 
    ///   userCertificateExport. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateExportResult {
        
        private string issuerDNField;
        
        private string serialNumberField;
        
        private CertificateDataType typeField;
        
        private string dataField;
        
        private string mD5HashField;
        
        private string sHA1HashField;
        
        private string sHA256HashField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Issuer DN of the certificate being exported.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string issuerDN {
            get {
                return this.issuerDNField;
            }
            set {
                this.issuerDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the certificate being exported.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   CertificateDataType
    /// </datatype>
    /// <value>
    ///   The type of certificate data being exported.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CertificateDataType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The base-64 encoded certificate or PKCS#7 data.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The MD5 hash of the data being exported.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MD5Hash {
            get {
                return this.mD5HashField;
            }
            set {
                this.mD5HashField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The SHA-1 hash of the data being exported.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHA1Hash {
            get {
                return this.sHA1HashField;
            }
            set {
                this.sHA1HashField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The SHA-256 hash of the data being exported.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHA256Hash {
            get {
                return this.sHA256HashField;
            }
            set {
                this.sHA256HashField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCertificateExport. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateExportCallParms {
        
        private string useridField;
        
        private UserCertificateFilter filterField;
        
        private System.Nullable<CertificateDataType> typeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user whose certificate is going to be exported.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCertificateFilter
    /// </datatype>
    /// <value>
    ///   The filter specifying which user certificate is being exported. This 
    ///   filter must refer to a single user certificate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCertificateFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   CertificateDataType
    /// </datatype>
    /// <value>
    ///   The type specifies whether the certificate is exported as an X.509 
    ///   certificate or a PKCS#7 certificate chain. If the type is not specified, 
    ///   the certificate is exported as an X.509 certificate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<CertificateDataType> type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure defines the values returned by a call to 
    ///   userCertificateAssignVerify. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateAssignVerifyResult {
        
        private CertificateDataType typeField;
        
        private string issuerDNField;
        
        private string subjectDNField;
        
        private string serialNumberField;
        
        private System.DateTime issueDateField;
        
        private System.DateTime expiryDateField;
        
        private string caField;
        
        private bool selfSignedField;
        
        private string mD5HashField;
        
        private string sHA1HashField;
        
        private string sHA256HashField;
        
    /// <datatype>
    ///   CertificateDataType
    /// </datatype>
    /// <value>
    ///   The type of data being assigned. Will be one of CERTIFICATE or P7. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CertificateDataType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The issuer DN of the certificate being assigned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string issuerDN {
            get {
                return this.issuerDNField;
            }
            set {
                this.issuerDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The subject DN of the certificate being assigned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string subjectDN {
            get {
                return this.subjectDNField;
            }
            set {
                this.subjectDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the certificate being assigned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The issue date of the certificate being assigned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime issueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The expiry date of the certificate being assigned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the registered CA that issued this certificate. This value 
    ///   will not be set if the user certificate is not issued by a CA 
    ///   registered with Entrust IdentityGuard or the user certificate is 
    ///   self-signed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CA {
            get {
                return this.caField;
            }
            set {
                this.caField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the user certificate is self-signed.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool selfSigned {
            get {
                return this.selfSignedField;
            }
            set {
                this.selfSignedField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The MD5 Hash of the certificate or PKCS#7 input data being assigned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MD5Hash {
            get {
                return this.mD5HashField;
            }
            set {
                this.mD5HashField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The SHA-1 Hash of the certificate or PKCS#7 input data being assigned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHA1Hash {
            get {
                return this.sHA1HashField;
            }
            set {
                this.sHA1HashField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The SHA-256 Hash of the certificate or PKCS#7 input data being 
    ///   assigned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHA256Hash {
            get {
                return this.sHA256HashField;
            }
            set {
                this.sHA256HashField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCertificateAssignVerify. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateAssignVerifyCallParms {
        
        private string useridField;
        
        private UserCertificateParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to assign a certificate to.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCertificateParms
    /// </datatype>
    /// <value>
    ///   The parameters for the new certificate.
    ///   These parameters must include the certificate to be assigned to the 
    ///   user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCertificateParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCertificateAssign. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCertificateAssignCallParms {
        
        private string useridField;
        
        private UserCertificateParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to assign a certificate to.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCertificateParms
    /// </datatype>
    /// <value>
    ///   The parameters for the new certificate.
    ///   These parameters must include the certificate to be assigned to the 
    ///   user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCertificateParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   The data returned from a userDigitalIdList operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdListResult {
        
        private UserDigitalIdInfo[] digitalIdsField;
        
        private string nextUserField;
        
    /// <datatype>
    ///   UserDigitalIdInfo[]
    /// </datatype>
    /// <value>
    ///   The list of Digital Ids.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserDigitalIdInfo[] DigitalIds {
            get {
                return this.digitalIdsField;
            }
            set {
                this.digitalIdsField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The next user number. If set to a non-zero value, indicates that this 
    ///   result only includes a subset of the results, and additional user 
    ///   Digital Ids have not yet been returned. This value can be included in 
    ///   the filter for a further search to continue the search at the next 
    ///   user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string nextUser {
            get {
                return this.nextUserField;
            }
            set {
                this.nextUserField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about a Digital Id.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private string dnField;
        
        private System.DateTime createRecoverDateField;
        
        private bool recoverField;
        
        private System.Nullable<System.DateTime> expiryDateField;
        
        private string managedCAField;
        
        private string digitalIdConfigField;
        
        private DigitalIdClientType[] clientTypesField;
        
        private UserDigitalIdDetails detailsField;
        
        private string commentField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID that owns the Digital Id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name of the user ID  that owns the Digital Id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user ID that owns the Digital Id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This DN of the Digital Id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DN {
            get {
                return this.dnField;
            }
            set {
                this.dnField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date of the last time this digital Id was created or recovered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime CreateRecoverDate {
            get {
                return this.createRecoverDateField;
            }
            set {
                this.createRecoverDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If Recover is true, this Digital Id has been recovered.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Recover {
            get {
                return this.recoverField;
            }
            set {
                this.recoverField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The expiry date of this digital Id if available.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Managed CA of this Digital Id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ManagedCA {
            get {
                return this.managedCAField;
            }
            set {
                this.managedCAField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Digital Id Config of this Digital Id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DigitalIdConfig {
            get {
                return this.digitalIdConfigField;
            }
            set {
                this.digitalIdConfigField = value;
            }
        }
        
    /// <datatype>
    ///   DigitalIdClientType[]
    /// </datatype>
    /// <value>
    ///   The Client Types of this Digital Id.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public DigitalIdClientType[] ClientTypes {
            get {
                return this.clientTypesField;
            }
            set {
                this.clientTypesField = value;
            }
        }
        
    /// <datatype>
    ///   UserDigitalIdDetails
    /// </datatype>
    /// <value>
    ///   Details about this digital Id retrieved from the CA.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserDigitalIdDetails Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Comments about this Digital Id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   Information for a Digital Id Client Type
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdClientType {
        
        private string nameField;
        
        private System.DateTime createRecoverDateField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the client type.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The last time the digital Id was created or recovered for this client 
    ///   type. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime createRecoverDate {
            get {
                return this.createRecoverDateField;
            }
            set {
                this.createRecoverDateField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines details about a Digital Id retrieved from the CA.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdDetails {
        
        private string issuerDNField;
        
        private string subjectDNField;
        
        private UserDigitalIdCertType[] certTypesField;
        
        private int numActiveCertsField;
        
        private int numActiveCertsCanHoldField;
        
        private int numHoldCertsField;
        
        private int numCanceledCertsField;
        
        private AdminServiceFault faultField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The issuer DN of this digital id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string issuerDN {
            get {
                return this.issuerDNField;
            }
            set {
                this.issuerDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The subject DN of this digital id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string subjectDN {
            get {
                return this.subjectDNField;
            }
            set {
                this.subjectDNField = value;
            }
        }
        
    /// <datatype>
    ///   UserDigitalIdCertType[]
    /// </datatype>
    /// <value>
    ///   The certificate types for this digital id.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserDigitalIdCertType[] certTypes {
            get {
                return this.certTypesField;
            }
            set {
                this.certTypesField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of active certificates for this Digital Id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numActiveCerts {
            get {
                return this.numActiveCertsField;
            }
            set {
                this.numActiveCertsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of active certificates for this Digital Id that the hold 
    ///   operation can be applied to. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numActiveCertsCanHold {
            get {
                return this.numActiveCertsCanHoldField;
            }
            set {
                this.numActiveCertsCanHoldField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of certificates on hold for this Digital Id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numHoldCerts {
            get {
                return this.numHoldCertsField;
            }
            set {
                this.numHoldCertsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of certificates permanently revoked for this Digital Id. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numCanceledCerts {
            get {
                return this.numCanceledCertsField;
            }
            set {
                this.numCanceledCertsField = value;
            }
        }
        
    /// <datatype>
    ///   AdminServiceFault
    /// </datatype>
    /// <value>
    ///   The fault describing why the digital Id details could not be 
    ///   retrieved. If this attribute is set the values of the other fields should be 
    ///   ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public AdminServiceFault Fault {
            get {
                return this.faultField;
            }
            set {
                this.faultField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a certificate type within a digital Id. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdCertType {
        
        private string certTypeField;
        
        private UserDigitalIdCertInfo[] certInfoField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the certificate type.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string certType {
            get {
                return this.certTypeField;
            }
            set {
                this.certTypeField = value;
            }
        }
        
    /// <datatype>
    ///   UserDigitalIdCertInfo[]
    /// </datatype>
    /// <value>
    ///   The list of certificates for this certificate type.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserDigitalIdCertInfo[] certInfo {
            get {
                return this.certInfoField;
            }
            set {
                this.certInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a certificate within a digital Id.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdCertInfo {
        
        private string serialNumberField;
        
        private System.DateTime issueDateField;
        
        private System.DateTime expiryDateField;
        
        private System.Nullable<RevocationReason> revocationReasonField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The issue date of the certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime issueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The expiry date of the certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   RevocationReason
    /// </datatype>
    /// <value>
    ///   If the certificate is revoked, this value specifies the revocation 
    ///   reason. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<RevocationReason> revocationReason {
            get {
                return this.revocationReasonField;
            }
            set {
                this.revocationReasonField = value;
            }
        }
    }
    
    /// <summary>
    ///   The revocation reason of a certificate.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum RevocationReason {
        
    /// <value>
    ///   The certificate is not revoked.
    /// </value>
        NOT_REVOKED,
        
    /// <value>
    ///   Certificate revoked due to a change in affiliation.
    /// </value>
        AFFILIATION_CHANGED,
        
    /// <value>
    ///   Certificate revoked due to CA compromise.
    /// </value>
        CA_COMPROMISE,
        
    /// <value>
    ///   Certificate has been put on hold pending a decision about its status. 
    /// </value>
        CERTIFICATE_HOLD,
        
    /// <value>
    ///   Certificate revoked due cessation of operation.
    /// </value>
        CESSATION_OF_OPERATION,
        
    /// <value>
    ///   Certificate revoked due to key compromise.
    /// </value>
        KEY_COMPROMISE,
        
    /// <value>
    ///   Certificate is not actually revoked.
    ///   The revocation status has changed and the certificate should be 
    ///   removed from any CRL on which it appears. 
    /// </value>
        REMOVE_FROM_CRL,
        
    /// <value>
    ///   Certificate revoked because it has been superseded by another. 
    /// </value>
        SUPERSEDED,
        
    /// <value>
    ///   Certificate revoked for an unspecified reason.
    /// </value>
        UNSPECIFIED,
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userDigitalIdList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdListCallParms {
        
        private UserFilter filterField;
        
    /// <datatype>
    ///   UserFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which Digital Ids are to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userDigitalIdUnhold. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdUnholdCallParms {
        
        private string useridField;
        
        private string dnField;
        
        private string[] serialNumbersField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to whose digital Ids are to be removed from hold.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The DN indicating which Digital Id is to be removed from hold. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DN {
            get {
                return this.dnField;
            }
            set {
                this.dnField = value;
            }
        }
        
    /// <datatype>
    ///   integer[]
    /// </datatype>
    /// <value>
    ///   A list of serial numbers of certificates to be canceled. If an empty 
    ///   or null list is specified, all certificates associated with the 
    ///   digital id are canceled. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=false)]
        public string[] SerialNumbers {
            get {
                return this.serialNumbersField;
            }
            set {
                this.serialNumbersField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userDigitalIdHold. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdHoldCallParms {
        
        private string useridField;
        
        private string dnField;
        
        private string[] serialNumbersField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to whose digital Ids are to be moved to hold.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The DN indicating which Digital Id is to be moved to hold.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DN {
            get {
                return this.dnField;
            }
            set {
                this.dnField = value;
            }
        }
        
    /// <datatype>
    ///   integer[]
    /// </datatype>
    /// <value>
    ///   A list of serial numbers of certificates to be canceled. If an empty 
    ///   or null list is specified, all certificates associated with the 
    ///   digital id are canceled. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=false)]
        public string[] SerialNumbers {
            get {
                return this.serialNumbersField;
            }
            set {
                this.serialNumbersField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userDigitalIdCancel. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdCancelCallParms {
        
        private string useridField;
        
        private string dnField;
        
        private string[] serialNumbersField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to cancel digital Ids for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The DN indicating which Digital Id is to be canceled.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DN {
            get {
                return this.dnField;
            }
            set {
                this.dnField = value;
            }
        }
        
    /// <datatype>
    ///   integer[]
    /// </datatype>
    /// <value>
    ///   A list of serial numbers of certificates to be canceled. If an empty 
    ///   or null list is specified, all certificates associated with the 
    ///   digital id are canceled. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=false)]
        public string[] SerialNumbers {
            get {
                return this.serialNumbersField;
            }
            set {
                this.serialNumbersField = value;
            }
        }
    }
    
    /// <summary>
    ///   Parameters passed to userDigitalIdGet that controls what information 
    ///   is returned. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdGetParms {
        
        private System.Nullable<bool> getDetailsField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, details about the digital Id are retrieved from 
    ///   the CA. If not specified, this argument defaults to false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getDetails {
            get {
                return this.getDetailsField;
            }
            set {
                this.getDetailsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userDigitalIdGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdGetCallParms {
        
        private string useridField;
        
        private string dnField;
        
        private UserDigitalIdGetParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get digital Ids for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The DN indicating which Digital Id is to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DN {
            get {
                return this.dnField;
            }
            set {
                this.dnField = value;
            }
        }
        
    /// <datatype>
    ///   UserDigitalIdGetParms
    /// </datatype>
    /// <value>
    ///   Optional parameters passed to the userDigitalIdGet operation that 
    ///   control what information is returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserDigitalIdGetParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines parameters about a User Digital Id that can be 
    ///   changed/modified. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdSetParms {
        
        private string newUserIdField;
        
        private string[] removeClientTypesField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, this digital Id will be moved to the given userid. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string newUserId {
            get {
                return this.newUserIdField;
            }
            set {
                this.newUserIdField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of client type names that are to be removed from the digital 
    ///   Id. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RemoveClientTypes {
            get {
                return this.removeClientTypesField;
            }
            set {
                this.removeClientTypesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Comments about this Digital Id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userDigitalIdSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdSetCallParms {
        
        private string useridField;
        
        private string dnField;
        
        private UserDigitalIdSetParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user that owns the digital Id to be updated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The DN indicating which Digital Id is to be updated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DN {
            get {
                return this.dnField;
            }
            set {
                this.dnField = value;
            }
        }
        
    /// <datatype>
    ///   UserDigitalIdSetParms
    /// </datatype>
    /// <value>
    ///   Parameters for the set operation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserDigitalIdSetParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userDigitalIdDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdDeleteCallParms {
        
        private string useridField;
        
        private string dnField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user that owns the digital Id to be deleted.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The DN indicating which Digital Id is to be deleted.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DN {
            get {
                return this.dnField;
            }
            set {
                this.dnField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userDigitalIdCreateRecover. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdCreateRecoverCallParms {
        
        private string useridField;
        
        private UserDigitalIdParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the the Digital Id that will be created or 
    ///   recovered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserDigitalIdParms
    /// </datatype>
    /// <value>
    ///   Parameters for the create/recover operation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserDigitalIdParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines parameters about a User Digital Id.
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserDigitalIdParmsEx))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdParms {
        
        private string digitalIdConfigField;
        
        private string dnField;
        
        private NameValue[] dNVariablesField;
        
        private SubjectAltName[] subjectAltNameField;
        
        private ManagedCaVariable[] caVariablesField;
        
        private System.Nullable<ManagedCaDirectoryMode> caDirectoryModeField;
        
        private System.Nullable<bool> createIfNotExistsField;
        
        private System.Nullable<bool> recoverIfExistsField;
        
        private System.Nullable<bool> p12LatestKeyOnlyField;
        
        private System.Nullable<DigitalIdSecurityStoreType> securityStoreTypeField;
        
        private string securityStorePasswordField;
        
        private DigitalIdP10Request[] p10RequestsField;
        
        private string clientTypeField;
        
        private System.Nullable<int> certificateLifetimeField;
        
        private System.Nullable<System.DateTime> certificateExpiryDateField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of Digital Id Config to be used.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DigitalIdConfig {
            get {
                return this.digitalIdConfigField;
            }
            set {
                this.digitalIdConfigField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional DN of the user's digital Id. If this value is specified, 
    ///   it is used as the DN of the Digital Id. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DN {
            get {
                return this.dnField;
            }
            set {
                this.dnField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   An optional list of variables that will be used to generate the DN 
    ///   from the DNFormat specified in the Digital Id Config. When creating a 
    ///   Digital Id for a user smart credential, the smart credential enrollment 
    ///   values will also be used as variable values. Supported only for use 
    ///   with an Entrust CA. With a Microsoft CA this setting is ignored (has 
    ///   no effect). 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] DNVariables {
            get {
                return this.dNVariablesField;
            }
            set {
                this.dNVariablesField = value;
            }
        }
        
    /// <datatype>
    ///   SubjectAltName[]
    /// </datatype>
    /// <value>
    ///   List of SubjectAltName values to add to the digital Ids. Supported 
    ///   only for use with an Entrust CA. With a Microsoft CA this setting is 
    ///   ignored (has no effect). 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SubjectAltName[] SubjectAltName {
            get {
                return this.subjectAltNameField;
            }
            set {
                this.subjectAltNameField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaVariable[]
    /// </datatype>
    /// <value>
    ///   List of Managed CA variables to be set for this digital identity. 
    ///   Supported only for use with an Entrust CA. With a Microsoft CA this 
    ///   setting is ignored (has no effect). 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ManagedCaVariable[] CaVariables {
            get {
                return this.caVariablesField;
            }
            set {
                this.caVariablesField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaDirectoryMode
    /// </datatype>
    /// <value>
    ///   The Managed CA Directory mode. Supported only for use with an Entrust 
    ///   CA. With a Microsoft CA this setting is ignored (has no effect). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ManagedCaDirectoryMode> CaDirectoryMode {
            get {
                return this.caDirectoryModeField;
            }
            set {
                this.caDirectoryModeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the operation should add a new Digital Id if one 
    ///   does not exist. The flag defaults to the DigitalIdConfig value for 
    ///   this setting if not specified. Supported only for use with an Entrust 
    ///   CA. With a Microsoft CA this setting is ignored (has no effect). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> CreateIfNotExists {
            get {
                return this.createIfNotExistsField;
            }
            set {
                this.createIfNotExistsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the operation should recover an existing Digital 
    ///   Id. The flag defaults to the DigitalIdConfig value for this setting 
    ///   if not specified. Supported only for use with an Entrust CA. With a 
    ///   Microsoft CA this setting is ignored (has no effect). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RecoverIfExists {
            get {
                return this.recoverIfExistsField;
            }
            set {
                this.recoverIfExistsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   When a PKCS#12 is being requested this flag governs whether the full 
    ///   key history should be contained in the PKCS#12 or just the most recent 
    ///   key for each certificate stream. Supported only for use with an 
    ///   Entrust CA. With a Microsoft CA, this setting is ignored; the PKCS#12 
    ///   produced will always only contain the most recent key for each 
    ///   certificate stream. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> P12LatestKeyOnly {
            get {
                return this.p12LatestKeyOnlyField;
            }
            set {
                this.p12LatestKeyOnlyField = value;
            }
        }
        
    /// <datatype>
    ///   DigitalIdSecurityStoreType
    /// </datatype>
    /// <value>
    ///   If specified, a digital Id security store is created with the given 
    ///   type. 
    ///   An error is returned if both a SecurityStoreType and P10 Requests are 
    ///   specified. Supported for both Entrust and Microsoft CAs. However, the 
    ///   EPF security store type is only supported for use with an Entrust 
    ///   CA. If the EPF security store type is provided for a create/recover 
    ///   operation against a Microsoft CA, and error will result. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<DigitalIdSecurityStoreType> SecurityStoreType {
            get {
                return this.securityStoreTypeField;
            }
            set {
                this.securityStoreTypeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If the SecurityStoreType is specified, the SecurityStorePassword 
    ///   argument specifies the password for the security store. If 
    ///   SecurityStoreType is specified and SecurityStorePassword is not specified, a random 
    ///   password is generated. If SecurityStorePassword is specified and 
    ///   SecurityStoreType is not specified, the password is ignored. Supported 
    ///   for both Entrust and Microsoft CAs. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SecurityStorePassword {
            get {
                return this.securityStorePasswordField;
            }
            set {
                this.securityStorePasswordField = value;
            }
        }
        
    /// <datatype>
    ///   DigitalIdP10Request[]
    /// </datatype>
    /// <value>
    ///   If specified, certificates for the given P10 requests are generated 
    ///   against the Digital Id created or recovered with this request. An error 
    ///   is returned if both a SecurityStoreType and P10Requests are 
    ///   specified. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public DigitalIdP10Request[] P10Requests {
            get {
                return this.p10RequestsField;
            }
            set {
                this.p10RequestsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Client Type for this Digital Id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ClientType {
            get {
                return this.clientTypeField;
            }
            set {
                this.clientTypeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If specified, specifies the certificate lifetime in months. Most be a 
    ///   positive value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> CertificateLifetime {
            get {
                return this.certificateLifetimeField;
            }
            set {
                this.certificateLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   If specified, specifies the certificate expiry date. This value is 
    ///   ignored if the CertificateLifetime is specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> CertificateExpiryDate {
            get {
                return this.certificateExpiryDateField;
            }
            set {
                this.certificateExpiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Comments about this Digital Id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a SubjectAltName value.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SubjectAltName {
        
        private SubjectAltNameType typeField;
        
        private string valueField;
        
    /// <datatype>
    ///   SubjectAltNameType
    /// </datatype>
    /// <value>
    ///   The type of the SubjectAltName value.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SubjectAltNameType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The value of the SubjectAltName.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the possible SubjectAltName Types.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum SubjectAltNameType {
        
    /// <value>
    ///   Value is an EMAIL address.
    /// </value>
        EMAIL,
        
    /// <value>
    ///   Value is a UPN.
    /// </value>
        UPN,
        
    /// <value>
    ///   Value is an IP address.
    /// </value>
        IP,
        
    /// <value>
    ///   Value is a DNS Name.
    /// </value>
        DNSNAME,
        
    /// <value>
    ///   Value is a HEX Encoded Other Name.
    /// </value>
        OTHERNAME,
        
    /// <value>
    ///   Value is a HEX Encoded X.400 value.
    /// </value>
        X400,
        
    /// <value>
    ///   Value is a DN.
    /// </value>
        DN,
        
    /// <value>
    ///   Value is a HEX Encoded EDI value.
    /// </value>
        EDI,
        
    /// <value>
    ///   Value is a URI.
    /// </value>
        URI,
        
    /// <value>
    ///   Value is a Registered ID.
    /// </value>
        REGISTERED_ID,
    }
    
    /// <summary>
    ///   A Managed CA variable.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaVariable {
        
        private ManagedCaVariableType typeField;
        
        private string nameField;
        
        private string valueField;
        
        private System.Nullable<bool> isInDnField;
        
    /// <datatype>
    ///   ManagedCaVariableType
    /// </datatype>
    /// <value>
    ///   The type of the Managed CA variable.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ManagedCaVariableType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Managed CA variable.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The value of the Managed CA variable.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A optional flag indicating whether or not the variable appears in the 
    ///   user's distinguished name; when not present a value of false is 
    ///   assumed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> IsInDn {
            get {
                return this.isInDnField;
            }
            set {
                this.isInDnField = value;
            }
        }
    }
    
    /// <summary>
    ///   Represents the type of a variable defined at a managed CA.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum ManagedCaVariableType {
        
    /// <value>
    ///   Generic variable.
    /// </value>
        VARIABLE,
        
    /// <value>
    ///   Variable for use with certificate types.
    /// </value>
        CERT_TYPE,
        
    /// <value>
    ///   Variable for use with users.
    /// </value>
        USER_TYPE,
        
    /// <value>
    ///   Custom variable.
    /// </value>
        CUSTOM,
    }
    
    /// <summary>
    ///   Defines how the Directory is treated during a digital identity 
    ///   create/recover operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum ManagedCaDirectoryMode {
        
    /// <value>
    ///   Perform Directory operation if needed, fail if not needed.
    /// </value>
        DO_OP_FAIL_IF_NOT_NEEDED,
        
    /// <value>
    ///   Perform Directory operation if needed, return success if not needed. 
    /// </value>
        DO_OP_SUCCEED_IF_NOT_NEEDED,
        
    /// <value>
    ///   Don't perform Directory operation, but fail if one is required. 
    /// </value>
        NO_OP_FAIL_IF_NEEDED,
        
    /// <value>
    ///   Don't perform Directory operation, and don't check if a repository 
    ///   operation is required. 
    /// </value>
        NO_OP,
    }
    
    /// <summary>
    ///   Defines the possible Digital Id Security Store Types.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum DigitalIdSecurityStoreType {
        
    /// <value>
    ///   Entrust Profile Security Store. Only supported for use with an with an 
    ///   Entrust CA. 
    /// </value>
        EPF,
        
    /// <value>
    ///   P12 Security Store. Supported for use with both Entrust and Microsoft 
    ///   CAs. 
    /// </value>
        P12,
    }
    
    /// <summary>
    ///   Defines a Digital Id P10 Request.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdP10Request {
        
        private string certStreamPolicyField;
        
        private byte[] p10Field;
        
        private byte[] privateKeyField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the certificate stream policy that governs the issuance of 
    ///   the requested certificate. When used with an Entrust CA, this is the 
    ///   certificate definition name; when used with a Microsoft CA, this is 
    ///   the certificate template common name. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CertStreamPolicy {
            get {
                return this.certStreamPolicyField;
            }
            set {
                this.certStreamPolicyField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The P10 request. The P10 request is optional for certificate streams 
    ///   that specify server key generation and when performing a recovery 
    ///   operation for certificate streams that specify key backup; otherwise, the 
    ///   P10 request is mandatory. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] P10 {
            get {
                return this.p10Field;
            }
            set {
                this.p10Field = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The private key (that corresponds to the public key in the certificate 
    ///   request). Allows a client generated private key to be sent to the 
    ///   server for backup. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] PrivateKey {
            get {
                return this.privateKeyField;
            }
            set {
                this.privateKeyField = value;
            }
        }
    }
    
    /// <summary>
    ///   Parameters passed to createRecoverUserSmartCredentialDigitalIdEx. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdParmsEx : UserDigitalIdParms {
        
        private System.Nullable<bool> encryptionKeyHistoryField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating whether the encryption key history from any existing 
    ///   certificate type should be returned along with the responses to 
    ///   P10Requests when certificates are returned for a Digital Id being 
    ///   recovered by the request. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> encryptionKeyHistory {
            get {
                return this.encryptionKeyHistoryField;
            }
            set {
                this.encryptionKeyHistoryField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines policy that governs a certificate stream in a Digital ID. For 
    ///   an Entrust CA, this policy object corresponds to a certificate 
    ///   definition. For a Microsoft CA this policy object corresponds to a 
    ///   certificate template. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdCertStreamPolicy {
        
        private DigitalIdCertStreamPolicyNameAndId nameAndIdField;
        
        private string keyTypeField;
        
        private KeyUsagePolicy keyUsageField;
        
        private bool keyClientGeneratedField;
        
        private bool keyBackupField;
        
        private string keyCspField;
        
        private PivContainer pivContainerField;
        
        private string mscapiKeyContainerNameTemplateField;
        
        private long renewalPeriodField;
        
        private int renewalPercentField;
        
        private System.Nullable<System.DateTime> renewalDateField;
        
    /// <datatype>
    ///   DigitalIdCertStreamPolicyNameAndId
    /// </datatype>
    /// <value>
    ///   Name and unique identifier for the certificate stream policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DigitalIdCertStreamPolicyNameAndId NameAndId {
            get {
                return this.nameAndIdField;
            }
            set {
                this.nameAndIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The key type; identifies the type of key that should be provided in a 
    ///   certificate request for a certificate governed by this certificate 
    ///   policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string KeyType {
            get {
                return this.keyTypeField;
            }
            set {
                this.keyTypeField = value;
            }
        }
        
    /// <datatype>
    ///   KeyUsagePolicy
    /// </datatype>
    /// <value>
    ///   The key usage; identifies the what the key pair can be used for. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public KeyUsagePolicy KeyUsage {
            get {
                return this.keyUsageField;
            }
            set {
                this.keyUsageField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates whether the key pair is client generated or server 
    ///   generated. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool KeyClientGenerated {
            get {
                return this.keyClientGeneratedField;
            }
            set {
                this.keyClientGeneratedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates whether or not the private key is backed up by the server. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool KeyBackup {
            get {
                return this.keyBackupField;
            }
            set {
                this.keyBackupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Indicates the Microsoft CryptoAPI (MS-CAPI) Cryptographic Service 
    ///   Provider that should be used when the private keys of this certificate 
    ///   stream are stored in MS-CAPI. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string KeyCsp {
            get {
                return this.keyCspField;
            }
            set {
                this.keyCspField = value;
            }
        }
        
    /// <datatype>
    ///   PivContainer
    /// </datatype>
    /// <value>
    ///   Identifies the PIV container that the private key is to be stored in. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PivContainer PivContainer {
            get {
                return this.pivContainerField;
            }
            set {
                this.pivContainerField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Provides a template for the Microsoft CryptoAPI (MS-CAPI) key 
    ///   container names when the private keys of this certificate stream are stored 
    ///   in MS-CAPI. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MscapiKeyContainerNameTemplate {
            get {
                return this.mscapiKeyContainerNameTemplateField;
            }
            set {
                this.mscapiKeyContainerNameTemplateField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The renewal period in milliseconds; indicates the period of time prior 
    ///   to certificate expiry during which certificate renewal should occur. 
    ///   Used in conjunction with RenewalPercent to determine when renewal 
    ///   should occur. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long RenewalPeriod {
            get {
                return this.renewalPeriodField;
            }
            set {
                this.renewalPeriodField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The renewal period in percent; indicates the percent of certificate 
    ///   lifetime after which certificate renewal should occur. Used in 
    ///   conjunction with RenewalPercent to determine when renewal should occur. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int RenewalPercent {
            get {
                return this.renewalPercentField;
            }
            set {
                this.renewalPercentField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The renewal date; certificate renewal should occur for all 
    ///   certificates with an issuance date prior to this date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> RenewalDate {
            get {
                return this.renewalDateField;
            }
            set {
                this.renewalDateField = value;
            }
        }
    }
    
    /// <summary>
    ///   Identifying information for policy that governs a certificate stream 
    ///   in a Digital ID. For an Entrust CA, this policy object corresponds to 
    ///   a certificate definition. For a Microsoft CA this policy object 
    ///   corresponds to a certificate template. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdCertStreamPolicyNameAndId {
        
        private string displayNameField;
        
        private string nameField;
        
        private string idField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The display name of the certificate stream policy; intended for human 
    ///   consumption. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the certificate stream policy; intended for identifying 
    ///   the certificate stream policy to the Certification Authority. For an 
    ///   Entrust CA, this is the certificate definition name; for a Microsoft 
    ///   CA, this is the certificate template name. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The ID of the certificate stream policy; a CA wide unique identifier 
    ///   for the certificate stream. For an Entrust CA, this is the certificate 
    ///   type ID concatenated with the certificate definition ID name; for a 
    ///   Microsoft CA, this is the certificate template name. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <summary>
    ///   Identifies a PIV container.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum KeyUsagePolicy {
        
    /// <value>
    ///   Encryption only.
    /// </value>
        encryption,
        
    /// <value>
    ///   Verification only.
    /// </value>
        verification,
        
    /// <value>
    ///   Dual-usage (encryption and verification).
    /// </value>
        both,
    }
    
    /// <summary>
    ///   Identifies a PIV container.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum PivContainer {
        
    /// <value>
    ///   The 'PIV Authentication Key' container.
    /// </value>
        PivAuth,
        
    /// <value>
    ///   The 'Card Authentication Key' container.
    /// </value>
        CardAuth,
        
    /// <value>
    ///   The 'Digital Signature Key' container.
    /// </value>
        DigSig,
        
    /// <value>
    ///   The 'Key Management Key' container.
    /// </value>
        KeyMgmt,
        
    /// <value>
    ///   None.
    /// </value>
        None,
    }
    
    /// <summary>
    ///   This structure contains the information returned by a call to 
    ///   userDigitalIdCreateRecoverPolicyGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdCreateRecoverPolicyGetResult {
        
        private DigitalIdCertStreamPolicy[] digitalIdCreateRecoverPolicyField;
        
        private System.Nullable<bool> digitalIdExistsOnManagedCaField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   DigitalIdCertStreamPolicy[]
    /// </datatype>
    /// <value>
    ///   Policy for each of the certificate streams configured for the 
    ///   DigitalID. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public DigitalIdCertStreamPolicy[] DigitalIdCreateRecoverPolicy {
            get {
                return this.digitalIdCreateRecoverPolicyField;
            }
            set {
                this.digitalIdCreateRecoverPolicyField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   True if a digital identity with the provided DN exists at the managed 
    ///   CA; false if a digital identity with the provided DN does not yet 
    ///   exist at the managed CA; null if a DN was not provided, if the managed 
    ///   CA is a Microsoft CA (this capability is not supported with a 
    ///   Microsoft CA) or the existence of a digital identity with the provided DN at 
    ///   the managed CA could not be determined. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> DigitalIdExistsOnManagedCa {
            get {
                return this.digitalIdExistsOnManagedCaField;
            }
            set {
                this.digitalIdExistsOnManagedCaField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userDigitalIdCreateRecoverPolicyGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdCreateRecoverPolicyGetCallParms {
        
        private string useridField;
        
        private string digitalIdConfigField;
        
        private string dnField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who will own the the Digital Id for which create/recover 
    ///   policy information is being requested. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Digital Id Config for which create/recover policy 
    ///   information is being requested. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DigitalIdConfig {
            get {
                return this.digitalIdConfigField;
            }
            set {
                this.digitalIdConfigField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The distinguished name (DN) of the digital identity for which 
    ///   create/recover policy information is being requested. Used to determine 
    ///   whether or not a digital identity with this DN already exists on the 
    ///   managed CA for which create/recover policy information is being requested. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DN {
            get {
                return this.dnField;
            }
            set {
                this.dnField = value;
            }
        }
    }
    
    /// <summary>
    ///   The data returned from a userSmartCredentialList operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialListResult {
        
        private UserSmartCredentialInfo[] smartCredentialsField;
        
        private string nextUserField;
        
    /// <datatype>
    ///   UserSmartCredentialInfo[]
    /// </datatype>
    /// <value>
    ///   The list of Smart Credentials.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserSmartCredentialInfo[] SmartCredentials {
            get {
                return this.smartCredentialsField;
            }
            set {
                this.smartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The next user number. If set to a non-zero value, indicates that this 
    ///   result only includes a subset of the results, and additional user 
    ///   Smart Credentials have not yet been returned. This value can be included 
    ///   in the filter for a further search to continue the search at the 
    ///   next user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string nextUser {
            get {
                return this.nextUserField;
            }
            set {
                this.nextUserField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about a user Smart Credential. 
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserSmartCredentialInfoEx))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private string idField;
        
        private string definitionIdField;
        
        private string cloneIdField;
        
        private string serialNumberField;
        
        private System.Nullable<bool> mobileField;
        
        private string cardUIDField;
        
        private SmartCredentialState stateField;
        
        private byte[][] cardManagerKeysField;
        
        private System.Nullable<int> cardManagerKeyVersionField;
        
        private System.Nullable<SmartCredentialIssueState> issueStateField;
        
        private System.Nullable<System.DateTime> issueDateField;
        
        private string issueInfoField;
        
        private bool sealedField;
        
        private bool approvedField;
        
        private bool validField;
        
        private System.DateTime createDateField;
        
        private System.Nullable<System.DateTime> expiryDateField;
        
        private NameValue[] enrollmentValuesField;
        
        private string[] unblockVariablesField;
        
        private string[] digitalIdsField;
        
        private bool hasDigitalIdDetailsField;
        
        private UserDigitalIdDetails[] digitalIdDetailsField;
        
        private string tokenVendorIdField;
        
        private string tokenSerialNumberField;
        
        private string friendlyNameField;
        
        private bool supportsPACSField;
        
        private NameValue[] smartCredentialParametersField;
        
        private bool supportsSecurityChallengeField;
        
        private string cardTypeField;
        
        private string mobilePlatformField;
        
        private string mobileVersionField;
        
        private string commentField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID that owns the Smart Credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name of the user ID that owns the Smart Credential. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user ID that owns the Smart Credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This value will contain the Id of the Smart Credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This value will contain the Smart Credential Definition of the Smart 
    ///   Credential. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DefinitionId {
            get {
                return this.definitionIdField;
            }
            set {
                this.definitionIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The id of the smart credential from which this smart credential was 
    ///   cloned. The value will be null of the smart credential was not cloned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CloneId {
            get {
                return this.cloneIdField;
            }
            set {
                this.cloneIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional serial number of the card onto which this Smart 
    ///   Credential was printed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates if the serial number is associated with a mobile smart 
    ///   credential. This value won't be set if the serial number is not set. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional UID of the card onto which this Smart Credential was 
    ///   encoded. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CardUID {
            get {
                return this.cardUIDField;
            }
            set {
                this.cardUIDField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialState
    /// </datatype>
    /// <value>
    ///   The state of the user smart credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   Base64Binary[]
    /// </datatype>
    /// <value>
    ///   The card manager keys of this smart credential. If the administrator 
    ///   does not have permission to view the card manager keys, this value 
    ///   will be null. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=false)]
        public byte[][] CardManagerKeys {
            get {
                return this.cardManagerKeysField;
            }
            set {
                this.cardManagerKeysField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The version of the card manager keys of this smart credential. If the 
    ///   administrator does not have permission to view the card manager keys, 
    ///   this value will be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> CardManagerKeyVersion {
            get {
                return this.cardManagerKeyVersionField;
            }
            set {
                this.cardManagerKeyVersionField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialIssueState
    /// </datatype>
    /// <value>
    ///   The state of the last print/encode/proximity request.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialIssueState> IssueState {
            get {
                return this.issueStateField;
            }
            set {
                this.issueStateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The print date of the user smart credential.
    ///   This value is the last time a print/encode/proximity operation was 
    ///   started. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> IssueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Information about the last print/encode/proximity request.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string IssueInfo {
            get {
                return this.issueInfoField;
            }
            set {
                this.issueInfoField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this Smart Credential is sealed or not. A sealed 
    ///   Smart Credential can not be modified or printed. Normally a Smart 
    ///   Credential will be sealed after printing is complete. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Sealed {
            get {
                return this.sealedField;
            }
            set {
                this.sealedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this Smart Credential has been approved or not. 
    ///   If approval is required for the Smart Credential Definition, a Smart 
    ///   Credential cannot be printed until approved. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the enrollment values for this Smart Credential 
    ///   have been successfully validated against the type description 
    ///   specified in the Definition. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   This value will contain the creation date of the Smart Credential. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   This value will contain the expiry date of the Smart Credential. The 
    ///   expiry date may not be set. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   A list of Definition specific values collected during enrollment. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] enrollmentValues {
            get {
                return this.enrollmentValuesField;
            }
            set {
                this.enrollmentValuesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of variable values for this Smart Credential that can be used 
    ///   to unblock the Smart Credential. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] UnblockVariables {
            get {
                return this.unblockVariablesField;
            }
            set {
                this.unblockVariablesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of digital Ids DNs created for this Smart Credential.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] DigitalIds {
            get {
                return this.digitalIdsField;
            }
            set {
                this.digitalIdsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this smart credential has digital id details. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasDigitalIdDetails {
            get {
                return this.hasDigitalIdDetailsField;
            }
            set {
                this.hasDigitalIdDetailsField = value;
            }
        }
        
    /// <datatype>
    ///   UserDigitalIdDetails[]
    /// </datatype>
    /// <value>
    ///   The details for the digital ids created for this Smart Credential. 
    ///   This information will only be returned from userSmartCredentialInfoGet 
    ///   if the getDetails argument is set to true. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserDigitalIdDetails[] DigitalIdDetails {
            get {
                return this.digitalIdDetailsField;
            }
            set {
                this.digitalIdDetailsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If a token is associated with this Smart credential, the TokenVendorId 
    ///   will be set to its token vendor Id. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string TokenVendorId {
            get {
                return this.tokenVendorIdField;
            }
            set {
                this.tokenVendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If a token is associated with this Smart credential, the 
    ///   TokenSerialNumber will be set to its token serial number. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string TokenSerialNumber {
            get {
                return this.tokenSerialNumberField;
            }
            set {
                this.tokenSerialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Friendly name for this user smart credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FriendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this user smart credential supports PACS. A user 
    ///   smart credential supports PACS if its smart credential definition 
    ///   includes one or more PACS. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool SupportsPACS {
            get {
                return this.supportsPACSField;
            }
            set {
                this.supportsPACSField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   A list of smart credential specific parameters.
    ///   For example, for mobile smart credentials, these parameters might 
    ///   include information about the device on which this smart credential was 
    ///   loaded. The administrator must have the 
    ///   userSmartCredentialParameterView permission to see these values. Otherwise a null value will be 
    ///   returned. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] smartCredentialParameters {
            get {
                return this.smartCredentialParametersField;
            }
            set {
                this.smartCredentialParametersField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this user smart credential supports certificate 
    ///   security challenges. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool SupportsSecurityChallenge {
            get {
                return this.supportsSecurityChallengeField;
            }
            set {
                this.supportsSecurityChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this smart credential has been encoded onto a card this value will 
    ///   show the type of card. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this smart credential has been registered with the Entrust 
    ///   IdentityGuard Mobile Smart Credential application, this value will show the 
    ///   platform type of the mobile application. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string MobilePlatform {
            get {
                return this.mobilePlatformField;
            }
            set {
                this.mobilePlatformField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this smart credential has been registered with the Entrust 
    ///   IdentityGuard Mobile Smart Credential application, this value will show the 
    ///   version of the mobile application. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string MobileVersion {
            get {
                return this.mobileVersionField;
            }
            set {
                this.mobileVersionField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Comments for this user smart credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   Information returned from userSmartCredentialGetEx.
    ///   This structure contains extra fields related to derived credentials. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialInfoEx : UserSmartCredentialInfo {
        
        private bool derivedCredentialField;
        
        private string derivedCredentialAuthenticatingCAField;
        
        private string derivedCredentialAuthenticatingSubjectDNField;
        
        private string derivedCredentialAuthenticatingSerialNumberField;
        
        private string derivedCredentialApplicationField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, this user smart credential is a derived credential. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool derivedCredential {
            get {
                return this.derivedCredentialField;
            }
            set {
                this.derivedCredentialField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this smart credential is derived, this value specifies the name of 
    ///   the CA that issued the certificate that this credential was derived 
    ///   from. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string derivedCredentialAuthenticatingCA {
            get {
                return this.derivedCredentialAuthenticatingCAField;
            }
            set {
                this.derivedCredentialAuthenticatingCAField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this smart credential is derived, this value specifies the subject 
    ///   DN of the certificate that this credential was derived from. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string derivedCredentialAuthenticatingSubjectDN {
            get {
                return this.derivedCredentialAuthenticatingSubjectDNField;
            }
            set {
                this.derivedCredentialAuthenticatingSubjectDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this smart credential is derived, this value specifies the serial 
    ///   number of the certificate that this credential was derived from. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string derivedCredentialAuthenticatingSerialNumber {
            get {
                return this.derivedCredentialAuthenticatingSerialNumberField;
            }
            set {
                this.derivedCredentialAuthenticatingSerialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this smart credential is derived, this value specifies the name of 
    ///   the application to which this credential was issued. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string derivedCredentialApplication {
            get {
                return this.derivedCredentialApplicationField;
            }
            set {
                this.derivedCredentialApplicationField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialListCallParms {
        
        private UserFilter filterField;
        
    /// <datatype>
    ///   UserFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which Smart Credentials are to be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialDeliver. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialDeliverCallParms {
        
        private string useridField;
        
        private string idField;
        
        private string deliveryField;
        
        private UserDeliveryParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the Smart Credential to be delivered.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be delivered.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the delivery configuration to be used for delivery. The 
    ///   specified delivery cannot have a type of UNBLOCK. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string delivery {
            get {
                return this.deliveryField;
            }
            set {
                this.deliveryField = value;
            }
        }
        
    /// <datatype>
    ///   UserDeliveryParms
    /// </datatype>
    /// <value>
    ///   Optional parameters passed to the delivery operation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserDeliveryParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines optional parameters that can be passed to various delivery 
    ///   operations. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDeliveryParms {
        
        private NameValue[] parametersField;
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   If specified this list of name/value pairs is passed to the delivery 
    ///   operation. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialIssue. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialIssueCallParms {
        
        private string useridField;
        
        private string idField;
        
        private string printModuleField;
        
        private UserSmartCredentialIssueOp[] operationField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the Smart Credential to be issued.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be issued.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the print module to be used.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string printModule {
            get {
                return this.printModuleField;
            }
            set {
                this.printModuleField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialIssueOp[]
    /// </datatype>
    /// <value>
    ///   The operations to perform. At least one operation must be specified. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserSmartCredentialIssueOp[] operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
    }
    
    /// <summary>
    ///   The user Smart Credential Issue operation to be performed.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum UserSmartCredentialIssueOp {
        
    /// <value>
    ///   The PRINT operation prints graphics onto the Smart Credential. The 
    ///   PRINT operation can be combined with the PRINTER_ENCODE operation. 
    /// </value>
        PRINT,
        
    /// <value>
    ///   The PRINTER_ENCODE operation encodes data and applets onto the chips 
    ///   of the Smart Credential using the Print Module's card reader. This 
    ///   operation can be combined with the PRINT operation. 
    /// </value>
        PRINTER_ENCODE,
        
    /// <value>
    ///   The EXTERNAL_ENCODE operation encodes data and applets onto the chips 
    ///   of the Smart Credential using an external card reader. 
    ///   The EXTERNAL_ENCODE cannot be combined with other operations. 
    /// </value>
        EXTERNAL_ENCODE,
        
    /// <value>
    ///   The PROXIMITY operation encodes physical access information onto the 
    ///   Smart Credential. The PROXIMITY operation cannot be combined with 
    ///   other operations. 
    /// </value>
        PROXIMITY,
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialUnhold. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialUnholdCallParms {
        
        private string useridField;
        
        private string idField;
        
        private System.Nullable<bool> forceField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the Smart Credential to be unheld.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be unheld.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If force is set to true, all certificates associated with the smart 
    ///   credential are unheld. Otherwise, only certificates that are not shared 
    ///   with other smart credentials are unheld. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> force {
            get {
                return this.forceField;
            }
            set {
                this.forceField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialHold. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialHoldCallParms {
        
        private string useridField;
        
        private string idField;
        
        private System.Nullable<bool> forceField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the Smart Credential to be held.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be held.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If force is set to true, all certificates associated with the smart 
    ///   credential are held. Otherwise, only certificates that are not shared 
    ///   with other smart credentials are held. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> force {
            get {
                return this.forceField;
            }
            set {
                this.forceField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialCancel. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialCancelCallParms {
        
        private string useridField;
        
        private string idField;
        
        private System.Nullable<bool> forceField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the Smart Credential to be canceled.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be canceled.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If force is set to true, all certificates associated with the smart 
    ///   credential are canceled. Otherwise, only certificates that are not 
    ///   shared with other smart credentials are canceled. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> force {
            get {
                return this.forceField;
            }
            set {
                this.forceField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialUnassign. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialUnassignCallParms {
        
        private string useridField;
        
        private string idField;
        
        private UserSmartCredentialParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the Smart Credential to be unassigned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be unassigned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialParms
    /// </datatype>
    /// <value>
    ///   May contain a new comment for the unassigned smart credential 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserSmartCredentialParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when creating or modifying a Smart 
    ///   Credential. 
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserSmartCredentialParmsEx))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialParms {
        
        private string idField;
        
        private string definitionIdField;
        
        private string cloneIdField;
        
        private string serialNumberField;
        
        private string cardUIDField;
        
        private System.Nullable<bool> mobileSerialNumberField;
        
        private System.Nullable<SmartCredentialState> stateField;
        
        private System.Nullable<SmartCredentialIssueState> issueStateField;
        
        private System.Nullable<bool> issueDateField;
        
        private string issueInfoField;
        
        private System.Nullable<bool> validField;
        
        private System.Nullable<bool> approvedField;
        
        private System.Nullable<bool> sealedField;
        
        private NameValue[] enrollmentValuesField;
        
        private System.Nullable<bool> rawEnrollmentValuesField;
        
        private System.Nullable<bool> mergeEnrollmentValuesField;
        
        private string[] removeEnrollmentValuesField;
        
        private System.Nullable<bool> removeAllEnrollmentValuesField;
        
        private string[] generateEnrollmentValuesField;
        
        private string friendlyNameField;
        
        private NameValue[] smartCredentialParametersField;
        
        private System.Nullable<bool> mergeSmartCredentialParametersField;
        
        private string[] removeSmartCredentialParametersField;
        
        private System.Nullable<bool> removeAllSmartCredentialParametersField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified for the userSmartCredentialCreate operation, this value 
    ///   is used for the Id of the new Smart Credential instead of a randomly 
    ///   generated value. The Id must have the same prefix as required by 
    ///   policy and must not be longer than 255 characters. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Definition Id of the Smart Credential. This value is required for 
    ///   userSmartCredentialCreate operation. This argument is ignored if 
    ///   specified for other operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DefinitionId {
            get {
                return this.definitionIdField;
            }
            set {
                this.definitionIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified for the userSmartCredentialCreate operation this value 
    ///   specifies the id of a user smart credential whose enrollment values 
    ///   will be cloned into the new smart credential. 
    ///   The smart credential to be cloned must have the same userid and 
    ///   definition as the new smart credential. This argument is ignored if 
    ///   specified for other operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CloneId {
            get {
                return this.cloneIdField;
            }
            set {
                this.cloneIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional serial number of the card onto which this Smart 
    ///   Credential was printed. If specified, the serial number must correspond to an 
    ///   existing unassigned smart credential which will be assigned to the 
    ///   user smart credential. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional UID of the card onto which this Smart Credential was 
    ///   encoded. If specified, the user smart credential must be assigned a 
    ///   serial number. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CardUID {
            get {
                return this.cardUIDField;
            }
            set {
                this.cardUIDField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the specified Serial Number will be treated as a 
    ///   mobile serial number. 
    ///   Instead of assigning an unassigned smart credential with the 
    ///   associated card management keys, a new entry with randomly generated card 
    ///   management keys will be set. 
    ///   If not set, this attribute defaults to false.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> MobileSerialNumber {
            get {
                return this.mobileSerialNumberField;
            }
            set {
                this.mobileSerialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialState
    /// </datatype>
    /// <value>
    ///   The state of the user smart credential.
    ///   If not specified during the create operation, the state will default 
    ///   to UNASSIGNED if no serial number is specified or to the state of the 
    ///   unassigned smart credential if a serial number is specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialState> State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialIssueState
    /// </datatype>
    /// <value>
    ///   This argument is used by the print module to set the state of the 
    ///   current print/encode/proximity operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialIssueState> IssueState {
            get {
                return this.issueStateField;
            }
            set {
                this.issueStateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   This argument is used by the print module.
    ///   If specified as true, the print date of this smart credential is 
    ///   updated to the current date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> IssueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This argument is used by the print module to set information about the 
    ///   current print/encode/proximity operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string IssueInfo {
            get {
                return this.issueInfoField;
            }
            set {
                this.issueInfoField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this Smart Credential is valid or not. The valid 
    ///   state of a smart credential will be automatically set to true or 
    ///   false depending on whether all of the required enrollment values are 
    ///   specified and valid. This flag can be used to explicitly set the valid 
    ///   state. For example, if during the approval process an administrator 
    ///   decides that more changes are required to the enrollment values they can 
    ///   set the valid state to false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this Smart Credential has been approved or not. 
    ///   If approval is required for the Smart Credential Definition, a Smart 
    ///   Credential cannot be printed until approved. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this Smart Credential is sealed or not. A sealed 
    ///   Smart Credential can not be modified or printed. Normally a Smart 
    ///   Credential will be sealed after printing is complete. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> Sealed {
            get {
                return this.sealedField;
            }
            set {
                this.sealedField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   Enrollment values that will be set for this Smart Credential during 
    ///   the userSmartCredentialCreate, or userSmartCredentialSet operation. 
    ///   If specified during a userSmartCredentialSet operation and 
    ///   MergeEnrollmentParameters is false, the Smart Credential's existing parameters 
    ///   are replaced by this list. Otherwise, these values are merged with the 
    ///   existing values. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] EnrollmentValues {
            get {
                return this.enrollmentValuesField;
            }
            set {
                this.enrollmentValuesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the EnrollmentValues list contains raw values rather 
    ///   than encoded values. 
    ///   If not specified, this value defaults to false.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RawEnrollmentValues {
            get {
                return this.rawEnrollmentValuesField;
            }
            set {
                this.rawEnrollmentValuesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the EnrollmentValues list is merged with the existing 
    ///   values during the userSmartCredentialSet operation. If not specified, 
    ///   this value defaults to true. This parameter only applies to the 
    ///   userSmartCredentialSet operation and is ignored by other operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> MergeEnrollmentValues {
            get {
                return this.mergeEnrollmentValuesField;
            }
            set {
                this.mergeEnrollmentValuesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of enrollment value names to remove from the list of existing 
    ///   enrollment values. This argument only applies to the 
    ///   userSmartCredentialSet operation. This argument is ignored if 
    ///   RemoveAllEnrollmentValues is specifies as true. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RemoveEnrollmentValues {
            get {
                return this.removeEnrollmentValuesField;
            }
            set {
                this.removeEnrollmentValuesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, remove all Smart Credential enrollment values. If 
    ///   specified, this value takes precedence over RemoveEnrollmentParameters. 
    ///   If not specified it defaults to false. This parameter only applies to 
    ///   the userSmartCredentialSet operation, and is ignored by other 
    ///   operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RemoveAllEnrollmentValues {
            get {
                return this.removeAllEnrollmentValuesField;
            }
            set {
                this.removeAllEnrollmentValuesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, new values are generated for all specified variables. If 
    ///   a specified variable does not exist or does not support generation 
    ///   an error is returned. This argument only applies to the 
    ///   userSmartCredentialSet operation and is ignored if specified for the 
    ///   userSmartCredentialCreate operation. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] GenerateEnrollmentValues {
            get {
                return this.generateEnrollmentValuesField;
            }
            set {
                this.generateEnrollmentValuesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Smart Credential friendly name.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FriendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   Smart Credential parameters that will be set for this smart credential 
    ///   during the userSmartCredentialCreate or userSmartCredentialSet 
    ///   operation. If specified during a userSmartCredentialSet operation and 
    ///   MergeSmartCredentialParameters is false or null, then the smart 
    ///   credential's existing parameters are replaced by this list. 
    ///   Otherwise, these values are merged with the existing values.
    ///   The administrator must have the userSmartCredentialParameterSet 
    ///   permission to specify this argument. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] SmartCredentialParameters {
            get {
                return this.smartCredentialParametersField;
            }
            set {
                this.smartCredentialParametersField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the SmartCredentialParameters list is merged with the 
    ///   existing values during the userSmartCredentialSet operation. If not 
    ///   specified, this value defaults to false. This parameter only applies 
    ///   to the userSmartCredentialSet operation and is ignored by other 
    ///   operations. 
    ///   The administrator must have the userSmartCredentialParameterSet 
    ///   permission to specify this argument. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> MergeSmartCredentialParameters {
            get {
                return this.mergeSmartCredentialParametersField;
            }
            set {
                this.mergeSmartCredentialParametersField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of smart credential parameter names to remove from the list of 
    ///   existing smart credential parameters. This argument only applies to 
    ///   the userSmartCredentialSet operation. This argument is ignored if 
    ///   RemoveAllSmartCredentialParameters is specified as true. 
    ///   The administrator must have the userSmartCredentialParameterSet 
    ///   permission to specify this argument. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RemoveSmartCredentialParameters {
            get {
                return this.removeSmartCredentialParametersField;
            }
            set {
                this.removeSmartCredentialParametersField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, remove all smart credential parameters. If specified, 
    ///   this value takes precedence over RemoveSmartCredentialParameters. If 
    ///   not specified it defaults to false. This parameter only applies to 
    ///   the userSmartCredentialSet operation, and is ignored by other 
    ///   operations. 
    ///   The administrator must have the userSmartCredentialParameterSet 
    ///   permission to specify this argument. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RemoveAllSmartCredentialParameters {
            get {
                return this.removeAllSmartCredentialParametersField;
            }
            set {
                this.removeAllSmartCredentialParametersField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Smart Credential comment.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Parameters passed to userSmartCredentialCreateEx and 
    ///   userSmartCredenialSetEx. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialParmsEx : UserSmartCredentialParms {
        
        private System.Nullable<bool> derivedCredentialField;
        
        private string derivedCredentialAuthenticatingCAField;
        
        private string derivedCredentialAuthenticatingSubjectDNField;
        
        private string derivedCredentialAuthenticatingSerialNumberField;
        
        private string derivedCredentialApplicationField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, this user smart credential is a derived credential. 
    ///   If not set, this parameter defaults to false.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> derivedCredential {
            get {
                return this.derivedCredentialField;
            }
            set {
                this.derivedCredentialField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this smart credential is derived, this value specifies the name of 
    ///   the CA that issued the certificate that this credential was derived 
    ///   from. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string derivedCredentialAuthenticatingCA {
            get {
                return this.derivedCredentialAuthenticatingCAField;
            }
            set {
                this.derivedCredentialAuthenticatingCAField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this smart credential is derived, this value specifies the subject 
    ///   DN of the certificate that this credential was derived from. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string derivedCredentialAuthenticatingSubjectDN {
            get {
                return this.derivedCredentialAuthenticatingSubjectDNField;
            }
            set {
                this.derivedCredentialAuthenticatingSubjectDNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this smart credential is derived, this value specifies the serial 
    ///   number of the certificate that this credential was derived from. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string derivedCredentialAuthenticatingSerialNumber {
            get {
                return this.derivedCredentialAuthenticatingSerialNumberField;
            }
            set {
                this.derivedCredentialAuthenticatingSerialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this smart credential is derived, this value specifies the name of 
    ///   the application to which this credential was issued. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string derivedCredentialApplication {
            get {
                return this.derivedCredentialApplicationField;
            }
            set {
                this.derivedCredentialApplicationField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialPACSSuspend. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialPACSSuspendCallParms {
        
        private string useridField;
        
        private string idField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the Smart Credential which will be suspended in 
    ///   PACS. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating the Smart Credential which will be suspended in 
    ///   PACS. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialPACSRegister. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialPACSRegisterCallParms {
        
        private string useridField;
        
        private string idField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the Smart Credential which will be registered to 
    ///   PACS. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating the Smart Credential which will be registered to 
    ///   PACS. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <summary>
    ///   Status information returned from a PACS.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialPACSInfo {
        
        private string nameField;
        
        private string typeField;
        
        private PACSStatus statusField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the PACS.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The type of applet registered with PACS.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   PACSStatus
    /// </datatype>
    /// <value>
    ///   The status of the smart credential in the named PACS.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PACSStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <summary>
    ///   A PACS Status value.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum PACSStatus {
        
    /// <value>
    ///   The smart credential is registered and active in the PACS.
    /// </value>
        ACTIVE,
        
    /// <value>
    ///   The smart credential is registered and suspended in the PACS. 
    /// </value>
        SUSPENDED,
        
    /// <value>
    ///   The smart credential is not registered in the PACS.
    /// </value>
        NOT_PRESENT,
        
    /// <value>
    ///   An error was encountered querying the PACS.
    /// </value>
        ERROR,
    }
    
    /// <summary>
    ///   This structure contains the information returned by a call to 
    ///   userSmartCredentialPACSGet 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialPACSGetResult {
        
        private UserSmartCredentialInfo smartCredentialField;
        
        private UserSmartCredentialPACSInfo[] pACSField;
        
    /// <datatype>
    ///   UserSmartCredentialInfo
    /// </datatype>
    /// <value>
    ///   The Smart Credential for which PACS information was retrieved. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserSmartCredentialInfo smartCredential {
            get {
                return this.smartCredentialField;
            }
            set {
                this.smartCredentialField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialPACSInfo[]
    /// </datatype>
    /// <value>
    ///   Status for each PACS system this smart credential is associated with. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserSmartCredentialPACSInfo[] PACS {
            get {
                return this.pACSField;
            }
            set {
                this.pACSField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialPACSGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialPACSGetCallParms {
        
        private string useridField;
        
        private string idField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the Smart Credential for which PACS information will 
    ///   be retrieved. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The id indicating the Smart Credential for which PACS information will 
    ///   be retrieved. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialTokenCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialTokenCreateCallParms {
        
        private string useridField;
        
        private string idField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the Smart Credential for which a token is to be 
    ///   created. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The id indicating the Smart Credential for which a token is to be 
    ///   created. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialDigitalIdCreateRecoverEx. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialDigitalIdCreateRecoverExCallParms {
        
        private string useridField;
        
        private string idField;
        
        private UserDigitalIdParmsEx parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the Smart Credential for which a digital Id will be 
    ///   created or recovered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating the Smart Credential for which a digital Id will be 
    ///   created or recovered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   UserDigitalIdParmsEx
    /// </datatype>
    /// <value>
    ///   Parameters for the create/recover operation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserDigitalIdParmsEx parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Contains an certificate and (optionally) the corresponding private 
    ///   key. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CertAndKey {
        
        private byte[] certField;
        
        private byte[] privateKeyField;
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] Cert {
            get {
                return this.certField;
            }
            set {
                this.certField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The private key.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] PrivateKey {
            get {
                return this.privateKeyField;
            }
            set {
                this.privateKeyField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a Digital Id Certificate Response.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdCertResponse {
        
        private DigitalIdCertStreamPolicyNameAndId certStreamPolicyNamdAndIdField;
        
        private CertAndKey[] certsAndKeysField;
        
        private string mscapiKeyContainerNameTemplateField;
        
    /// <datatype>
    ///   DigitalIdCertStreamPolicyNameAndId
    /// </datatype>
    /// <value>
    ///   The name and unique identifier of the certificate stream policy that 
    ///   governs the issuance the requested certificate. When used with an 
    ///   Entrust CA, this is the certificate definition name; when used with a 
    ///   Microsoft CA, this is the certificate template common name. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DigitalIdCertStreamPolicyNameAndId CertStreamPolicyNamdAndId {
            get {
                return this.certStreamPolicyNamdAndIdField;
            }
            set {
                this.certStreamPolicyNamdAndIdField = value;
            }
        }
        
    /// <datatype>
    ///   CertAndKey[]
    /// </datatype>
    /// <value>
    ///   A list (from most newest to oldest) of certificates and private keys. 
    ///   The first entry will always be present; it is the latest key and 
    ///   certificate in the stream. The certificate for this entry will always be 
    ///   present but the private key will only be present for certificate 
    ///   streams that indicate server generation and entries that are recovered 
    ///   from backup. The remaining entries will be present only during a key 
    ///   recovery operation. For these entries, a certificate and private key 
    ///   will always be present. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CertAndKey[] CertsAndKeys {
            get {
                return this.certsAndKeysField;
            }
            set {
                this.certsAndKeysField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Provides a template for the Microsoft CryptoAPI (MS-CAPI) key 
    ///   container names when the private keys of this certificate stream are stored 
    ///   in MS-CAPI. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MscapiKeyContainerNameTemplate {
            get {
                return this.mscapiKeyContainerNameTemplateField;
            }
            set {
                this.mscapiKeyContainerNameTemplateField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the information returned by a call to 
    ///   userDigitalIdCreateRecover or userSmartCredentialDigitalIdCreateRecover. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDigitalIdCreateRecoverResult {
        
        private UserDigitalIdInfo digitalIdField;
        
        private string refNumField;
        
        private string authCodeField;
        
        private System.Nullable<DigitalIdSecurityStoreType> securityStoreTypeField;
        
        private byte[] securityStoreField;
        
        private string securityStorePasswordField;
        
        private DigitalIdCertResponse[] certResponsesField;
        
    /// <datatype>
    ///   UserDigitalIdInfo
    /// </datatype>
    /// <value>
    ///   Information about the digital identity that was created or recovered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserDigitalIdInfo digitalId {
            get {
                return this.digitalIdField;
            }
            set {
                this.digitalIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The reference number. When the create/recover operation is performed 
    ///   against an Entrust CA, this value will be null if a Security Store is 
    ///   created or P10 requests are processed as part of the create/recover 
    ///   operation. When the create/recover operation is performed against a 
    ///   Microsoft CA, this value will always be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string RefNum {
            get {
                return this.refNumField;
            }
            set {
                this.refNumField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The authorization code. When the create/recover operation is performed 
    ///   against an Entrust CA, this value will be null if a Profile is 
    ///   created or P10 requests are processed as part of the create/recover 
    ///   operation. When the create/recover operation is performed against a 
    ///   Microsoft CA, this value will always be null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AuthCode {
            get {
                return this.authCodeField;
            }
            set {
                this.authCodeField = value;
            }
        }
        
    /// <datatype>
    ///   DigitalIdSecurityStoreType
    /// </datatype>
    /// <value>
    ///   If a security store was created as part of the create/recover 
    ///   operation, this attribute will specify the type of security store created. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<DigitalIdSecurityStoreType> SecurityStoreType {
            get {
                return this.securityStoreTypeField;
            }
            set {
                this.securityStoreTypeField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   If a security store was created as part of the create/recover 
    ///   operation, this attribute will contain the security store. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] SecurityStore {
            get {
                return this.securityStoreField;
            }
            set {
                this.securityStoreField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If a password was generated when a security store was created as part 
    ///   of the create/recover operation, this attribute will contain the 
    ///   generated password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SecurityStorePassword {
            get {
                return this.securityStorePasswordField;
            }
            set {
                this.securityStorePasswordField = value;
            }
        }
        
    /// <datatype>
    ///   DigitalIdCertResponse[]
    /// </datatype>
    /// <value>
    ///   If P10 requests were processed as part of the create/recover operation 
    ///   the certificate responses contain the certificates created for each 
    ///   P10 request. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public DigitalIdCertResponse[] CertResponses {
            get {
                return this.certResponsesField;
            }
            set {
                this.certResponsesField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialDigitalIdCreateRecover. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialDigitalIdCreateRecoverCallParms {
        
        private string useridField;
        
        private string idField;
        
        private UserDigitalIdParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the Smart Credential for which a digital Id will be 
    ///   created or recovered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating the Smart Credential for which a digital Id will be 
    ///   created or recovered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   UserDigitalIdParms
    /// </datatype>
    /// <value>
    ///   Parameters for the create/recover operation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserDigitalIdParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the information returned by a call to 
    ///   userSmartCredentialUnblock 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialUnblockResult {
        
        private UserSmartCredentialInfo smartCredentialField;
        
        private string unblockCodeField;
        
        private string deliveryField;
        
    /// <datatype>
    ///   UserSmartCredentialInfo
    /// </datatype>
    /// <value>
    ///   The Smart Credential that was unblocked.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserSmartCredentialInfo smartCredential {
            get {
                return this.smartCredentialField;
            }
            set {
                this.smartCredentialField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The code that can be used to unblock the Smart Credential. If the 
    ///   administrator does not have permission to view the unblock code it will 
    ///   not be included in the response. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string unblockCode {
            get {
                return this.unblockCodeField;
            }
            set {
                this.unblockCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the delivery mechanism used to delivery the unblock code. 
    ///   The value will be null if the unblock code was not delivered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string delivery {
            get {
                return this.deliveryField;
            }
            set {
                this.deliveryField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialUnblock. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialUnblockCallParms {
        
        private string useridField;
        
        private string idField;
        
        private string variableField;
        
        private string challengeField;
        
        private string deliveryField;
        
        private UserDeliveryParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the Smart Credential to be unblocked.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be unblocked.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The variable that stores the unblock key for the Smart Credential to 
    ///   be unblocked. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string variable {
            get {
                return this.variableField;
            }
            set {
                this.variableField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The unblock challenge generated by the Smart Credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string challenge {
            get {
                return this.challengeField;
            }
            set {
                this.challengeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, a delivery to be used to delivery the unblock response 
    ///   to the user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string delivery {
            get {
                return this.deliveryField;
            }
            set {
                this.deliveryField = value;
            }
        }
        
    /// <datatype>
    ///   UserDeliveryParms
    /// </datatype>
    /// <value>
    ///   If specified optional parameters passed to the delivery operation. 
    ///   This parameter is ignored if the delivery is not performed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserDeliveryParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialSetEx. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialSetExCallParms {
        
        private string useridField;
        
        private string idField;
        
        private UserSmartCredentialParmsEx parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to update a Smart Credential for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be updated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialParmsEx
    /// </datatype>
    /// <value>
    ///   The parameters to update the Smart Credential with.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserSmartCredentialParmsEx parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialSetCallParms {
        
        private string useridField;
        
        private string idField;
        
        private UserSmartCredentialParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to update a Smart Credential for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be updated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialParms
    /// </datatype>
    /// <value>
    ///   The parameters to update the Smart Credential with.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserSmartCredentialParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the results returned from userSmartCredentialSignComplete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialSignCompleteResult {
        
        private string signatureField;
        
        private string[] certificateChainField;
        
        private UserSmartCredentialInfo smartCredentialField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The base-64 encoded signature of the digest provided in the call to 
    ///   userSmartCredentialSignStart. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string signature {
            get {
                return this.signatureField;
            }
            set {
                this.signatureField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of base-64 encoded certificates. The first entry in the list is 
    ///   the root CA. The last entry in the list is the certificate 
    ///   corresponding to the private key used to generate the signature. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] certificateChain {
            get {
                return this.certificateChainField;
            }
            set {
                this.certificateChainField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialInfo
    /// </datatype>
    /// <value>
    ///   A list of base-64 encoded certificates. The first entry in the list is 
    ///   the root CA. The last entry in the list is the certificate 
    ///   corresponding to the private key used to generate the signature. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserSmartCredentialInfo smartCredential {
            get {
                return this.smartCredentialField;
            }
            set {
                this.smartCredentialField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialSignComplete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialSignCompleteCallParms {
        
        private string useridField;
        
        private string idField;
        
        private string transactionIdField;
        
        private System.Nullable<bool> cancelTransactionField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user owning the smart credential to be used to sign.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be used to sign. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The transaction id returned from a previous call to 
    ///   userSmartCredentialSignStart. 
    ///   If a response isn't available for the transaction an error indicating 
    ///   that the response is not available will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string transactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If cancelTransaction is specified as true and no response is available 
    ///   for the specified transactionId then the transaction will be 
    ///   canceled and an error indicating that the transaction has been canceled will 
    ///   be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> cancelTransaction {
            get {
                return this.cancelTransactionField;
            }
            set {
                this.cancelTransactionField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the results returned from userSmartCredentialSignStart. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialSignStartResult {
        
        private string transactionIdField;
        
        private System.DateTime createDateField;
        
        private int lifetimeField;
        
        private UserSmartCredentialInfo smartCredentialField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The transactionId of the signature operation.
    ///   This value must be provided as a parameter to the call to 
    ///   userSmartCredentialSignComplete. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string transactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date on which this transaction was started.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime createDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The lifetime of the transaction in seconds.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int lifetime {
            get {
                return this.lifetimeField;
            }
            set {
                this.lifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialInfo
    /// </datatype>
    /// <value>
    ///   A list of base-64 encoded certificates. The first entry in the list is 
    ///   the root CA. The last entry in the list is the certificate 
    ///   corresponding to the private key used to generate the signature. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserSmartCredentialInfo smartCredential {
            get {
                return this.smartCredentialField;
            }
            set {
                this.smartCredentialField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when using a smart credential to sign a 
    ///   given digest. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialSignParms {
        
        private string digestHashAlgField;
        
        private string digestField;
        
        private string summaryField;
        
        private string callbackField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The hash algorithm used to generate the digest.
    ///   Allowed values are SHA-1, SHA-224, SHA-256, SHA-384 and SHA-512. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string digestHashAlg {
            get {
                return this.digestHashAlgField;
            }
            set {
                this.digestHashAlgField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The base-64 encoded digest to be signed.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string digest {
            get {
                return this.digestField;
            }
            set {
                this.digestField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A summary describing the information that is being signed.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A URL that will be called by Entrust IdentityGuard when a response is 
    ///   ready for the signature. 
    ///   After receiving the callback the client should call 
    ///   userSmartCredentialSignComplete to retrieve the signature. 
    ///   If the URL value includes the token &lt;STATUS&gt; it will be replaced 
    ///   with one of the values CONFIRM, CONCERN or CANCEL indicating the 
    ///   status of the operation. 
    ///   If the URL value includes the token &lt;TRANSACTIONID&gt; it will be 
    ///   replaced with the transaction Id of the transaction. 
    ///   If the URL is not provided, the client application can poll Entrust 
    ///   Identity for a response by repeatedly calling 
    ///   userSmartCredentialSignComplete. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string callback {
            get {
                return this.callbackField;
            }
            set {
                this.callbackField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialSignStart. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialSignStartCallParms {
        
        private string useridField;
        
        private string idField;
        
        private UserSmartCredentialSignParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user owning the smart credential to be used to sign.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be used to sign. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialSignParms
    /// </datatype>
    /// <value>
    ///   The parameters specifying what information is to be signed.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserSmartCredentialSignParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialTransactionValidate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialTransactionValidateCallParms {
        
        private string useridField;
        
        private string idField;
        
        private UserSmartCredentialValidateParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user owning the smart credential to be used to validate a 
    ///   transaction. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be used to validate a 
    ///   transaction. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialValidateParms
    /// </datatype>
    /// <value>
    ///   The parameters including the request and transaction to be validated. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserSmartCredentialValidateParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when validating a specified request or a 
    ///   transaction. The parameters are used for both the 
    ///   userSmartCredentialValidate and the userSmartCredentialTransactionValidate methods. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialValidateParms {
        
        private string challengeField;
        
        private string transactionIdField;
        
        private System.Nullable<TransactionStatusType> transactionStatusField;
        
        private string digestSignatureField;
        
        private string responseField;
        
        private string certificateField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The userSmartCredentialValidate method validates that the specified 
    ///   response is the signature of a request including the provided 
    ///   challenge. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string challenge {
            get {
                return this.challengeField;
            }
            set {
                this.challengeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The userSmartCredentialTransactionValidate method validates that the 
    ///   specified response is the signature of this transaction with the 
    ///   transaction status specified in the transactionStatus argument. 
    ///   If this argument is specified in a call to userSmartCredentialValidate 
    ///   then Entrust IdentityGuard verifies that the specified value is the 
    ///   current transaction for the specified user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string transactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
            }
        }
        
    /// <datatype>
    ///   TransactionStatusType
    /// </datatype>
    /// <value>
    ///   The userSmartCredentialTransactionValidate method validates that the 
    ///   specified response is the signature of the transaction specified in 
    ///   the transactionId argument with this transaction status. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<TransactionStatusType> transactionStatus {
            get {
                return this.transactionStatusField;
            }
            set {
                this.transactionStatusField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If the security challenge included a digest to be signed, the 
    ///   digestSignature parameter in the validate request will be the signature of 
    ///   that digest. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string digestSignature {
            get {
                return this.digestSignatureField;
            }
            set {
                this.digestSignatureField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The response is the generated signature of either the challenge (for 
    ///   the userSmartCredentialValidate method) or the transaction (for the 
    ///   userSmartCredentialTransactionValidate method). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The certificate corresponding to the private key used to generate the 
    ///   response. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string certificate {
            get {
                return this.certificateField;
            }
            set {
                this.certificateField = value;
            }
        }
    }
    
    /// <summary>
    ///   The transaction status type indicating the result of a transaction 
    ///   returned from a mobile application. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum TransactionStatusType {
        
    /// <value>
    ///   The transaction was confirmed by the end user. This means that the end 
    ///   user agrees that the transaction is valid. 
    /// </value>
        CONFIRM,
        
    /// <value>
    ///   The end user has indicated that they have a concern with the 
    ///   transaction. This may mean that the end user didn't expect the transaction or 
    ///   that the transaction they received did not match what they expected. 
    /// </value>
        CONCERN,
        
    /// <value>
    ///   The end user has canceled the transaction.
    /// </value>
        CANCEL,
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialValidate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialValidateCallParms {
        
        private string useridField;
        
        private string idField;
        
        private UserSmartCredentialValidateParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user owning the smart credential to be used to validate a 
    ///   response. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be used to validate a 
    ///   response. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialValidateParms
    /// </datatype>
    /// <value>
    ///   The parameters including the request and response to be validated. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserSmartCredentialValidateParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the information returned by a call to 
    ///   userSmartCredentialChallenge 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialChallengeResult {
        
        private UserSmartCredentialInfo smartCredentialField;
        
        private string challengeField;
        
        private string hashAlgField;
        
    /// <datatype>
    ///   UserSmartCredentialInfo
    /// </datatype>
    /// <value>
    ///   The Smart Credential for which a challenge was retrieved.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserSmartCredentialInfo smartCredential {
            get {
                return this.smartCredentialField;
            }
            set {
                this.smartCredentialField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The challenge.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string challenge {
            get {
                return this.challengeField;
            }
            set {
                this.challengeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The hash algorithm to be used to sign the challenge.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hashAlg {
            get {
                return this.hashAlgField;
            }
            set {
                this.hashAlgField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialChallenge. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialChallengeCallParms {
        
        private string useridField;
        
        private string idField;
        
        private string serialNumberField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user owning the smart credential for which a challenge will be 
    ///   returned. 
    ///   If the userid is specified, one of id or serial number must be 
    ///   specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating the Smart Credential for which a challenge will be 
    ///   returned. 
    ///   The id is ignored if the userid is not specified.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the Smart Credential for which a challenge will 
    ///   be returned. 
    ///   If the serial number argument is specified, the userid and id are not 
    ///   required. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialChallengeAuthenticate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialChallengeAuthenticateCallParms {
        
        private string useridField;
        
        private string idField;
        
        private SmartCredentialChallengeParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to authenticate smart credentials for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be authenticated. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialChallengeParms
    /// </datatype>
    /// <value>
    ///   The parameters used to authenticate the challenge response.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialChallengeParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialChallengeGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialChallengeGetCallParms {
        
        private string useridField;
        
        private string idField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user owning the smart credential for which a challenge is 
    ///   required. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be authenticated. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialGetEx. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialGetExCallParms {
        
        private string useridField;
        
        private string idField;
        
        private UserSmartCredentialGetParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get smart credentials for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialGetParms
    /// </datatype>
    /// <value>
    ///   Parameters that control what information is returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserSmartCredentialGetParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Parameters passed to userSmartCredentialGet that controls what 
    ///   information is returned. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialGetParms {
        
        private System.Nullable<bool> getDetailsField;
        
        private System.Nullable<bool> getRevocationDetailsField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, details about the digital Ids associated with 
    ///   the smart credential are returned. 
    ///   If not specified, this argument defaults to false.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getDetails {
            get {
                return this.getDetailsField;
            }
            set {
                this.getDetailsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, details about the digital Id associated with the 
    ///   smart credential and the revocation status retrieved from the CA are 
    ///   returned. 
    ///   If not specified, this argument defaults to false.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getRevocationDetails {
            get {
                return this.getRevocationDetailsField;
            }
            set {
                this.getRevocationDetailsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialGetCallParms {
        
        private string useridField;
        
        private string idField;
        
        private UserSmartCredentialGetParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get smart credentials for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialGetParms
    /// </datatype>
    /// <value>
    ///   Parameters that control what information is returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserSmartCredentialGetParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialDeleteCallParms {
        
        private string useridField;
        
        private string idField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to delete tokens for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Id indicating which Smart Credential is to be deleted.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialCreateEx. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialCreateExCallParms {
        
        private string useridField;
        
        private UserSmartCredentialParmsEx parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to create a Smart Credential for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialParmsEx
    /// </datatype>
    /// <value>
    ///   The parameters for the new Smart Credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserSmartCredentialParmsEx parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSmartCredentialCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSmartCredentialCreateCallParms {
        
        private string useridField;
        
        private UserSmartCredentialParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to create a Smart Credential for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialParms
    /// </datatype>
    /// <value>
    ///   The parameters for the new Smart Credential.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserSmartCredentialParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userBiometricSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserBiometricSetCallParms {
        
        private string useridField;
        
        private UserBiometricFilter filterField;
        
        private UserBiometricParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to update a biometric for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserBiometricFilter
    /// </datatype>
    /// <value>
    ///   The filter specifying which user biometrics are to be updated. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserBiometricFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   UserBiometricParms
    /// </datatype>
    /// <value>
    ///   The parameters to update the biometric with.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserBiometricParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines filters that specify which user biometrics of the user are 
    ///   returned. If none of the attributes are specified, any user biometric 
    ///   will match this filter. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserBiometricFilter {
        
        private string[] vendorIdsField;
        
        private string vendorManufacturerField;
        
        private BiometricType[] typesField;
        
        private BiometricState[] statesField;
        
        private BiometricEnrollState[] enrollStatesField;
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, only user biometrics with one of the given ids or names 
    ///   are returned. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] VendorIds {
            get {
                return this.vendorIdsField;
            }
            set {
                this.vendorIdsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only user biometrics whose vendor has the given 
    ///   manufacturer are returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string VendorManufacturer {
            get {
                return this.vendorManufacturerField;
            }
            set {
                this.vendorManufacturerField = value;
            }
        }
        
    /// <datatype>
    ///   BiometricType[]
    /// </datatype>
    /// <value>
    ///   If specified, only user biometrics whose vendor type has one of the 
    ///   given values are returned. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public BiometricType[] Types {
            get {
                return this.typesField;
            }
            set {
                this.typesField = value;
            }
        }
        
    /// <datatype>
    ///   BiometricState[]
    /// </datatype>
    /// <value>
    ///   If specified, only user biometrics with one of the specified states 
    ///   are returned. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public BiometricState[] States {
            get {
                return this.statesField;
            }
            set {
                this.statesField = value;
            }
        }
        
    /// <datatype>
    ///   BiometricEnrollState[]
    /// </datatype>
    /// <value>
    ///   If specified, only user biometrics with one of the specified enroll 
    ///   states are returned. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public BiometricEnrollState[] EnrollStates {
            get {
                return this.enrollStatesField;
            }
            set {
                this.enrollStatesField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the supported biometric types.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public enum BiometricType {
        
    /// <value>
    ///   Biometrics using the user's fingerprints.
    /// </value>
        FINGERPRINT,
        
    /// <value>
    ///   Biometrics using the user's face.
    /// </value>
        FACE,
        
    /// <value>
    ///   Biometrics using the user's voice.
    /// </value>
        VOICE,
        
    /// <value>
    ///   Biometrics using the user's iris.
    /// </value>
        IRIS,
    }
    
    /// <summary>
    ///   Defines the possible biometric states.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum BiometricState {
        
    /// <value>
    ///   State indicating that the biometric is active and can be used for 
    ///   authentication. 
    /// </value>
        ACTIVE,
        
    /// <value>
    ///   State indicating that the biometric is inactive and cannot be used for 
    ///   authentication. 
    /// </value>
        INACTIVE,
    }
    
    /// <summary>
    ///   Defines the possible biometric enrollment states.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum BiometricEnrollState {
        
    /// <value>
    ///   State indicating that the biometric has not been enrolled.
    /// </value>
        NOT_ENROLLED,
        
    /// <value>
    ///   State indicating that biometric enrollment has begun but has not been 
    ///   completed. 
    /// </value>
        ENROLLING,
        
    /// <value>
    ///   State indicating that biometric enrollment failed.
    /// </value>
        ENROLL_FAILED,
        
    /// <value>
    ///   State indicating that biometric enrollment has completed successfully. 
    /// </value>
        ENROLLED,
    }
    
    /// <summary>
    ///   Defines the parameters passed when creating or modifying a user 
    ///   biometric. All values can be null indicating that the default is used for 
    ///   create or the value is not changed for modify. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserBiometricParms {
        
        private System.Nullable<BiometricState> stateField;
        
        private byte[] biometricDataField;
        
        private NameValue[] enrollParametersField;
        
        private System.Nullable<bool> clearBiometricDataField;
        
        private string commentField;
        
    /// <datatype>
    ///   BiometricState
    /// </datatype>
    /// <value>
    ///   The state of the biometric.
    ///   If not specified when creating a biometric the state defaults to 
    ///   ACTIVE. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<BiometricState> State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   Biometric data. If biometric data and/or enrollment parameters are 
    ///   specified for the biometric create or update operations then the vendor 
    ///   enroll operation is invoked. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] BiometricData {
            get {
                return this.biometricDataField;
            }
            set {
                this.biometricDataField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   Enrollment parameters.
    ///   If biometric data and/or enrollment parameters are specified for the 
    ///   biometric create or update operations then the vendor enroll operation 
    ///   is invoked. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] EnrollParameters {
            get {
                return this.enrollParametersField;
            }
            set {
                this.enrollParametersField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If ClearBiometricData is specified as true for the userBiometricSet 
    ///   operation then the existing biometric data is removed and the biometric 
    ///   enroll state is reset to NOT_ENROLLED. This argument is ignored for 
    ///   the userBiometricCreate operation and is ignored if the BiometricData 
    ///   or EnrollParameters arguments are specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ClearBiometricData {
            get {
                return this.clearBiometricDataField;
            }
            set {
                this.clearBiometricDataField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The biometric comment.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about a user biometric.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserBiometricInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private string vendorIdField;
        
        private BiometricState stateField;
        
        private BiometricEnrollState enrollStateField;
        
        private System.Nullable<System.DateTime> enrollDateField;
        
        private NameValue[] vendorInfoField;
        
        private System.Nullable<System.DateTime> lastUsedDateField;
        
        private string commentField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID that owns the biometric.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name of the user ID  that owns the biometric.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user ID that owns the biometric.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This value will contain the name of the biometric vendor if it is 
    ///   defined. Otherwise it will contain the vendor id of the biometric. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   BiometricState
    /// </datatype>
    /// <value>
    ///   The state of the biometric.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BiometricState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   BiometricEnrollState
    /// </datatype>
    /// <value>
    ///   The enroll state of the biometric.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BiometricEnrollState EnrollState {
            get {
                return this.enrollStateField;
            }
            set {
                this.enrollStateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The enroll date of the biometric.
    ///   A value of null indicates that the biometric has not been enrolled. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> EnrollDate {
            get {
                return this.enrollDateField;
            }
            set {
                this.enrollDateField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   A list of information about the biometric that is specific to the 
    ///   biometric vendor. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] VendorInfo {
            get {
                return this.vendorInfoField;
            }
            set {
                this.vendorInfoField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The last used date of the biometric. A value of null indicates that 
    ///   the biometric has never been used. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> LastUsedDate {
            get {
                return this.lastUsedDateField;
            }
            set {
                this.lastUsedDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The biometric comment.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information returned about a user biometric.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserBiometricGetParms {
        
        private System.Nullable<bool> getVendorInfoField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns information specific to the biometric vendor. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getVendorInfo {
            get {
                return this.getVendorInfoField;
            }
            set {
                this.getVendorInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userBiometricGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserBiometricGetCallParms {
        
        private string useridField;
        
        private UserBiometricFilter filterField;
        
        private UserBiometricGetParms getParmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get a biometric for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserBiometricFilter
    /// </datatype>
    /// <value>
    ///   Filter specifying which biometrics to return.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserBiometricFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   UserBiometricGetParms
    /// </datatype>
    /// <value>
    ///   Parameters specifying extra information to return for each user 
    ///   biometric. If set as null, no extra information is returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserBiometricGetParms GetParms {
            get {
                return this.getParmsField;
            }
            set {
                this.getParmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userBiometricDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserBiometricDeleteCallParms {
        
        private string useridField;
        
        private UserBiometricFilter filterField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to delete a biometric for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserBiometricFilter
    /// </datatype>
    /// <value>
    ///   The filter specifying which user biometrics are to be deleted. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserBiometricFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userBiometricCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserBiometricCreateCallParms {
        
        private string useridField;
        
        private string vendorIdField;
        
        private UserBiometricParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to create a biometric for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name or id of the vendor to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   UserBiometricParms
    /// </datatype>
    /// <value>
    ///   The parameters for the new biometric.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserBiometricParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   The data returned from a userTokenList operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenListResult {
        
        private UserTokenInfo[] tokensField;
        
        private string nextUserField;
        
    /// <datatype>
    ///   UserTokenInfo[]
    /// </datatype>
    /// <value>
    ///   The list of tokens.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserTokenInfo[] tokens {
            get {
                return this.tokensField;
            }
            set {
                this.tokensField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The next user number. If set to a non-zero value, indicates that this 
    ///   result only includes a subset of the results, and additional user 
    ///   tokens have not yet been returned. This value can be included in the 
    ///   filter for a further search to continue the search at the next user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string nextUser {
            get {
                return this.nextUserField;
            }
            set {
                this.nextUserField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about a user token.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private string vendorIdField;
        
        private string serialNumberField;
        
        private string tokenSetField;
        
        private State stateField;
        
        private string tokenTypeField;
        
        private bool responseSupportedField;
        
        private bool challengeSupportedField;
        
        private bool unlockSupportedField;
        
        private bool signatureSupportedField;
        
        private bool deliveryAndSignatureSupportedField;
        
        private System.DateTime loadDateField;
        
        private bool createdForUserField;
        
        private bool usesLicenseField;
        
        private string activationStateField;
        
        private TokenActivationType currentActivationTypeField;
        
        private TokenActivationType[] availableActivationTypesField;
        
        private System.Nullable<System.DateTime> lastUsedDateField;
        
        private NameValue[] tokenParametersField;
        
        private string mobilePlatformField;
        
        private string mobileVersionField;
        
        private string[] rolesGrantingAccessField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID that owns the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name of the user ID  that owns the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user ID that owns the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This value will contain the name of the token vendor if it is defined. 
    ///   Otherwise it will contain the vendor id of the token. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The set of the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TokenSet {
            get {
                return this.tokenSetField;
            }
            set {
                this.tokenSetField = value;
            }
        }
        
    /// <datatype>
    ///   State
    /// </datatype>
    /// <value>
    ///   The state of the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public State State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The type of the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TokenType {
            get {
                return this.tokenTypeField;
            }
            set {
                this.tokenTypeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this token supports token response-only 
    ///   authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ResponseSupported {
            get {
                return this.responseSupportedField;
            }
            set {
                this.responseSupportedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this token supports token challenge/response 
    ///   authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ChallengeSupported {
            get {
                return this.challengeSupportedField;
            }
            set {
                this.challengeSupportedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this token supports the unlock operation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool UnlockSupported {
            get {
                return this.unlockSupportedField;
            }
            set {
                this.unlockSupportedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this token supports the data signature operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool SignatureSupported {
            get {
                return this.signatureSupportedField;
            }
            set {
                this.signatureSupportedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this token supports token delivery and data 
    ///   signature operation where Entrust IdentityGuard will deliver transaction 
    ///   details directly to the token where they will be used as input to the 
    ///   token response calculation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool DeliveryAndSignatureSupported {
            get {
                return this.deliveryAndSignatureSupportedField;
            }
            set {
                this.deliveryAndSignatureSupportedField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The load date of the token. If this is a soft token that was created 
    ///   for a user, this is the date at which the token was created. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime LoadDate {
            get {
                return this.loadDateField;
            }
            set {
                this.loadDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this is a soft token that was created and 
    ///   immediately assigned to a user using userTokenCreate. Such tokens cannot be 
    ///   unassigned using userTokenUnassign. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool CreatedForUser {
            get {
                return this.createdForUserField;
            }
            set {
                this.createdForUserField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this is a soft token that uses up a license in the 
    ///   system. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool UsesLicense {
            get {
                return this.usesLicenseField;
            }
            set {
                this.usesLicenseField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The activation state of the token. One of CREATED, 
    ///   ACTIVATION_CODE_GENERATED, or ACTIVATED. CREATED means the token has been created using 
    ///   userTokenCreate. 
    ///   ACTIVATION_CODE_GENERATED means activation codes have been generated 
    ///   using userTokenActivate. 
    ///   ACTIVATED means the token has been activated using 
    ///   userTokenActivateComplete, or the token did not require any activation process. Only 
    ///   tokens in the ACTIVATED state may be used for authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ActivationState {
            get {
                return this.activationStateField;
            }
            set {
                this.activationStateField = value;
            }
        }
        
    /// <datatype>
    ///   TokenActivationType
    /// </datatype>
    /// <value>
    ///   Value specifying what kind of activation is current configured for 
    ///   this token. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TokenActivationType CurrentActivationType {
            get {
                return this.currentActivationTypeField;
            }
            set {
                this.currentActivationTypeField = value;
            }
        }
        
    /// <datatype>
    ///   TokenActivationType[]
    /// </datatype>
    /// <value>
    ///   Value specifying what kind of activation types are available for this 
    ///   token. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public TokenActivationType[] AvailableActivationTypes {
            get {
                return this.availableActivationTypesField;
            }
            set {
                this.availableActivationTypesField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The last used date of the token. A value of Date(0) indicates that the 
    ///   token has never been used. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> LastUsedDate {
            get {
                return this.lastUsedDateField;
            }
            set {
                this.lastUsedDateField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   A list of token specific parameters.
    ///   For example, for soft tokens, these parameters might include 
    ///   information about the device on which this token was loaded. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] tokenParameters {
            get {
                return this.tokenParametersField;
            }
            set {
                this.tokenParametersField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this token has been registered with the Entrust IdentityGuard 
    ///   Mobile OTP application, this value will show the platform type of the 
    ///   mobile application. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string MobilePlatform {
            get {
                return this.mobilePlatformField;
            }
            set {
                this.mobilePlatformField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this token has been registered with the Entrust IdentityGuard 
    ///   Mobile OTP application, this value will show the version of the mobile 
    ///   application. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string MobileVersion {
            get {
                return this.mobileVersionField;
            }
            set {
                this.mobileVersionField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The token comment.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenListCallParms {
        
        private UserFilter filterField;
        
    /// <datatype>
    ///   UserFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which tokens are to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed to userTokenTransactionValidate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenTransactionValidateParms {
        
        private string transactionIdField;
        
        private TransactionStatusType statusField;
        
        private string responseField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The transaction id of the transaction being validated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TransactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
            }
        }
        
    /// <datatype>
    ///   TransactionStatusType
    /// </datatype>
    /// <value>
    ///   The status of the transaction.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionStatusType Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The response from the token for the transaction.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenTransactionValidate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenTransactionValidateCallParms {
        
        private string useridField;
        
        private UserTokenFilter filterField;
        
        private UserTokenTransactionValidateParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the token that was used to validate the transaction. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which token was used to validate the 
    ///   transaction. 
    ///   This filter must specify a single token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenTransactionValidateParms
    /// </datatype>
    /// <value>
    ///   Parameters required to validate the transaction.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenTransactionValidateParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a filter to limit which tokens are returned for a user. If 
    ///   both VendorId/SerialNumber and State are set, VendorId/SerialNumber is 
    ///   used. If neither are set, all tokens for the user are returned. 
    ///   If specified, the sets filter applies in addition to the other search 
    ///   criteria. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenFilter {
        
        private string vendorIdField;
        
        private string serialNumberField;
        
        private State[] stateField;
        
        private string[] tokenSetsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Tokens that match the given vendor Id.
    ///   This value is ignored if the serialNumber is not specified. If a 
    ///   serial number is specified and this value is not, then the default token 
    ///   vendor is assumed, and any token from the default token vendor 
    ///   matching the given serial number is returned. Note that this value can 
    ///   contain either the name or id of the token vendor. Either value will match 
    ///   the token vendor. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Tokens that match the given serial number.
    ///   The value can include the '*' character for wildcard matching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   State[]
    /// </datatype>
    /// <value>
    ///   Tokens that match one of the given states.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public State[] State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   Tokens that match one of the given sets.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] TokenSets {
            get {
                return this.tokenSetsField;
            }
            set {
                this.tokenSetsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the information returned by a call to 
    ///   userTokenActivateComplete 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenActivateCompleteResult {
        
        private UserTokenInfo tokenField;
        
        private NameValue[] outputParametersField;
        
    /// <datatype>
    ///   UserTokenInfo
    /// </datatype>
    /// <value>
    ///   The token that was activated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenInfo token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   Parameters to be returned from the token vendor implementation on the 
    ///   server to the soft token. 
    ///   How these parameters are returned to the soft token is dependent on 
    ///   the particular soft token implementation. For the Entrust Soft Token 
    ///   implementation activating tokens using the OFFLINE activation method, 
    ///   there are no output parameters to return to the Entrust IdentityGuard 
    ///   Mobile soft token. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] outputParameters {
            get {
                return this.outputParametersField;
            }
            set {
                this.outputParametersField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenActivateComplete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenActivateCompleteCallParms {
        
        private string useridField;
        
        private UserTokenFilter filterField;
        
        private NameValue[] activationParmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the token to be activated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which token is to be activated. This filter must 
    ///   specify a single token. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   Parameters required to activate the token. These the required 
    ///   parameters vary depending on the token vendor implementation, what kind of 
    ///   activation is being performed, and what stage of activation the token 
    ///   is at. For the Entrust Soft Token vendor using the standard OFFLINE 
    ///   activation method, there is one required parameter named 
    ///   "registrationCode", whose value must be the registration code generated by the soft 
    ///   token. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] activationParms {
            get {
                return this.activationParmsField;
            }
            set {
                this.activationParmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the information returned by a call to 
    ///   userTokenActivateEx 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenActivateResultEx {
        
        private UserTokenInfo tokenField;
        
        private string activationIdField;
        
        private string activationCodeField;
        
        private string checkCodeField;
        
        private System.Nullable<System.DateTime> expiryDateField;
        
        private bool expiredField;
        
        private byte[] qRCodeField;
        
        private string qRCodeLinkField;
        
        private string qRCodePasswordField;
        
    /// <datatype>
    ///   UserTokenInfo
    /// </datatype>
    /// <value>
    ///   The token that was activated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenInfo token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The id used to activate the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string activationId {
            get {
                return this.activationIdField;
            }
            set {
                this.activationIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The code used to activate the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string activationCode {
            get {
                return this.activationCodeField;
            }
            set {
                this.activationCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   An optional check code that may be required for some token vendors. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string checkCode {
            get {
                return this.checkCodeField;
            }
            set {
                this.checkCodeField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The expiry date of the activation code.
    ///   A value of null means the activation code does not expire.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the activation code is expired now.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool expired {
            get {
                return this.expiredField;
            }
            set {
                this.expiredField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   If the arguments passed to userTokenActivateEx specified that a QR 
    ///   code should be generated this value will include the QR code. 
    ///   The QR code will encode the token serial number, activation code and 
    ///   optionally the activation address. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] QRCode {
            get {
                return this.qRCodeField;
            }
            set {
                this.qRCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If the arguments passed to userTokenActivateEx specified that a QR 
    ///   code should be generated and the QR code has an associated link value 
    ///   this value will include the QR code link. 
    ///   The QR code will encode the token serial number, activation code and 
    ///   optionally the activation address. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string QRCodeLink {
            get {
                return this.qRCodeLinkField;
            }
            set {
                this.qRCodeLinkField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If the arguments passed to userTokenActivateEx specified that a QR 
    ///   code should be generated and the QR code is protected by a randomly 
    ///   generated password, the value will include that password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string QRCodePassword {
            get {
                return this.qRCodePasswordField;
            }
            set {
                this.qRCodePasswordField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenActivateEx. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenActivateExCallParms {
        
        private string useridField;
        
        private UserTokenFilter filterField;
        
        private UserTokenParmsEx parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the token to be activated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which token is to be activated. This filter must 
    ///   specify a single token. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenParmsEx
    /// </datatype>
    /// <value>
    ///   Parameters which may contain the optional activation password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserTokenParmsEx parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Information passed to userTokenActivateEx.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenParmsEx : UserTokenParms {
        
        private string activationDeliveryField;
        
        private string activationContactField;
        
        private System.Nullable<bool> resetActivationCodeField;
        
        private System.Nullable<bool> generateQRCodeField;
        
        private System.Nullable<int> qRCodeSizeField;
        
        private string activationAddressField;
        
        private string appSchemeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This parameter is only used by the method userTokenActivate. If 
    ///   specified the activation information will be delivered using the specified 
    ///   delivery mechanism. The specified delivery mechanism must have type 
    ///   token activate. When the activationDelivery value is specified the 
    ///   activationContact value must be specified and must match the delivery 
    ///   mechanism. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string activationDelivery {
            get {
                return this.activationDeliveryField;
            }
            set {
                this.activationDeliveryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This parameter is only used by the method userTokenActivate. If 
    ///   specified the activation information will be delivered to the specified 
    ///   contact. 
    ///   When the activationContact value is specified the activationDelivery 
    ///   value must must be specified and must match the delivery mechanism. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string activationContact {
            get {
                return this.activationContactField;
            }
            set {
                this.activationContactField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   This parameter is only used by the method userTokenActivate. If 
    ///   specified as true and the token already has an activation code, the 
    ///   existing activation code will be replaced. 
    ///   If the parameter is not specified or specified as false, the existing 
    ///   activation code will not be replaced. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> resetActivationCode {
            get {
                return this.resetActivationCodeField;
            }
            set {
                this.resetActivationCodeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   This parameter is only used by the method userTokenActivate. If 
    ///   specified as true, the user token activate method will return a QR code 
    ///   containing the activation arguments including the token serial number, 
    ///   activation code and activation address (if specified). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> generateQRCode {
            get {
                return this.generateQRCodeField;
            }
            set {
                this.generateQRCodeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   This parameter is only used by the method userTokenActivate. If the 
    ///   generateQRCode argument is specified as true, this value if specified 
    ///   will be used to determine the QR code size. If specified it must be a 
    ///   value between 1 and 1000. If not specified the size defaults to 250. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> QRCodeSize {
            get {
                return this.qRCodeSizeField;
            }
            set {
                this.qRCodeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This parameter is only used by the method userTokenActivate. If the 
    ///   generateQRCode argument is specified as true, this value if specified 
    ///   will be included in the generated QR code. If no value is specified, 
    ///   the activation address will not be included in the QR code. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string activationAddress {
            get {
                return this.activationAddressField;
            }
            set {
                this.activationAddressField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This parameter is only used by the method userTokenActivate. If a 
    ///   value is specified it specified the application specified URL scheme used 
    ///   for the activation and transaction URLs encoded into QR Codes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string appScheme {
            get {
                return this.appSchemeField;
            }
            set {
                this.appSchemeField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when assigning, creating or modifying a 
    ///   user token. All values can be null indicating that the default is 
    ///   used for assign or the value is not changed for modify. 
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserTokenParmsEx))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenParms {
        
        private string tokenSetField;
        
        private System.Nullable<State> stateField;
        
        private System.Nullable<bool> resetTokenField;
        
        private string resetTokenResponse1Field;
        
        private string resetTokenResponse2Field;
        
        private string activationPasswordField;
        
        private System.Nullable<TokenActivationType> activationTypeField;
        
        private NameValue[] tokenParametersField;
        
        private System.Nullable<bool> mergeTokenParametersField;
        
        private string[] removeTokenParametersField;
        
        private System.Nullable<bool> removeAllTokenParametersField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The set of the token. If not specified when assigning or creating a 
    ///   token, the default set (with an empty name) is used. 
    ///   The maximum number of allowed sets is controlled by policy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string TokenSet {
            get {
                return this.tokenSetField;
            }
            set {
                this.tokenSetField = value;
            }
        }
        
    /// <datatype>
    ///   State
    /// </datatype>
    /// <value>
    ///   The state of the token. If set when assigning or creating a token, 
    ///   this must be one of PENDING. 
    ///   HOLD_PENDING, CURRENT, or HOLD. If not specified when assigning or 
    ///   creating a token, the token state is set to PENDING. 
    ///   The state is also subject to the restriction that a user can have at 
    ///   most one token with a given set in either of the PENDING or 
    ///   HOLD_PENDING states and at most one token with a given set in either of the 
    ///   CURRENT or HOLD states. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<State> State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, the token will be reset.
    ///   Note that some token implementations require that one or two token 
    ///   responses be included with the token reset request. These responses are 
    ///   specified in the resetTokenResponse1 and resetTokenResponse2 
    ///   attributes. 
    ///   This value is ignored when assigning or creating a token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> resetToken {
            get {
                return this.resetTokenField;
            }
            set {
                this.resetTokenField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   To reset a token, some token implementations require one or two token 
    ///   responses. If required, this attribute specifies the first response. 
    ///   If this attribute is specified, the resetToken attribute is ignored. 
    ///   This value is ignored when assigning or creating a token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string resetTokenResponse1 {
            get {
                return this.resetTokenResponse1Field;
            }
            set {
                this.resetTokenResponse1Field = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   To reset a token, some token implementations require two token 
    ///   responses. If specified, this attribute specifies the second response. 
    ///   This value is ignored when assigning or creating a token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string resetTokenResponse2 {
            get {
                return this.resetTokenResponse2Field;
            }
            set {
                this.resetTokenResponse2Field = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The activation password. If specified, this value is only used for the 
    ///   userTokenActivate operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string activationPassword {
            get {
                return this.activationPasswordField;
            }
            set {
                this.activationPasswordField = value;
            }
        }
        
    /// <datatype>
    ///   TokenActivationType
    /// </datatype>
    /// <value>
    ///   The activation type to be used for this token.
    ///   Can be specified for the userTokenAssign or userTokenSet methods. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<TokenActivationType> ActivationType {
            get {
                return this.activationTypeField;
            }
            set {
                this.activationTypeField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   Token parameters that will be set for this token during the 
    ///   userTokenCreate, userTokenAssign or userTokenSet operation. 
    ///   If specified during a userTokenSet operation and MergeTokenParameters 
    ///   is false or null, then the token's existing parameters are replaced 
    ///   by this list. Otherwise, these values are merged with the existing 
    ///   values. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] TokenParameters {
            get {
                return this.tokenParametersField;
            }
            set {
                this.tokenParametersField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the TokenParameters list is merged with the existing 
    ///   values during the userTokenSet operation. If not specified, this value 
    ///   defaults to false. This parameter only applies to the userTokenSet 
    ///   operation and is ignored by other operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> MergeTokenParameters {
            get {
                return this.mergeTokenParametersField;
            }
            set {
                this.mergeTokenParametersField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of token parameter names to remove from the list of existing 
    ///   token parameters. This argument only applies to the userTokenSet 
    ///   operation. This argument is ignored if RemoveAllTokenParameters is 
    ///   specifies as true. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RemoveTokenParameters {
            get {
                return this.removeTokenParametersField;
            }
            set {
                this.removeTokenParametersField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, remove all token parameters. If specified, this value 
    ///   takes precedence over RemoveTokenParameters. If not specified it 
    ///   defaults to false. This parameter only applies to the userTokenSet 
    ///   operation, and is ignored by other operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RemoveAllTokenParameters {
            get {
                return this.removeAllTokenParametersField;
            }
            set {
                this.removeAllTokenParametersField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The token comment. If not set when assigning a token to a user, the 
    ///   existing token comments are preserved. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the information returned by a call to 
    ///   userTokenActivate 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenActivateResult {
        
        private UserTokenInfo tokenField;
        
        private string activationIdField;
        
        private string activationCodeField;
        
        private string checkCodeField;
        
    /// <datatype>
    ///   UserTokenInfo
    /// </datatype>
    /// <value>
    ///   The token that was activated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenInfo token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The id used to activate the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string activationId {
            get {
                return this.activationIdField;
            }
            set {
                this.activationIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The code used to activate the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string activationCode {
            get {
                return this.activationCodeField;
            }
            set {
                this.activationCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   An optional check code that may be required for some token vendors. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string checkCode {
            get {
                return this.checkCodeField;
            }
            set {
                this.checkCodeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenActivate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenActivateCallParms {
        
        private string useridField;
        
        private UserTokenFilter filterField;
        
        private UserTokenParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the token to be activated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which token is to be activated. This filter must 
    ///   specify a single token. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenParms
    /// </datatype>
    /// <value>
    ///   Parameters which may contain the optional activation password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserTokenParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the information returned by a call to 
    ///   userTokenResponseGet 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenResponse {
        
        private UserTokenInfo tokenField;
        
        private string responseField;
        
    /// <datatype>
    ///   UserTokenInfo
    /// </datatype>
    /// <value>
    ///   The token for which the response was returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenInfo token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The token response.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenResponseGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenResponseGetCallParms {
        
        private string useridField;
        
        private UserTokenFilter filterField;
        
        private System.Nullable<bool> challengeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the token for which a response will be retrieved. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating for which token a response will be returned. 
    ///   This filter must specify a single token. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If the challenge flag is not specified or is set to true, then a 
    ///   TOKENRO response is returned. If the challenge flag is set to true, a 
    ///   TOKENCR response for the currently retained token challenge is returned. 
    ///   If the current token does not have a retained challenge an error is 
    ///   returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> challenge {
            get {
                return this.challengeField;
            }
            set {
                this.challengeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the information returned by a call to 
    ///   userTokenUnlockEx 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenUnlockResultEx {
        
        private UserTokenInfo tokenField;
        
        private string unlockCodeField;
        
        private byte[] unlockQRCodeField;
        
        private string unlockQRCodeLinkField;
        
    /// <datatype>
    ///   UserTokenInfo
    /// </datatype>
    /// <value>
    ///   The token that was unlocked.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenInfo token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The code that can be used to unlock the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string unlockCode {
            get {
                return this.unlockCodeField;
            }
            set {
                this.unlockCodeField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   If the token expects the unlock code to be specified as a QR code, 
    ///   this value specifies the QR code. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] unlockQRCode {
            get {
                return this.unlockQRCodeField;
            }
            set {
                this.unlockQRCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This value may include the value encoded into the QR code for 
    ///   applications that can't display the QR code. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string unlockQRCodeLink {
            get {
                return this.unlockQRCodeLinkField;
            }
            set {
                this.unlockQRCodeLinkField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenUnlockEx. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenUnlockExCallParms {
        
        private string useridField;
        
        private UserTokenFilter filterField;
        
        private string challengeField;
        
        private System.Nullable<int> qRCodeSizeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the token to be unlocked.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which token is to be unlocked. This filter must 
    ///   specify a single token. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The unlock challenge generated by the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string challenge {
            get {
                return this.challengeField;
            }
            set {
                this.challengeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If the token unlock challenge is returned as a QR code, this attribute 
    ///   specifies the default size of the QR code. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> QRCodeSize {
            get {
                return this.qRCodeSizeField;
            }
            set {
                this.qRCodeSizeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the information returned by a call to 
    ///   userTokenUnlock 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenUnlockResult {
        
        private UserTokenInfo tokenField;
        
        private string unlockCodeField;
        
    /// <datatype>
    ///   UserTokenInfo
    /// </datatype>
    /// <value>
    ///   The token that was unlocked.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenInfo token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The code that can be used to unlock the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unlockCode {
            get {
                return this.unlockCodeField;
            }
            set {
                this.unlockCodeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenUnlock. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenUnlockCallParms {
        
        private string useridField;
        
        private UserTokenFilter filterField;
        
        private string challengeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user who owns the token to be unlocked.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which token is to be unlocked. This filter must 
    ///   specify a single token. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The unlock challenge generated by the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string challenge {
            get {
                return this.challengeField;
            }
            set {
                this.challengeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenChallengeAuthenticate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenChallengeAuthenticateCallParms {
        
        private string useridField;
        
        private UserTokenFilter filterField;
        
        private string responseField;
        
        private System.Nullable<bool> obeyLockoutField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to authenticate using a token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which token is to be used for authentication. 
    ///   The filter must evaluate to a single token. The token must support 
    ///   challenge. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The response to authenticate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this flag is true, this operation will check the user's current 
    ///   lockout and update the lockout based on whether the response 
    ///   authenticates. If this flag is false, this operation will ignore lockout. If not 
    ///   set, this flag defaults to false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> obeyLockout {
            get {
                return this.obeyLockoutField;
            }
            set {
                this.obeyLockoutField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenAuthenticate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenAuthenticateCallParms {
        
        private string useridField;
        
        private UserTokenFilter filterField;
        
        private string responseField;
        
        private System.Nullable<bool> obeyLockoutField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to authenticate using a token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which token is to be used for authentication. 
    ///   The filter must evaluate to a single token. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The response to authenticate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this flag is true, this operation will check the user's current 
    ///   lockout and update the lockout based on whether the response 
    ///   authenticates. If this flag is false, this operation will ignore lockout. If not 
    ///   set, this flag defaults to false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> obeyLockout {
            get {
                return this.obeyLockoutField;
            }
            set {
                this.obeyLockoutField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenChallengeGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenChallengeGetCallParms {
        
        private string useridField;
        
        private UserTokenFilter filterField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user which owns the token for which a challenge will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which token is to be used to generate the 
    ///   challenge. The filter must evaluate to a single token and that token must 
    ///   support challenges. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenUnassign. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenUnassignCallParms {
        
        private string useridField;
        
        private UserTokenFilter filterField;
        
        private UserTokenParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to unassign tokens from.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which tokens are to be unassigned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenParms
    /// </datatype>
    /// <value>
    ///   May contain a new comment for the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenSetCallParms {
        
        private string useridField;
        
        private UserTokenFilter filterField;
        
        private UserTokenParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to update tokens for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which tokens are to be updated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenParms
    /// </datatype>
    /// <value>
    ///   The parameters to update each token with.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenGetCallParms {
        
        private string useridField;
        
        private UserTokenFilter filterField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get tokens for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which tokens are to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenDeleteCallParms {
        
        private string useridField;
        
        private UserTokenFilter filterField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to delete tokens for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which tokens are to be deleted.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenCreateCallParms {
        
        private string useridField;
        
        private string vendorIdField;
        
        private UserTokenParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to create a token for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The vendor id of the token to create for the user. This vendor must 
    ///   support token creation. 
    ///   If not specified, and there is only a single token vendor defined that 
    ///   supports token creation, then this token vendor is used to create 
    ///   the token. This is in contrast to other token-related functionality 
    ///   where the default vendor is used when no vendor is specified. 
    ///   If more than one token vendor is defined that supports token creation, 
    ///   this field must be provided. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string vendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenParms
    /// </datatype>
    /// <value>
    ///   The parameters for the new token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userTokenAssign. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserTokenAssignCallParms {
        
        private string useridField;
        
        private string vendorIdField;
        
        private string serialNumberField;
        
        private UserTokenParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to assign a token to.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The vendor id of the token to assign to the user. If not specified, 
    ///   the default vendor is used. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string vendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the token to assign to the user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenParms
    /// </datatype>
    /// <value>
    ///   The parameters for the new token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTokenParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   The data returned from a card export operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CardExportResult {
        
        private string numCardsField;
        
        private string infoField;
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The number of cards exported.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string numCards {
            get {
                return this.numCardsField;
            }
            set {
                this.numCardsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Information about the card export.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCardExport. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCardExportCallParms {
        
        private UserFilter filterField;
        
        private NameValue[] parmsField;
        
    /// <datatype>
    ///   UserFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which cards are to be exported
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   A list of parameters. Not currently used.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   The data returned from a userCardList operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCardListResult {
        
        private UserCardInfo[] cardsField;
        
        private string nextUserField;
        
    /// <datatype>
    ///   UserCardInfo[]
    /// </datatype>
    /// <value>
    ///   The list of cards.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserCardInfo[] cards {
            get {
                return this.cardsField;
            }
            set {
                this.cardsField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The next user number. If set to a non-zero value, indicates that this 
    ///   result only includes a subset of the results, and additional user 
    ///   cards have not yet been returned. This value can be included in the 
    ///   filter for a further search to continue the search at the next user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string nextUser {
            get {
                return this.nextUserField;
            }
            set {
                this.nextUserField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about a user card.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCardInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private string serialNumberField;
        
        private State stateField;
        
        private System.DateTime createDateField;
        
        private System.Nullable<System.DateTime> expireDateField;
        
        private System.Nullable<System.DateTime> supersededDateField;
        
        private Grid gridField;
        
        private System.Nullable<int> challengeCountField;
        
        private System.Nullable<int> leastUsedCellUsageCountField;
        
        private System.Nullable<CardUsageThresholdIndicator> cardUsageThresholdIndicatorField;
        
        private string[] rolesGrantingAccessField;
        
        private string commentField;
        
        private System.Nullable<bool> preproducedField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID that owns the card.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name of the user ID that owns the card.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user ID that owns the card.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the card.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   State
    /// </datatype>
    /// <value>
    ///   The state of the card.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public State State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The create date of the card.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The expiry date of the card. A value of Date(0) indicates the card 
    ///   doesn't have an expiry date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> ExpireDate {
            get {
                return this.expireDateField;
            }
            set {
                this.expireDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The supersede date of the card. This is the date beyond which the card 
    ///   cannot be used to authenticate because a newer card exists. 
    ///   A value of null indicates that the card has not been superseded. A 
    ///   value of Date(0) indicates a superseded card that can be used until the 
    ///   expiry date is reached. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> SupersededDate {
            get {
                return this.supersededDateField;
            }
            set {
                this.supersededDateField = value;
            }
        }
        
    /// <datatype>
    ///   Grid
    /// </datatype>
    /// <value>
    ///   The contents of the card. The value will be null if the operation used 
    ///   to retrieve the card did not request the grid, or if the caller does 
    ///   not have permission to view the grid. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public Grid Grid {
            get {
                return this.gridField;
            }
            set {
                this.gridField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of times this card has been used in successful 
    ///   authentication. This value will be null if usage statistics are not gathered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> ChallengeCount {
            get {
                return this.challengeCountField;
            }
            set {
                this.challengeCountField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of times the least used cell on the card has been used in a 
    ///   successfully authenticated challenge. 
    ///   This value will be null if usage statistics are not gathered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> LeastUsedCellUsageCount {
            get {
                return this.leastUsedCellUsageCountField;
            }
            set {
                this.leastUsedCellUsageCountField = value;
            }
        }
        
    /// <datatype>
    ///   CardUsageThresholdIndicator
    /// </datatype>
    /// <value>
    ///   An indicator that either the challenge count or the least-used cell 
    ///   usage count has reached its replacement or warning usage threshold as 
    ///   defined in policy. 
    ///   This value will be null if usage statistics are not gathered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<CardUsageThresholdIndicator> CardUsageThresholdIndicator {
            get {
                return this.cardUsageThresholdIndicatorField;
            }
            set {
                this.cardUsageThresholdIndicatorField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The comment for the card.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   An indicator for whether this card was created as a preproduced card. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> Preproduced {
            get {
                return this.preproducedField;
            }
            set {
                this.preproducedField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCardList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCardListCallParms {
        
        private UserFilter filterField;
        
        private CardGetParms parmsField;
        
    /// <datatype>
    ///   UserFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which cards are to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   CardGetParms
    /// </datatype>
    /// <value>
    ///   Parameters that control what information is returned for each card. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public CardGetParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCardUnassign. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCardUnassignCallParms {
        
        private string useridField;
        
        private UserCardFilter filterField;
        
        private UserCardParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to unassign cards from.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCardFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which cards are to be unassigned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCardFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   UserCardParms
    /// </datatype>
    /// <value>
    ///   May contain a new comment for the card.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCardParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when creating or modifying a user card. 
    ///   All values can be null indicating that the default is used when 
    ///   creating a card, or the value is not changed when modifying a card. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCardParms {
        
        private string serialNumberField;
        
        private System.Nullable<long> lifetimeField;
        
        private System.Nullable<long> supersedeField;
        
        private System.Nullable<State> stateField;
        
        private System.Nullable<int> challengeCountField;
        
        private System.Nullable<int> leastUsedCellUsageCountField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, indicates that instead of creating a new card, an 
    ///   existing preproduced card will be assigned to this user. This parameter is 
    ///   ignored by the userCardSet and userCardUnassign operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The lifetime of the card in milliseconds. The value must be a 
    ///   non-negative integer. A value of 0 means the card has an infinite lifetime. 
    ///   If not set for userCardCreate, defaults to the value set in the 
    ///   policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> Lifetime {
            get {
                return this.lifetimeField;
            }
            set {
                this.lifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The superseded lifetime of a card, in milliseconds. During card 
    ///   creation, this value will define the superseded lifetime of an existing 
    ///   card that is superseded by the card being created or assigned to the 
    ///   user. If not set for user card creation, the superseded lifetime value 
    ///   in the policy is used. 
    ///   During card update, this applies to the card being updated. A value of 
    ///   0 means the card has an infinite superseded lifetime. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> Supersede {
            get {
                return this.supersedeField;
            }
            set {
                this.supersedeField = value;
            }
        }
        
    /// <datatype>
    ///   State
    /// </datatype>
    /// <value>
    ///   The state of the card. If set during user card creation, this must be 
    ///   one of PENDING, HOLD_PENDING, CURRENT, or HOLD. If not specified for 
    ///   user card creation, the card state is set to PENDING. 
    ///   This state is also subject to the restriction that a user can have at 
    ///   most one card in either of the PENDING or HOLD_PENDING states, and at 
    ///   most one card in either of the CURRENT or HOLD states. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<State> State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of times this card has been used in successful 
    ///   authentication. If not set, this parameter will not be used. This parameter is 
    ///   ignored by user card creation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> ChallengeCount {
            get {
                return this.challengeCountField;
            }
            set {
                this.challengeCountField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of times the least used cell on the card has been used in a 
    ///   successfully authenticated challenge. If not set, this parameter 
    ///   will not be used. This parameter is ignored when creating a card. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> LeastUsedCellUsageCount {
            get {
                return this.leastUsedCellUsageCountField;
            }
            set {
                this.leastUsedCellUsageCountField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The card comment. If this value is not set when creating a new card, 
    ///   it defaults to an empty string. If it is not set when assigning a 
    ///   pre-produced card to a user, the existing pre-produced card comments are 
    ///   preserved. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCardSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCardSetCallParms {
        
        private string useridField;
        
        private UserCardFilter filterField;
        
        private UserCardParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to update cards for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCardFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which cards are to be updated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCardFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   UserCardParms
    /// </datatype>
    /// <value>
    ///   The parameters to update each card with.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCardParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to userCardGet 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCardGetCallParms {
        
        private string useridField;
        
        private UserCardFilter filterField;
        
        private CardGetParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get cards for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCardFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which cards are to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCardFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   CardGetParms
    /// </datatype>
    /// <value>
    ///   Parameters that control what information is returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public CardGetParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCardDeliver. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCardDeliverCallParms {
        
        private string useridField;
        
        private UserCardFilter filterField;
        
        private string deliveryField;
        
        private string contactField;
        
        private UserDeliveryParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user whose card is to be delivered.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCardFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which card is to be delivered. An error is 
    ///   returned if the filter does not resolve to a single card. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCardFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The delivery to use for delivery.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string delivery {
            get {
                return this.deliveryField;
            }
            set {
                this.deliveryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user's contact that specifies the delivery address.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
    /// <datatype>
    ///   UserDeliveryParms
    /// </datatype>
    /// <value>
    ///   Optional parameters passed to the delivery.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserDeliveryParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCardDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCardDeleteCallParms {
        
        private string useridField;
        
        private UserCardFilter filterField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to delete cards for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCardFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which cards are to be deleted
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCardFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userCardCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCardCreateCallParms {
        
        private string useridField;
        
        private UserCardParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to create a card for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserCardParms
    /// </datatype>
    /// <value>
    ///   The parameters that set the options for the new card.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserCardParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to userPVNGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPVNGetCallParms {
        
        private string useridField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get the personal verification number (PVN) for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPVNDeliver. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPVNDeliverCallParms {
        
        private string useridField;
        
        private string deliveryField;
        
        private string contactField;
        
        private UserDeliveryParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user for which to deliver the PVN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the user delivery mechanism to use to deliver the PVN. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string delivery {
            get {
                return this.deliveryField;
            }
            set {
                this.deliveryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the user contact that contains the address to which the 
    ///   PVN will be delivered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
    /// <datatype>
    ///   UserDeliveryParms
    /// </datatype>
    /// <value>
    ///   Optional parameters passed to the delivery.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserDeliveryParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPVNDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPVNDeleteCallParms {
        
        private string useridField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to delete the personal verification number (PVN) for. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when modifying a user's personal 
    ///   verification number (PVN). 
    ///   Either PVN or AutoGenerate may be specified.
    ///   The ChangeRequired flag may also be specified.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPVNSetParms {
        
        private string oldPVNField;
        
        private string pVNField;
        
        private System.Nullable<bool> autoGenerateField;
        
        private System.Nullable<bool> changeRequiredField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The old PVN value that the user currently has.
    ///   If provided, then the old PVN value is validated before a new PVN 
    ///   value will be assigned. 
    ///   If OldPVN is specified, then PVN must also be specified. If the old 
    ///   PVN does not need to be validated when specifying a new PVN, or if not 
    ///   specifying a new PVN, then leave this as null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string OldPVN {
            get {
                return this.oldPVNField;
            }
            set {
                this.oldPVNField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The new PVN value to assign to the user, replacing their existing 
    ///   value. This value must be numeric, and must obey the PVN Length rule as 
    ///   defined by policy. 
    ///   If not assigning a new PVN, leave as null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PVN {
            get {
                return this.pVNField;
            }
            set {
                this.pVNField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, indicates a random PVN value should be generated and assigned 
    ///   to the user, replacing their existing value. 
    ///   If not autogenerating a new PVN, leave as null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AutoGenerate {
            get {
                return this.autoGenerateField;
            }
            set {
                this.autoGenerateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, indicates that the user will be required to change their PVN 
    ///   value. If false, indicates that the user will not be required to 
    ///   change their PVN value. If not modifying the change required state, then 
    ///   leave this as null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ChangeRequired {
            get {
                return this.changeRequiredField;
            }
            set {
                this.changeRequiredField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to userPVNSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPVNSetCallParms {
        
        private string useridField;
        
        private UserPVNSetParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to modify a personal verification number (PVN) for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserPVNSetParms
    /// </datatype>
    /// <value>
    ///   The parameters for modifying the personal verification number (PVN). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserPVNSetParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when creating a user's personal 
    ///   verification number (PVN). 
    ///   Either PVN or AutoGenerate must be specified.
    ///   The ChangeRequired flag may be specified.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPVNCreateParms {
        
        private string pVNField;
        
        private System.Nullable<bool> autoGenerateField;
        
        private System.Nullable<bool> changeRequiredField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The new PVN value to assign to the user.
    ///   This value must be numeric, and must obey the PVN Length rule as 
    ///   defined by policy. 
    ///   If using AutoGenerate, leave this as null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PVN {
            get {
                return this.pVNField;
            }
            set {
                this.pVNField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, indicates a random PVN value should be generated and assigned 
    ///   to the user. 
    ///   If specifying the PVN value, leave this as null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AutoGenerate {
            get {
                return this.autoGenerateField;
            }
            set {
                this.autoGenerateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, indicates that the user will be required to change their PVN 
    ///   value. If false, indicates that the user will not be required to 
    ///   change their PVN value. Note that the policy may not allow setting this 
    ///   value to false. 
    ///   If left as null, the user will be required to change their PVN. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ChangeRequired {
            get {
                return this.changeRequiredField;
            }
            set {
                this.changeRequiredField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPVNCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPVNCreateCallParms {
        
        private string useridField;
        
        private UserPVNCreateParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to create a personal verification number (PVN) for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserPVNCreateParms
    /// </datatype>
    /// <value>
    ///   The parameters for creating the personal verification number (PVN). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserPVNCreateParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPasswordDeliver. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPasswordDeliverCallParms {
        
        private string useridField;
        
        private string passwordNameField;
        
        private string deliveryField;
        
        private string contactField;
        
        private UserDeliveryParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user for which to deliver the password.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the password to deliver. Specify null for the default 
    ///   password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string passwordName {
            get {
                return this.passwordNameField;
            }
            set {
                this.passwordNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the user delivery mechanism to use to deliver the 
    ///   password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string delivery {
            get {
                return this.deliveryField;
            }
            set {
                this.deliveryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the user contact that contains the address to which the 
    ///   password will be delivered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
    /// <datatype>
    ///   UserDeliveryParms
    /// </datatype>
    /// <value>
    ///   Optional parameters passed to the delivery.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserDeliveryParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPasswordDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPasswordDeleteCallParms {
        
        private string useridField;
        
        private string passwordNameField;
        
        private System.Nullable<bool> keepHistoryField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user for which to delete the password.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the password to delete. Specify null for the default 
    ///   password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string passwordName {
            get {
                return this.passwordNameField;
            }
            set {
                this.passwordNameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates whether to keep the password history.
    ///   Default is to delete the history.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> keepHistory {
            get {
                return this.keepHistoryField;
            }
            set {
                this.keepHistoryField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPasswordList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPasswordListCallParms {
        
        private string useridField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user for which to get the password information.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPasswordGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPasswordGetCallParms {
        
        private string useridField;
        
        private string passwordNameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user for which to get the password information.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the password to retrieve. Specify null for the default 
    ///   password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string passwordName {
            get {
                return this.passwordNameField;
            }
            set {
                this.passwordNameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPasswordSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPasswordSetCallParms {
        
        private string useridField;
        
        private string passwordNameField;
        
        private UserPasswordParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user for which to modify the password.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the password to modify. Specify null for the default 
    ///   password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string passwordName {
            get {
                return this.passwordNameField;
            }
            set {
                this.passwordNameField = value;
            }
        }
        
    /// <datatype>
    ///   UserPasswordParms
    /// </datatype>
    /// <value>
    ///   The parameters for the password modification.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserPasswordParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when creating or modifying a user 
    ///   password. All values can be null, indicating that the default is used for 
    ///   create or the value is not changed for modify. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPasswordParms {
        
        private string passwordField;
        
        private System.Nullable<bool> autoGenerateField;
        
        private string importedPasswordField;
        
        private System.Nullable<int> daysToExpiryField;
        
        private System.Nullable<bool> changeRequiredField;
        
        private System.Nullable<bool> clearPasswordHistoryField;
        
        private System.Nullable<bool> clearRetrievablePasswordField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The password value. Must be null if autoGenerate is used.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, indicates a random password will be generated.
    ///   Default is false during password creation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AutoGenerate {
            get {
                return this.autoGenerateField;
            }
            set {
                this.autoGenerateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If set, this value contains Base-64 encoded password information 
    ///   imported from an external password source such as Entrust RoamingServer. 
    ///   An imported password will be validated and converted to an Entrust 
    ///   IdentityGuard password at the first authentication. If an 
    ///   ImportedPassword value is specified, the Password value can not be specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ImportedPassword {
            get {
                return this.importedPasswordField;
            }
            set {
                this.importedPasswordField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The lifetime of the password in days. The value must be a non-negative 
    ///   integer. A value of 0 means the password has infinite lifetime. 
    ///   When modifying a password and setting this value, the expiry date will 
    ///   be calculated from the current date, not the date the password was 
    ///   created. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> DaysToExpiry {
            get {
                return this.daysToExpiryField;
            }
            set {
                this.daysToExpiryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates if a password change will be required by user.
    ///   Default is true during password creation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ChangeRequired {
            get {
                return this.changeRequiredField;
            }
            set {
                this.changeRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates if the password history must be cleared.
    ///   Default is false during password creation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ClearPasswordHistory {
            get {
                return this.clearPasswordHistoryField;
            }
            set {
                this.clearPasswordHistoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates if the retrievable password must be cleared.
    ///   Default is false during password creation.
    ///   Setting this to true will generate a fault if autoGenerate is also set 
    ///   to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ClearRetrievablePassword {
            get {
                return this.clearRetrievablePasswordField;
            }
            set {
                this.clearRetrievablePasswordField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPasswordCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPasswordCreateCallParms {
        
        private string useridField;
        
        private string passwordNameField;
        
        private UserPasswordParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user for which to create a password.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the password to create. Specify null for the default 
    ///   password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string passwordName {
            get {
                return this.passwordNameField;
            }
            set {
                this.passwordNameField = value;
            }
        }
        
    /// <datatype>
    ///   UserPasswordParms
    /// </datatype>
    /// <value>
    ///   The parameters for the new password.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserPasswordParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to userOTPSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserOTPSetCallParms {
        
        private string useridField;
        
        private UserOTPFilter filterField;
        
        private UserOTPParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user whose one-time passwords (OTP) are to be modified.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserOTPFilter
    /// </datatype>
    /// <value>
    ///   The filter specifying which OTPs are to be modified.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserOTPFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   UserOTPParms
    /// </datatype>
    /// <value>
    ///   The parameters specifying what values in the OTPs are to be modified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserOTPParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   The UserOTPFilter specifies a list of OTP indexes.
    ///   If the list of indexes is not specified then this filter matches all 
    ///   OTP indexes. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserOTPFilter {
        
        private long[] indexesField;
        
    /// <datatype>
    ///   long[]
    /// </datatype>
    /// <value>
    ///   Specifies a list of OTP indexes.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public long[] Indexes {
            get {
                return this.indexesField;
            }
            set {
                this.indexesField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when creating or modifying a user's 
    ///   one-time password (OTP). All values can be null, indicating that the 
    ///   default is used for create or the value is not changed for modify. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserOTPParms {
        
        private System.Nullable<bool> forceField;
        
        private System.Nullable<long> lifetimeField;
        
        private System.Nullable<bool> useDefaultDeliveryField;
        
        private string[] contactInfoLabelField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true for OTP create, indicates an existing OTP is replaced. 
    ///   Otherwise, an existing OTP results in an error. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> Force {
            get {
                return this.forceField;
            }
            set {
                this.forceField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The lifetime of the OTP in milliseconds. The value must be a 
    ///   non-negative integer. If set to 0, the OTP is valid until it is used. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> Lifetime {
            get {
                return this.lifetimeField;
            }
            set {
                this.lifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Used by userOTPDeliver. If set to true, the user's OTPs are delivered 
    ///   to the user's default contact. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> useDefaultDelivery {
            get {
                return this.useDefaultDeliveryField;
            }
            set {
                this.useDefaultDeliveryField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   Used by userOTPDeliver. If useDefaultDelivery is not set to true, the 
    ///   user's OTPs are delivered to the contacts specified by this value. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] contactInfoLabel {
            get {
                return this.contactInfoLabelField;
            }
            set {
                this.contactInfoLabelField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to userOTPGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserOTPGetCallParms {
        
        private string useridField;
        
        private UserOTPFilter filterField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get the one-time password (OTP) for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserOTPFilter
    /// </datatype>
    /// <value>
    ///   The filter specifying which OTPs are to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserOTPFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned from UserOTPDeliver including a list 
    ///   of the contacts to which the OTP was successfully delivered, a list 
    ///   of the contacts to which OTP delivery failed and a list of faults 
    ///   describing why delivery failed. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserOTPDeliverResult {
        
        private string[] deliveryPassedField;
        
        private string[] deliveryFailedField;
        
        private AdminServiceFault[] deliveryFailedReasonField;
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   Will contain a list of the user contact info labels to which an OTP 
    ///   was successfully delivered. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] deliveryPassed {
            get {
                return this.deliveryPassedField;
            }
            set {
                this.deliveryPassedField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   Will contain a list of the user contact info labels to which OTP 
    ///   delivery failed. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] deliveryFailed {
            get {
                return this.deliveryFailedField;
            }
            set {
                this.deliveryFailedField = value;
            }
        }
        
    /// <datatype>
    ///   AdminServiceFault[]
    /// </datatype>
    /// <value>
    ///   Will contain a list of faults explaining why OTP delivery failed. This 
    ///   list will have entries corresponding to each entry in the 
    ///   deliveryFailed list. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AdminServiceFault[] deliveryFailedReason {
            get {
                return this.deliveryFailedReasonField;
            }
            set {
                this.deliveryFailedReasonField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userOTPDeliver. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserOTPDeliverCallParms {
        
        private string useridField;
        
        private UserOTPParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to deliver the one-time password (OTP) for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserOTPParms
    /// </datatype>
    /// <value>
    ///   The parameters including values specifying to which contacts the 
    ///   user's OTPs are to be delivered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserOTPParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userOTPDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserOTPDeleteCallParms {
        
        private string useridField;
        
        private UserOTPFilter filterField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to delete the one-time password (OTP) for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserOTPFilter
    /// </datatype>
    /// <value>
    ///   The filter specifying which OTPs are to be deleted.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserOTPFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userOTPCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserOTPCreateCallParms {
        
        private string useridField;
        
        private UserOTPParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to create a one-time password (OTP) for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserOTPParms
    /// </datatype>
    /// <value>
    ///   The parameters for the new one-time password (OTP).
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserOTPParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPreferenceList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPreferenceListCallParms {
        
        private string useridField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to list preferences for. If not specified, the userid 
    ///   defaults to the current administrator. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPreferenceSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPreferenceSetCallParms {
        
        private string useridField;
        
        private NameValue preferenceField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to update the preference for.
    ///   If not specified, the userid defaults to the current administrator. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue
    /// </datatype>
    /// <value>
    ///   The preference to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public NameValue preference {
            get {
                return this.preferenceField;
            }
            set {
                this.preferenceField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPreferenceGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPreferenceGetCallParms {
        
        private string useridField;
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get the preference for. If not specified, the userid 
    ///   defaults to the current administrator. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the preference to get.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPreferenceDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPreferenceDeleteCallParms {
        
        private string useridField;
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to delete the preference for.
    ///   If not specified, the userid defaults to the current administrator. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The preference to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPreferenceCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPreferenceCreateCallParms {
        
        private string useridField;
        
        private NameValue preferenceField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID to create a user preference for.
    ///   If not specified, the userid defaults to the current administrator. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue
    /// </datatype>
    /// <value>
    ///   The new preference.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public NameValue preference {
            get {
                return this.preferenceField;
            }
            set {
                this.preferenceField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userMachineSecretList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserMachineSecretListCallParms {
        
        private string useridField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to list machine secret for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userMachineSecretSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserMachineSecretSetCallParms {
        
        private string useridField;
        
        private string machineNonceField;
        
        private MachineSecretParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to update the machine secret for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The machine secret to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string machineNonce {
            get {
                return this.machineNonceField;
            }
            set {
                this.machineNonceField = value;
            }
        }
        
    /// <datatype>
    ///   MachineSecretParms
    /// </datatype>
    /// <value>
    ///   The parameters controlling what is updated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MachineSecretParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters used when creating or modifying a machine 
    ///   secret. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class MachineSecretParms {
        
        private string machineLabelField;
        
        private string machineNonceField;
        
        private NameValue[] applicationDataField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The machine label. This value can be set during create or can be 
    ///   modified for an existing machine secret. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string machineLabel {
            get {
                return this.machineLabelField;
            }
            set {
                this.machineLabelField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The machine nonce. If not specified when creating a machine secret, 
    ///   IdentityGuard will generate a random value. This value can not be 
    ///   modified for an existing machine secret. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string machineNonce {
            get {
                return this.machineNonceField;
            }
            set {
                this.machineNonceField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   The application data. May be null or an empty array if the machine 
    ///   secret doesn't have any application data. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] applicationData {
            get {
                return this.applicationDataField;
            }
            set {
                this.applicationDataField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userMachineSecretGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserMachineSecretGetCallParms {
        
        private string useridField;
        
        private string machineNonceField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get the machine secret for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The machine secret to get.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string machineNonce {
            get {
                return this.machineNonceField;
            }
            set {
                this.machineNonceField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userMachineSecretDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserMachineSecretDeleteCallParms {
        
        private string useridField;
        
        private string machineNonceField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to delete the machine secret for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The machine secret to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string machineNonce {
            get {
                return this.machineNonceField;
            }
            set {
                this.machineNonceField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userMachineSecretCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserMachineSecretCreateCallParms {
        
        private string useridField;
        
        private MachineSecretParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID to create a machine secret for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   MachineSecretParms
    /// </datatype>
    /// <value>
    ///   The parameters for the new machine secret.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MachineSecretParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to userPINSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPINSetCallParms {
        
        private string useridField;
        
        private UserPINParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to update the PIN for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserPINParms
    /// </datatype>
    /// <value>
    ///   The parameters controlling what is updated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserPINParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when creating or modifying a user PIN. 
    ///   All values can be null, indicating that the default is used for create 
    ///   or the value is not changed for modify. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPINParms {
        
        private System.Nullable<bool> forceField;
        
        private System.Nullable<long> lifetimeField;
        
        private System.Nullable<int> maxUsesField;
        
        private string commentField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true when creating a PIN, indicates an existing PIN is replaced. 
    ///   Otherwise, an existing PIN results in an error. This parameter is 
    ///   ignored by userPINSet. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> Force {
            get {
                return this.forceField;
            }
            set {
                this.forceField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The lifetime of the PIN in milliseconds. The value must be a 
    ///   non-negative integer. A value of 0 means the PIN has infinite lifetime. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> Lifetime {
            get {
                return this.lifetimeField;
            }
            set {
                this.lifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of times the PIN can be used. The value must be a 
    ///   non-negative integer. A value of 0 means that the PIN can be used an unlimited 
    ///   number of times. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> MaxUses {
            get {
                return this.maxUsesField;
            }
            set {
                this.maxUsesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The PIN comment. If not specified when creating a new PIN, it defaults 
    ///   to empty string. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to userPINGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPINGetCallParms {
        
        private string useridField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get the PIN for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPINDeliver. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPINDeliverCallParms {
        
        private string useridField;
        
        private string deliveryField;
        
        private string contactField;
        
        private UserDeliveryParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user for which to deliver the PIN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the user delivery mechanism to use to deliver the PIN. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string delivery {
            get {
                return this.deliveryField;
            }
            set {
                this.deliveryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the user contact that contains the address to which the 
    ///   PIN will be delivered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
    /// <datatype>
    ///   UserDeliveryParms
    /// </datatype>
    /// <value>
    ///   Optional parameters passed to the delivery.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserDeliveryParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPINDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPINDeleteCallParms {
        
        private string useridField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to delete the PIN for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userPINCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPINCreateCallParms {
        
        private string useridField;
        
        private UserPINParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID to create a PIN for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserPINParms
    /// </datatype>
    /// <value>
    ///   The parameters for the new PIN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserPINParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userContactInfoSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserContactInfoSetCallParms {
        
        private string useridField;
        
        private string labelField;
        
        private UserContactInfoParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to update the ContactInfo for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The label of the Contactinfo to be updated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
    /// <datatype>
    ///   UserContactInfoParms
    /// </datatype>
    /// <value>
    ///   The parameters controlling what is updated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserContactInfoParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when creating or modifying a user 
    ///   contactinfo instance. All values can be null indicating that the default is 
    ///   used for create or the value is not changed for modify. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserContactInfoParms {
        
        private string contactInfoLabelField;
        
        private string originalLabelField;
        
        private string valueField;
        
        private string deliveryConfigLabelField;
        
        private System.Nullable<bool> defaultContactInfoField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The label of the contact info to be created or modified.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string contactInfoLabel {
            get {
                return this.contactInfoLabelField;
            }
            set {
                this.contactInfoLabelField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The original label of the contact info, for when contact info are 
    ///   being updated by a call to userSet. This value is ignored by other calls. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string originalLabel {
            get {
                return this.originalLabelField;
            }
            set {
                this.originalLabelField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The value of the user contact info.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The label of the delivery configuration that is associated with this 
    ///   user contact info. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string deliveryConfigLabel {
            get {
                return this.deliveryConfigLabelField;
            }
            set {
                this.deliveryConfigLabelField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this user contact info instance is default. The 
    ///   delivery configuration associated with this contact info is used for 
    ///   out-of-band data delivery when no contact info is specified for delivery. 
    ///   Defaults to false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> defaultContactInfo {
            get {
                return this.defaultContactInfoField;
            }
            set {
                this.defaultContactInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userContactInfoGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserContactInfoGetCallParms {
        
        private string useridField;
        
        private string[] labelsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to get the ContactInfo for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The labels of user ContactInfo to be returned.
    ///   If not specified, all contact info are returned.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] labels {
            get {
                return this.labelsField;
            }
            set {
                this.labelsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userContactInfoDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserContactInfoDeleteCallParms {
        
        private string useridField;
        
        private string[] labelsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to delete the ContactInfo for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The labels of the ContactInfo to be deleted.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] labels {
            get {
                return this.labelsField;
            }
            set {
                this.labelsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userContactInfoCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserContactInfoCreateCallParms {
        
        private string useridField;
        
        private UserContactInfoParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID to create a ContactInfo for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserContactInfoParms
    /// </datatype>
    /// <value>
    ///   The parameters for the new ContactInfo.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserContactInfoParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about an out-of-band delivery configuration. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DeliveryConfigInfo {
        
        private string configLabelField;
        
        private string displayNameField;
        
        private string typeField;
        
        private bool requiresPVNField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The delivery configuration label, which is how particular 
    ///   configurations are identified when making calls to the admin service. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string configLabel {
            get {
                return this.configLabelField;
            }
            set {
                this.configLabelField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user-friendly display name.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The type of this out-of-band delivery configuration. The delivery 
    ///   configurations provided with Entrust IdentityGuard will have the types 
    ///   EMAIL and PHONE. Custom delivery configurations may have other values. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag that indicates whether a user must have a PVN to use this 
    ///   delivery configuration. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool requiresPVN {
            get {
                return this.requiresPVNField;
            }
            set {
                this.requiresPVNField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of delivery configuration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DeliveryConfigInfoList {
        
        private DeliveryConfigInfo[] deliveryConfigInfoField;
        
    /// <datatype>
    ///   DeliveryConfigInfo[]
    /// </datatype>
    /// <value>
    ///   Information about delivery configurations.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public DeliveryConfigInfo[] deliveryConfigInfo {
            get {
                return this.deliveryConfigInfoField;
            }
            set {
                this.deliveryConfigInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned about a user that in not yet an 
    ///   Entrust IdentityGuard user. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserEnrollInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private string repositoryField;
        
        private string repositoryIdField;
        
        private bool disabledInRepositoryField;
        
        private bool expiredInRepositoryField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID of the user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name portion of the user ID.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the repository that the user's information is stored in. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string repository {
            get {
                return this.repositoryField;
            }
            set {
                this.repositoryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user's uniquely identifying name in the repository. For users 
    ///   stored in an LDAP directory this is the user's distinguished name (DN). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string repositoryId {
            get {
                return this.repositoryIdField;
            }
            set {
                this.repositoryIdField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Is the user disabled in the repository? Disabled entries will only be 
    ///   returned if the policy allows creation of users in disabled entries. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool disabledInRepository {
            get {
                return this.disabledInRepositoryField;
            }
            set {
                this.disabledInRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Is the user expired in the repository? Expired entries will only be 
    ///   returned if the policy allows creation of users in expired entries. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool expiredInRepository {
            get {
                return this.expiredInRepositoryField;
            }
            set {
                this.expiredInRepositoryField = value;
            }
        }
    }
    
    /// <summary>
    ///   The data returned from an userEnrollList operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserEnrollListResult {
        
        private UserEnrollInfo[] usersField;
        
        private string pagedResultsCookieField;
        
    /// <datatype>
    ///   UserEnrollInfo[]
    /// </datatype>
    /// <value>
    ///   The list of users found.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserEnrollInfo[] users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If provided, identifies the next user block. The value will be 
    ///   available if the LDAP repository supports paging and the number of users 
    ///   found is greater than the value specified in maxReturn, or there are 
    ///   more user repositories in the group still to be searched. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string pagedResultsCookie {
            get {
                return this.pagedResultsCookieField;
            }
            set {
                this.pagedResultsCookieField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the filter to limit which users are to be returned from the 
    ///   user enroll list operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserEnrollFilter {
        
        private string groupField;
        
        private string repositoryField;
        
        private string ldapFilterField;
        
        private System.Nullable<int> maxReturnField;
        
        private string pagedResultsCookieField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A group that is associated to at least one LDAP repository that 
    ///   contains users that are not yet Entrust IdentityGuard users. 
    ///   The LDAP repository must have user enrollment enabled.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only users in this repository are returned.
    ///   The repository must be associated to the group.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string repository {
            get {
                return this.repositoryField;
            }
            set {
                this.repositoryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only users that match the LDAP filter are returned. Note 
    ///   that the filter is a partial LDAP filter. Additional filtering 
    ///   criteria is defined in the Entrust IdentityGuard server. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ldapFilter {
            get {
                return this.ldapFilterField;
            }
            set {
                this.ldapFilterField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of users to return. If not specified or the value is 0 or 
    ///   less, it defaults to 100. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxReturn {
            get {
                return this.maxReturnField;
            }
            set {
                this.maxReturnField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, identifies the next user block. The value, if 
    ///   applicable, will be available from the result of a prior user enroll list 
    ///   operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string pagedResultsCookie {
            get {
                return this.pagedResultsCookieField;
            }
            set {
                this.pagedResultsCookieField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userEnrollList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserEnrollListCallParms {
        
        private UserEnrollFilter filterField;
        
    /// <datatype>
    ///   UserEnrollFilter
    /// </datatype>
    /// <value>
    ///   The filter indicating which users are to be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserEnrollFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userLockoutSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserLockoutSetCallParms {
        
        private string useridField;
        
        private UserLockoutParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID of the user whose lockouts will be updated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserLockoutParms
    /// </datatype>
    /// <value>
    ///   The parameters
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserLockoutParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when creating or modifying a user. All 
    ///   values can be null indicating that the default is used when creating a 
    ///   user, or the value is not changed when modifying a user. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserLockoutParms {
        
        private System.Nullable<bool> clearlockoutField;
        
        private System.Nullable<bool> increaseLockoutField;
        
        private AuthenticatorLockoutId[] authenticatorLockoutIdsField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, clear the global and authenticator lockout counters of 
    ///   the user. 
    ///   If not specified, this value defaults to false.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> Clearlockout {
            get {
                return this.clearlockoutField;
            }
            set {
                this.clearlockoutField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, update the lockout counters of the user specified by 
    ///   the AuthenticatorLockoutIds parameters. 
    ///   I.e., this argument can be used by an administration application to 
    ///   lockout a user. 
    ///   If not specified, this value defaults to false.
    ///   This parameter is ignored if Clearlockout is set to true.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> IncreaseLockout {
            get {
                return this.increaseLockoutField;
            }
            set {
                this.increaseLockoutField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticatorLockoutId[]
    /// </datatype>
    /// <value>
    ///   Restricts the authenticator lockout counters that are updated when the 
    ///   Clearlockout or IncreaseLockout options are set to true. Only the 
    ///   authenticator lockout counters associated with the specified 
    ///   authenticators supplied here are updated for the user. If no values are 
    ///   present, i.e., this option is not set or an an empty array is used, then all 
    ///   lockout counters are updated. This option only applies to the 
    ///   authenticator lockout counters. Therefore the global lockout counter is 
    ///   always updated. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticatorLockoutId[] AuthenticatorLockoutIds {
            get {
                return this.authenticatorLockoutIdsField;
            }
            set {
                this.authenticatorLockoutIdsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines an AuthenticatorLockoutId which specifies the identity of an 
    ///   authenticator lockout 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class AuthenticatorLockoutId {
        
        private AuthenticatorLockoutName nameField;
        
        private string subNameField;
        
    /// <datatype>
    ///   AuthenticatorLockoutName
    /// </datatype>
    /// <value>
    ///   The authenticator lockout name.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AuthenticatorLockoutName Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The authenticator lockout subname. Only PASSWORD authenticator 
    ///   lockouts can have a subname. If specified, the subname must match one of the 
    ///   defined password policy names for the user's policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SubName {
            get {
                return this.subNameField;
            }
            set {
                this.subNameField = value;
            }
        }
    }
    
    /// <summary>
    ///   The authenticator lockout name.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum AuthenticatorLockoutName {
        
    /// <value>
    ///   GRID authenticator lockout name.
    /// </value>
        GRID,
        
    /// <value>
    ///   QA authenticator lockout name.
    /// </value>
        QA,
        
    /// <value>
    ///   OTP authenticator lockout name.
    /// </value>
        OTP,
        
    /// <value>
    ///   TOKENRO authenticator lockout name.
    /// </value>
        TOKENRO,
        
    /// <value>
    ///   TOKENCR authenticator lockout name.
    /// </value>
        TOKENCR,
        
    /// <value>
    ///   EXTERNAL authenticator lockout name.
    /// </value>
        EXTERNAL,
        
    /// <value>
    ///   PASSWORD authenticator lockout name.
    /// </value>
        PASSWORD,
        
    /// <value>
    ///   CERTIFICATE authenticator lockout name.
    /// </value>
        CERTIFICATE,
        
    /// <value>
    ///   RBAIP authenticator lockout name.
    /// </value>
        RBAIP,
        
    /// <value>
    ///   RBAMA authenticator lockout name.
    /// </value>
        RBAMA,
        
    /// <value>
    ///   RBACA authenticator lockout name.
    /// </value>
        RBACA,
        
    /// <value>
    ///   RBAEXTERNAL_RISK authenticator lockout name.
    /// </value>
        RBAEXTERNAL_RISK,
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userLockoutGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserLockoutGetCallParms {
        
        private string useridField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID to query.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the data returned from the userList operation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserListResult {
        
        private UserInfo[] usersField;
        
        private string nextUserField;
        
    /// <datatype>
    ///   UserInfo[]
    /// </datatype>
    /// <value>
    ///   The users returned.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserInfo[] users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The nextUser number. If set to a non-zero value, indicates that 
    ///   additional users remain to be returned. 
    ///   This value can be included in the filter for a further search to 
    ///   continue the search at the next user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string nextUser {
            get {
                return this.nextUserField;
            }
            set {
                this.nextUserField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information returned about a user.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private string partitionField;
        
        private string userNumberField;
        
        private string originalIdField;
        
        private string repositoryField;
        
        private ContactInfo[] contactInfoListField;
        
        private string[] aliasesField;
        
        private string fullNameField;
        
        private string fullNameInRepositoryField;
        
        private string localeField;
        
        private bool badDataField;
        
        private UserLockoutInfo lockoutInfoField;
        
        private AuthenticationInfo lastAuthField;
        
        private AuthenticationInfo lastFailedAuthField;
        
        private bool disabledInRepositoryField;
        
        private bool expiredInRepositoryField;
        
        private SharedSecret[] sharedSecretsField;
        
        private NameValue[] qaSecretsField;
        
        private NameValue[] authenticationSecretsField;
        
        private MachineSecretInfo[] machineSecretsField;
        
        private UserPINInfo pINField;
        
        private UserOTPInfo[] oTPsField;
        
        private bool oTPAllowedField;
        
        private bool usePolicyForOTPDeliveryEnabledField;
        
        private System.Nullable<bool> oTPDeliveryEnabledField;
        
        private UserPVNInfo pVNField;
        
        private UserPasswordInfo passwordField;
        
        private UserPasswordInfo[] namedPasswordsField;
        
        private ActivationInfo activationInfoField;
        
        private UserCardInfo[] cardsField;
        
        private UserTokenInfo[] tokensField;
        
        private UserCertificateInfo[] certificatesField;
        
        private UserFederationInfo[] federationsField;
        
        private UserDigitalIdInfo[] digitalIdsField;
        
        private UserSmartCredentialInfo[] smartCredentialsField;
        
        private System.Nullable<UserState> userStateField;
        
        private string suspendReasonField;
        
        private string[] rolesField;
        
        private UserLocation[] userLocationsField;
        
        private bool usePolicyForMaxLocationHistorySizeField;
        
        private System.Nullable<int> maxLocationHistorySizeField;
        
        private bool usePolicyForCheckVelocityField;
        
        private System.Nullable<bool> checkVelocityField;
        
        private bool usePolicyForCheckIPAddressInLocationHistoryField;
        
        private System.Nullable<bool> checkIPAddressInLocationHistoryField;
        
        private bool usePolicyForExpectedLocationsField;
        
        private ExpectedLocation[] expectedLocationsField;
        
        private string[] rolesGrantingAccessField;
        
        private string commentsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID of the user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name portion of the user ID.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the partition the user is assigned to, or null if the user 
    ///   is not assigned to a particular partition. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Partition {
            get {
                return this.partitionField;
            }
            set {
                this.partitionField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The internal identifying number assigned to the user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string UserNumber {
            get {
                return this.userNumberField;
            }
            set {
                this.userNumberField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When the user is stored in an LDAP directory and the LDAP entry has 
    ///   been renamed, this value will contain the original Id of the user. 
    ///   Otherwise, this value will contain the userid of the user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OriginalId {
            get {
                return this.originalIdField;
            }
            set {
                this.originalIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the repository that the user's information is stored in. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Repository {
            get {
                return this.repositoryField;
            }
            set {
                this.repositoryField = value;
            }
        }
        
    /// <datatype>
    ///   ContactInfo[]
    /// </datatype>
    /// <value>
    ///   The user's contact information.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ContactInfo[] ContactInfoList {
            get {
                return this.contactInfoListField;
            }
            set {
                this.contactInfoListField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The aliases of this user.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Aliases {
            get {
                return this.aliasesField;
            }
            set {
                this.aliasesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The full name of the user. If name mapping has been enabled and no 
    ///   full name has been explicitly set for the user, then this will be the 
    ///   same as FullNameInRepository. If full name mapping is enabled, this 
    ///   full name may have been explicitly set to a value different from 
    ///   FullNameInRepository. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user's full name as read from a repository attribute not 
    ///   controlled by Entrust IdentityGuard. Full name mapping must have been turned 
    ///   on for this value to be set. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FullNameInRepository {
            get {
                return this.fullNameInRepositoryField;
            }
            set {
                this.fullNameInRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The locale of the user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the user data has integrity errors. In the case 
    ///   of an LDAP repository, an integrity error may indicate that the user's 
    ///   name has changed in the repository without having been changed in 
    ///   Entrust IdentityGuard. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool BadData {
            get {
                return this.badDataField;
            }
            set {
                this.badDataField = value;
            }
        }
        
    /// <datatype>
    ///   UserLockoutInfo
    /// </datatype>
    /// <value>
    ///   Information about the user's lockout state.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserLockoutInfo LockoutInfo {
            get {
                return this.lockoutInfoField;
            }
            set {
                this.lockoutInfoField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationInfo
    /// </datatype>
    /// <value>
    ///   Information about the last successful authentication for this user. 
    ///   This value will not be set if the user has never authenticated or if 
    ///   the policy is defined such that information about the last 
    ///   authentication is not stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public AuthenticationInfo LastAuth {
            get {
                return this.lastAuthField;
            }
            set {
                this.lastAuthField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationInfo
    /// </datatype>
    /// <value>
    ///   Information about the last failed authentication for this user. This 
    ///   value will not be set if the user has never authenticated or if the 
    ///   policy is defined such that information about the last authentication 
    ///   is not stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public AuthenticationInfo LastFailedAuth {
            get {
                return this.lastFailedAuthField;
            }
            set {
                this.lastFailedAuthField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this user's account is disabled in the repository, 
    ///   determined by attributes in the repository that are not controlled by 
    ///   Entrust IdentityGuard. 
    ///   This is a separate consideration from the user's state, but the user's 
    ///   state, this flag, and whether or not the user's account has expired 
    ///   in the repository may be taken in to account during an attempt to 
    ///   authenticate. Note that the concept of a user being disabled in the 
    ///   repository is only applicable when the user's information is stored in an 
    ///   LDAP repository. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool DisabledInRepository {
            get {
                return this.disabledInRepositoryField;
            }
            set {
                this.disabledInRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this user's account is expired in the repository, 
    ///   determined by attributes in the repository that are not controlled by 
    ///   Entrust IdentityGuard. 
    ///   This flag, the user's state, and whether or not the user's account is 
    ///   disabled in the repository may be taken in to account during an 
    ///   attempt to authenticate. Note that the concept of a user being expired in 
    ///   the repository is only applicable when the user's information is 
    ///   stored in an LDAP repository. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ExpiredInRepository {
            get {
                return this.expiredInRepositoryField;
            }
            set {
                this.expiredInRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   SharedSecret[]
    /// </datatype>
    /// <value>
    ///   The user's shared secrets. May be null or an empty array if the user 
    ///   doesn't have any shared secrets. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SharedSecret[] SharedSecrets {
            get {
                return this.sharedSecretsField;
            }
            set {
                this.sharedSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   The user's QA authentication values. This attribute will have a null 
    ///   value if the administrator doesn't have QA authentication values or 
    ///   doesn't have the userGetQa permission. If the administrator doesn't 
    ///   have the userQaView permission, the answers will not be included in the 
    ///   returned value. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] QaSecrets {
            get {
                return this.qaSecretsField;
            }
            set {
                this.qaSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   The user's mutual authentication secrets. May be null or an empty 
    ///   array if the user doesn't have any authentication secrets. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] AuthenticationSecrets {
            get {
                return this.authenticationSecretsField;
            }
            set {
                this.authenticationSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   MachineSecretInfo[]
    /// </datatype>
    /// <value>
    ///   The user's machine secrets. May be null or an empty array if the user 
    ///   doesn't have any machine secrets. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MachineSecretInfo[] MachineSecrets {
            get {
                return this.machineSecretsField;
            }
            set {
                this.machineSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   UserPINInfo
    /// </datatype>
    /// <value>
    ///   The user's PIN. Null if the user doesn't have a PIN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserPINInfo PIN {
            get {
                return this.pINField;
            }
            set {
                this.pINField = value;
            }
        }
        
    /// <datatype>
    ///   UserOTPInfo[]
    /// </datatype>
    /// <value>
    ///   The user's one-time passwords (OTPs). Null if the user doesn't have 
    ///   any OTPs. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserOTPInfo[] OTPs {
            get {
                return this.oTPsField;
            }
            set {
                this.oTPsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the user can use an OTP for authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool OTPAllowed {
            get {
                return this.oTPAllowedField;
            }
            set {
                this.oTPAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, use the policy setting for OTPDeliveryEnabled. If false, 
    ///   OTPDeliveryEnabled indicates whether or not OTP delivery is allowed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool usePolicyForOTPDeliveryEnabled {
            get {
                return this.usePolicyForOTPDeliveryEnabledField;
            }
            set {
                this.usePolicyForOTPDeliveryEnabledField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the OTP can be delivered via an out-of-band 
    ///   delivery mechanism to this user. 
    ///   This value is ignored if usePolicyForOTPDeliveryEnabled is true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> OTPDeliveryEnabled {
            get {
                return this.oTPDeliveryEnabledField;
            }
            set {
                this.oTPDeliveryEnabledField = value;
            }
        }
        
    /// <datatype>
    ///   UserPVNInfo
    /// </datatype>
    /// <value>
    ///   The user's personal verification number (PVN).
    ///   Null if the user doesn't have a PVN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserPVNInfo PVN {
            get {
                return this.pVNField;
            }
            set {
                this.pVNField = value;
            }
        }
        
    /// <datatype>
    ///   UserPasswordInfo
    /// </datatype>
    /// <value>
    ///   The user's default password.
    ///   Null if the user doesn't have a password.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserPasswordInfo Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
    /// <datatype>
    ///   UserPasswordInfo[]
    /// </datatype>
    /// <value>
    ///   The user's named passwords.
    ///   Null if the user doesn't have named passwords.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserPasswordInfo[] NamedPasswords {
            get {
                return this.namedPasswordsField;
            }
            set {
                this.namedPasswordsField = value;
            }
        }
        
    /// <datatype>
    ///   ActivationInfo
    /// </datatype>
    /// <value>
    ///   The activation information for the user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ActivationInfo ActivationInfo {
            get {
                return this.activationInfoField;
            }
            set {
                this.activationInfoField = value;
            }
        }
        
    /// <datatype>
    ///   UserCardInfo[]
    /// </datatype>
    /// <value>
    ///   The user's cards. May be null or an empty array if the user doesn't 
    ///   have any cards. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserCardInfo[] Cards {
            get {
                return this.cardsField;
            }
            set {
                this.cardsField = value;
            }
        }
        
    /// <datatype>
    ///   UserTokenInfo[]
    /// </datatype>
    /// <value>
    ///   The user's tokens. May be null or an empty array if the user doesn't 
    ///   have any tokens. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserTokenInfo[] Tokens {
            get {
                return this.tokensField;
            }
            set {
                this.tokensField = value;
            }
        }
        
    /// <datatype>
    ///   UserCertificateInfo[]
    /// </datatype>
    /// <value>
    ///   The user's certificates. May be null or an empty array if the user 
    ///   doesn't have any certificates. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserCertificateInfo[] Certificates {
            get {
                return this.certificatesField;
            }
            set {
                this.certificatesField = value;
            }
        }
        
    /// <datatype>
    ///   UserFederationInfo[]
    /// </datatype>
    /// <value>
    ///   The user's federations. May be null or an empty array if the user 
    ///   doesn't have any federations. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserFederationInfo[] Federations {
            get {
                return this.federationsField;
            }
            set {
                this.federationsField = value;
            }
        }
        
    /// <datatype>
    ///   UserDigitalIdInfo[]
    /// </datatype>
    /// <value>
    ///   The user's Digital Ids. May be null or an empty array if the user 
    ///   doesn't have any Digital Ids. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserDigitalIdInfo[] DigitalIds {
            get {
                return this.digitalIdsField;
            }
            set {
                this.digitalIdsField = value;
            }
        }
        
    /// <datatype>
    ///   UserSmartCredentialInfo[]
    /// </datatype>
    /// <value>
    ///   The user's Smart Credentials. May be null or an empty array if the 
    ///   user doesn't have any Smart Credentials. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserSmartCredentialInfo[] SmartCredentials {
            get {
                return this.smartCredentialsField;
            }
            set {
                this.smartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   UserState
    /// </datatype>
    /// <value>
    ///   The user's state.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<UserState> UserState {
            get {
                return this.userStateField;
            }
            set {
                this.userStateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The reason for the user's suspension, if the user's state is 
    ///   SUSPENDED. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SuspendReason {
            get {
                return this.suspendReasonField;
            }
            set {
                this.suspendReasonField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of the names of the roles assigned to this user.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
        
    /// <datatype>
    ///   UserLocation[]
    /// </datatype>
    /// <value>
    ///   The list of locations that this user has authenticated from.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserLocation[] userLocations {
            get {
                return this.userLocationsField;
            }
            set {
                this.userLocationsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, use the policy setting for maxLocationHistorySize. If false, 
    ///   maxLocationHistorySize indicates the maximum location history size. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool usePolicyForMaxLocationHistorySize {
            get {
                return this.usePolicyForMaxLocationHistorySizeField;
            }
            set {
                this.usePolicyForMaxLocationHistorySizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size of the user location history list. This attribute 
    ///   will not be set if usePolicyForMaxLocationHistorySize is true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxLocationHistorySize {
            get {
                return this.maxLocationHistorySizeField;
            }
            set {
                this.maxLocationHistorySizeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, use the policy setting for checkVelocity. If false, 
    ///   checkVelocity indicates whether or not to perform the velocity check when 
    ///   authenticating an IP address. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool usePolicyForCheckVelocity {
            get {
                return this.usePolicyForCheckVelocityField;
            }
            set {
                this.usePolicyForCheckVelocityField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, perform the velocity check when authenticating an IP address. 
    ///   This attribute will not be set if usePolicyForCheckVelocity is true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> checkVelocity {
            get {
                return this.checkVelocityField;
            }
            set {
                this.checkVelocityField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, use the policy setting for checkIPAddressInLocationHistory. 
    ///   If false, checkIPAddressInLocationHistory indicates whether or not to 
    ///   check the IP address when comparing a location against the user's 
    ///   location history. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool usePolicyForCheckIPAddressInLocationHistory {
            get {
                return this.usePolicyForCheckIPAddressInLocationHistoryField;
            }
            set {
                this.usePolicyForCheckIPAddressInLocationHistoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, check the IP address when comparing a location against the 
    ///   user's location history. This attribute will not be set if 
    ///   usePolicyForCheckIPAddressInLocationHistory is true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> checkIPAddressInLocationHistory {
            get {
                return this.checkIPAddressInLocationHistoryField;
            }
            set {
                this.checkIPAddressInLocationHistoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, this user uses the expected locations settings defined in 
    ///   policy. Otherwise, the per-user expectedLocations setting is used. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool usePolicyForExpectedLocations {
            get {
                return this.usePolicyForExpectedLocationsField;
            }
            set {
                this.usePolicyForExpectedLocationsField = value;
            }
        }
        
    /// <datatype>
    ///   ExpectedLocation[]
    /// </datatype>
    /// <value>
    ///   A list of locations the user can authenticate from. This value is 
    ///   ignored if usePolicyForExpectedLocations is true. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ExpectedLocation[] expectedLocations {
            get {
                return this.expectedLocationsField;
            }
            set {
                this.expectedLocationsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional descriptive comments about this user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the user contact information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ContactInfo {
        
        private bool mappedField;
        
        private bool hidingMappingField;
        
        private string contactInfoLabelField;
        
        private bool contactInfoLabelMappedField;
        
        private string valueField;
        
        private bool valueMappedField;
        
        private string deliveryConfigLabelField;
        
        private bool deliveryConfigLabelMappedField;
        
        private bool defaultContactInfoField;
        
        private bool defaultMappedField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Is this contact info mapped from an attribute in the repository? 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mapped {
            get {
                return this.mappedField;
            }
            set {
                this.mappedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Is this contact info hiding a mapping from a repository attribute to a 
    ///   contact info? This may happen when a user already has a contact info 
    ///   with a particular label, e.g. Email, then a contact info mapping 
    ///   rule is defined for this label. Since a user's contact info labels must 
    ///   be unique, the user cannot have both the original contact information 
    ///   and the mapped contact information. An application that values 
    ///   mapped contact information over user-defined contact information could use 
    ///   this flag to automatically delete the user-defined contact 
    ///   information, thus making the mapped contact information available. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hidingMapping {
            get {
                return this.hidingMappingField;
            }
            set {
                this.hidingMappingField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user contact info label.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contactInfoLabel {
            get {
                return this.contactInfoLabelField;
            }
            set {
                this.contactInfoLabelField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Was the label for this contact info created by mapping an attribute in 
    ///   the repository to contact info? If true then yes, otherwise it means 
    ///   the label was set by a user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool contactInfoLabelMapped {
            get {
                return this.contactInfoLabelMappedField;
            }
            set {
                this.contactInfoLabelMappedField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The value of the user contact info.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Was the value for this contact info created by mapping an attribute in 
    ///   the repository to contact info? If true then yes. If false, and 
    ///   isMapped is true, it means a user has manually changed the value of a 
    ///   mapped contact info. This may indicate that the value in the repository 
    ///   should be updated too. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool valueMapped {
            get {
                return this.valueMappedField;
            }
            set {
                this.valueMappedField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The label of the delivery configuration that is associated with this 
    ///   user contact info. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string deliveryConfigLabel {
            get {
                return this.deliveryConfigLabelField;
            }
            set {
                this.deliveryConfigLabelField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Was the delivery configuration for this contact info set by mapping an 
    ///   attribute in the repository to contact info? If true then yes. If 
    ///   false, and isMapped is true, it means a user has manually changed the 
    ///   delivery configuration of a mapped contact info. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deliveryConfigLabelMapped {
            get {
                return this.deliveryConfigLabelMappedField;
            }
            set {
                this.deliveryConfigLabelMappedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this user contact info instance is default. The 
    ///   delivery configuration associated with this contact info is used for 
    ///   out-of-band data delivery when no contact info is specified for delivery. 
    ///   Defaults to false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultContactInfo {
            get {
                return this.defaultContactInfoField;
            }
            set {
                this.defaultContactInfoField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Was the defaultContactInfo flag for this contact info set by mapping 
    ///   an attribute in the repository to contact info? If true then yes. If 
    ///   false, and isMapped is true, it means a user has manually changed the 
    ///   defaultContactInfo flag of a mapped contact info. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultMapped {
            get {
                return this.defaultMappedField;
            }
            set {
                this.defaultMappedField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information a user's lockout state.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserLockoutInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private int failureCountField;
        
        private System.Nullable<System.DateTime> lockoutDateField;
        
        private AuthenticatorLockout[] authenticatorLockoutsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID of the user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name portion of the user ID.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of failed authentications remaining before the user is 
    ///   locked out. A value of 0 indicates user is locked out. A negative value 
    ///   indicates the user will never be locked out due to failing 
    ///   authentication. This value is based on the lockout mode policy. 
    ///   In GLOBAL lockout mode, this value represents the global lockout 
    ///   counter. 
    ///   In ALL_AUTHENTICATOR lockout mode, this value represents the lowest 
    ///   individual authenticator lockout counter. 
    ///   In PER_AUTHENTICATOR lockout mode, this value represents the lowest 
    ///   individual authenticator lockout counter. This value should not be 
    ///   used, rather the AuthenticatorLockout data should be used instead. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FailureCount {
            get {
                return this.failureCountField;
            }
            set {
                this.failureCountField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date on which the lockout will expire.
    ///   The value is only meaningful if the FailureCount is 0. A value of 
    ///   Date(0) means the lockout will not expire (i.e., it must be cleared by an 
    ///   administrator). This value is based on the lockout mode policy. 
    ///   In GLOBAL lockout mode, this value represents the global lockout 
    ///   expiry date. 
    ///   In ALL_AUTHENTICATOR lockout mode, this value represents the highest 
    ///   individual authenticator lockout expiry date. 
    ///   In PER_AUTHENTICATOR lockout mode, this value represents the lowest 
    ///   individual authenticator lockout expiry date. This value should not be 
    ///   used, rather the AuthenticatorLockout data should be used instead. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> LockoutDate {
            get {
                return this.lockoutDateField;
            }
            set {
                this.lockoutDateField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticatorLockout[]
    /// </datatype>
    /// <value>
    ///   The authenticator lockout information. This is only used with the 
    ///   ALL_AUTHENTICATOR and PER_AUTHENTICATOR lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticatorLockout[] AuthenticatorLockouts {
            get {
                return this.authenticatorLockoutsField;
            }
            set {
                this.authenticatorLockoutsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information returned about an authenticator lockout.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class AuthenticatorLockout {
        
        private AuthenticatorLockoutId idField;
        
        private int failureCountField;
        
        private System.Nullable<System.DateTime> lockoutDateField;
        
    /// <datatype>
    ///   AuthenticatorLockoutId
    /// </datatype>
    /// <value>
    ///   The authenticator lockout id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AuthenticatorLockoutId Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of failed authentications remaining for this authenticator. 
    ///   A value of 0 indicates the authenticator is locked. 
    ///   A negative value indicates the authenticator will never be locked out 
    ///   due to failing authentication. Whether the user is locked out of all 
    ///   authenticators is determined by the lockout mode policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FailureCount {
            get {
                return this.failureCountField;
            }
            set {
                this.failureCountField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date on which the lockout for this specific authenticator will 
    ///   expire. 
    ///   The value is only meaningful if this specific authenticator's' 
    ///   FailureCount is 0. 
    ///   A value of Date(0) means the lockout will not expire (i.e., it must be 
    ///   cleared by an administrator). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> LockoutDate {
            get {
                return this.lockoutDateField;
            }
            set {
                this.lockoutDateField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about an authentication including the date on 
    ///   which the authentication took place and the type of authentication. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public partial class AuthenticationInfo {
        
        private System.DateTime dateField;
        
        private AuthenticationType typeField;
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date the authentication took place.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType
    /// </datatype>
    /// <value>
    ///   The type of authentication.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AuthenticationType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a shared secret. Shared secrets are name/value pairs that can 
    ///   be set and retrieved during user authentication. They can be used to 
    ///   allow an application to store details about a user that are only 
    ///   released after a user has successfully authenticated, possibly allowing 
    ///   the application to perform further authentication of the user. 
    ///   <p>
    ///   Shared secrets are not used by Entrust IdentityGuard for 
    ///   authentication purposes. 
    ///   </p>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public partial class SharedSecret {
        
        private string nameField;
        
        private string valueField;
        
        private System.Nullable<bool> writeOnlyField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the shared secret. This name is unique for each user. 
    ///   <p>
    ///   Note that this value can be omitted, however, this is only to allow 
    ///   the server to treat it being missing as a non-fatal error (rather than 
    ///   a schema validation error). This value should always be specified. 
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The value of the shared secret.
    ///   <p>
    ///   Note that this value can be omitted, however, this is only to allow 
    ///   the server to treat it being missing as a non-fatal error (rather than 
    ///   a schema validation error). This value should always be specified. 
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, indicates that the client application can only write and 
    ///   remove the value but can not view it. In this case, only system 
    ///   administrators can view the secret. This value defaults to false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> WriteOnly {
            get {
                return this.writeOnlyField;
            }
            set {
                this.writeOnlyField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information stored as a machine secret.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class MachineSecretInfo {
        
        private string machineLabelField;
        
        private string machineNonceField;
        
        private string sequenceNonceField;
        
        private NameValue[] applicationDataField;
        
        private System.DateTime createDateField;
        
        private System.Nullable<System.DateTime> lastUsedDateField;
        
        private System.DateTime expiryDateField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The machine label.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string machineLabel {
            get {
                return this.machineLabelField;
            }
            set {
                this.machineLabelField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The machine nonce.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string machineNonce {
            get {
                return this.machineNonceField;
            }
            set {
                this.machineNonceField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The sequence nonce.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sequenceNonce {
            get {
                return this.sequenceNonceField;
            }
            set {
                this.sequenceNonceField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   The application data. May be null or an empty array if the machine 
    ///   secret doesn't have any application data. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] applicationData {
            get {
                return this.applicationDataField;
            }
            set {
                this.applicationDataField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date the machine secret was created.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date the machine secret was last used to authenticate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> LastUsedDate {
            get {
                return this.lastUsedDateField;
            }
            set {
                this.lastUsedDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date after which this machine secret can not be used for 
    ///   authentication. 
    ///   A value of Date(0) means this machine secret can be used indefinitely. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned when querying a user PIN.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPINInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private int numUsesField;
        
        private System.DateTime createDateField;
        
        private System.Nullable<System.DateTime> expireDateField;
        
        private string[] pINField;
        
        private string[] rolesGrantingAccessField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID that owns the PIN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name of the user ID that owns the PIN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user ID that owns the PIN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of uses remaining for the PIN. A value less than 0 
    ///   indicates infinite uses. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NumUses {
            get {
                return this.numUsesField;
            }
            set {
                this.numUsesField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date the PIN was created.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date the PIN will expire. A value of Date(0) indicates the PIN 
    ///   doesn't have an expiry date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> ExpireDate {
            get {
                return this.expireDateField;
            }
            set {
                this.expireDateField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The value of the PIN.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] PIN {
            get {
                return this.pINField;
            }
            set {
                this.pINField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The comment for the PIN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned when querying a user's one-time 
    ///   password (OTP). 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserOTPInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private long indexField;
        
        private System.DateTime createDateField;
        
        private System.Nullable<System.DateTime> expireDateField;
        
        private string oTPField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID that owns the OTP.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name of the user ID that owns the OTP.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user ID that owns the OTP.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The index of the OTP.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date the OTP was created.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date the OTP will expire. A value of Date(0) indicates the OTP 
    ///   doesn't have an expiry date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> ExpireDate {
            get {
                return this.expireDateField;
            }
            set {
                this.expireDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The value of one-time password.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string OTP {
            get {
                return this.oTPField;
            }
            set {
                this.oTPField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned when querying a user's personal 
    ///   verification number (PVN). 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPVNInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private string pVNField;
        
        private System.DateTime lastChangeDateField;
        
        private bool changeRequiredField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID that owns the PVN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name of the user ID that owns the PVN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user ID that owns the PVN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The value of the personal verification number.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PVN {
            get {
                return this.pVNField;
            }
            set {
                this.pVNField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date when the PVN was last changed.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime LastChangeDate {
            get {
                return this.lastChangeDateField;
            }
            set {
                this.lastChangeDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates if the personal verification number must be changed by the 
    ///   user. True means the user is required to change their PVN. False means 
    ///   it is optional for the user to change their PVN. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ChangeRequired {
            get {
                return this.changeRequiredField;
            }
            set {
                this.changeRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned when querying a user Password. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserPasswordInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private string passwordNameField;
        
        private System.Nullable<PasswordStorage> passwordStorageField;
        
        private string retrievablePasswordField;
        
        private System.Nullable<System.DateTime> lastChangeDateField;
        
        private System.Nullable<System.DateTime> expireDateField;
        
        private System.Nullable<bool> changeRequiredField;
        
        private System.Nullable<bool> changeExpiredField;
        
        private System.Nullable<int> historySizeField;
        
        private System.Nullable<bool> importedField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID that owns the Password.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name of the user ID that owns the Password.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user ID that owns the Password.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the password. The default password will have a null value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PasswordName {
            get {
                return this.passwordNameField;
            }
            set {
                this.passwordNameField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordStorage
    /// </datatype>
    /// <value>
    ///   The method used to encode this password in the repository.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<PasswordStorage> PasswordStorage {
            get {
                return this.passwordStorageField;
            }
            set {
                this.passwordStorageField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The retrievable password returned if available and proper permissions 
    ///   granted to admin. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string RetrievablePassword {
            get {
                return this.retrievablePasswordField;
            }
            set {
                this.retrievablePasswordField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date the Password was last changed.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> LastChangeDate {
            get {
                return this.lastChangeDateField;
            }
            set {
                this.lastChangeDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date the Password will expire. A value of Date(0) indicates the 
    ///   Password doesn't have an expiry date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> ExpireDate {
            get {
                return this.expireDateField;
            }
            set {
                this.expireDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates if a password change is required.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ChangeRequired {
            get {
                return this.changeRequiredField;
            }
            set {
                this.changeRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates if a password change is required but the user hasn't changed 
    ///   the password within the time specified by policy. This value will 
    ///   only be meaningful if ChangeRequired is true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ChangeExpired {
            get {
                return this.changeExpiredField;
            }
            set {
                this.changeExpiredField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of password values stored in the history.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> HistorySize {
            get {
                return this.historySizeField;
            }
            set {
                this.historySizeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this user password is an imported password. For 
    ///   imported passwords, this flag will be set to false once the password 
    ///   has been converted to an Entrust IdentityGuard password after the 
    ///   first successful authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> Imported {
            get {
                return this.importedField;
            }
            set {
                this.importedField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned when querying user Activation state. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ActivationInfo {
        
        private string useridField;
        
        private string userNameField;
        
        private string groupField;
        
        private System.Nullable<System.DateTime> expireDateField;
        
        private bool notSetField;
        
        private bool activatedField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user ID.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date the Activation period will expire.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> ExpireDate {
            get {
                return this.expireDateField;
            }
            set {
                this.expireDateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates if the Activation expiry was not set.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool NotSet {
            get {
                return this.notSetField;
            }
            set {
                this.notSetField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates if the user is Activated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Activated {
            get {
                return this.activatedField;
            }
            set {
                this.activatedField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a user location.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserLocation {
        
        private bool privateAddressField;
        
        private string iPAddressField;
        
        private string countryField;
        
        private string countryNameField;
        
        private string regionField;
        
        private string regionNameField;
        
        private string cityField;
        
        private string iSPField;
        
        private System.Nullable<float> latitudeField;
        
        private System.Nullable<float> longitudeField;
        
        private System.DateTime lastAuthenticationField;
        
        private System.DateTime expiryDateField;
        
        private int numAuthenticationsField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the IP address is a private IP address as defined by RFC 
    ///   1918. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool privateAddress {
            get {
                return this.privateAddressField;
            }
            set {
                this.privateAddressField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The IP address of the location.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The country code of the location.
    ///   Private IP addresses do not have a country.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The country name of the location.
    ///   Private IP addresses do not have a country.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string countryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The region code of the location.
    ///   Private IP addresses do not have a region.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The region name of the location.
    ///   Private IP addresses do not have a region.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string regionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The city of the location.
    ///   Private IP addresses do not have a city.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The ISP of the location.
    ///   Private IP addresses do not have an ISP.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ISP {
            get {
                return this.iSPField;
            }
            set {
                this.iSPField = value;
            }
        }
        
    /// <datatype>
    ///   float
    /// </datatype>
    /// <value>
    ///   The latitude of the location.
    ///   Private IP addresses do not have a latitude.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<float> latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
    /// <datatype>
    ///   float
    /// </datatype>
    /// <value>
    ///   The longitude of the location.
    ///   Private IP addresses do not have a longitude.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<float> longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The last time the user authenticated from this location.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime lastAuthentication {
            get {
                return this.lastAuthenticationField;
            }
            set {
                this.lastAuthenticationField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   After the expiry time, this location will no longer be considered when 
    ///   performing IP authentication. A value of Date(0) means this location 
    ///   does not expire. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of times the user has authenticated from this location. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numAuthentications {
            get {
                return this.numAuthenticationsField;
            }
            set {
                this.numAuthenticationsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines an expected location.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ExpectedLocation {
        
        private bool privateAddressField;
        
        private string countryField;
        
        private string countryNameField;
        
        private string regionField;
        
        private string regionNameField;
        
        private string cityField;
        
        private string iSPField;
        
        private string iPAddressField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, this expected location is a private IP address as defined by 
    ///   RFC 1918. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool privateAddress {
            get {
                return this.privateAddressField;
            }
            set {
                this.privateAddressField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional country code of the location.
    ///   Private IP addresses do not have a country.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional country name of the location.
    ///   This argument is ignored when creating or modifying an 
    ///   ExpectedLocation. 
    ///   Private IP addresses do not have a country.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string countryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional region code of the location.
    ///   This argument is ignored when creating or modifying an 
    ///   ExpectedLocation. An expected location can only have a region code if it also has a 
    ///   country code. 
    ///   Private IP addresses do not have a region.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional region name of the location.
    ///   An expected location can only have a region name if it also has a 
    ///   country code. 
    ///   Private IP addresses do not have a region.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string regionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional city of the location.
    ///   Private IP addresses do not have a city.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional ISP of the location.
    ///   Private IP addresses do not have an ISP.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ISP {
            get {
                return this.iSPField;
            }
            set {
                this.iSPField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional IP Address of the location.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to userList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserListCallParms {
        
        private UserFilter filterField;
        
        private UserGetParms parmsField;
        
    /// <datatype>
    ///   UserFilter
    /// </datatype>
    /// <value>
    ///   The search filter, specifying which users should be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
    /// <datatype>
    ///   UserGetParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling what information is returned for each user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserGetParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information returned about a user.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserGetParms {
        
        private System.Nullable<bool> getCardsField;
        
        private System.Nullable<bool> getGridField;
        
        private System.Nullable<bool> getPINField;
        
        private System.Nullable<bool> getSharedSecretsField;
        
        private System.Nullable<bool> getOTPField;
        
        private System.Nullable<bool> getPVNField;
        
        private System.Nullable<bool> getPasswordField;
        
        private System.Nullable<bool> getTokensField;
        
        private System.Nullable<bool> getCertificatesField;
        
        private System.Nullable<bool> getQASecretsField;
        
        private System.Nullable<bool> getAuthenticationSecretsField;
        
        private System.Nullable<bool> getMachineSecretsField;
        
        private System.Nullable<bool> getUserContactInfoField;
        
        private System.Nullable<bool> getExpectedLocationsField;
        
        private System.Nullable<bool> getLocationHistoryField;
        
        private System.Nullable<bool> getActivationExpiryInfoField;
        
        private System.Nullable<bool> getFederationsField;
        
        private System.Nullable<bool> getDigitalIdsField;
        
        private System.Nullable<bool> getSmartCredentialsField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user cards. If not set, defaults to true.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getCards {
            get {
                return this.getCardsField;
            }
            set {
                this.getCardsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, and returning cards for the user, includes the card grid. If 
    ///   not set, defaults to false. 
    ///   Even if requested, the card grid will not be returned if the caller 
    ///   does not have permission to view grids. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getGrid {
            get {
                return this.getGridField;
            }
            set {
                this.getGridField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user PIN. If not set, defaults to true.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getPIN {
            get {
                return this.getPINField;
            }
            set {
                this.getPINField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user shared secrets. If not set, defaults to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getSharedSecrets {
            get {
                return this.getSharedSecretsField;
            }
            set {
                this.getSharedSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user OTP. If not set, defaults to true.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getOTP {
            get {
                return this.getOTPField;
            }
            set {
                this.getOTPField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user PVN. If not set, defaults to true.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getPVN {
            get {
                return this.getPVNField;
            }
            set {
                this.getPVNField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user Password. If not set, defaults to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getPassword {
            get {
                return this.getPasswordField;
            }
            set {
                this.getPasswordField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user tokens. If not set, defaults to false.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getTokens {
            get {
                return this.getTokensField;
            }
            set {
                this.getTokensField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user certificates. If not set, defaults to false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getCertificates {
            get {
                return this.getCertificatesField;
            }
            set {
                this.getCertificatesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user QA secrets. If not set, defaults to false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getQASecrets {
            get {
                return this.getQASecretsField;
            }
            set {
                this.getQASecretsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user authentication secrets. If not set, defaults to 
    ///   false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getAuthenticationSecrets {
            get {
                return this.getAuthenticationSecretsField;
            }
            set {
                this.getAuthenticationSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user machine secrets. If not set, defaults to false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getMachineSecrets {
            get {
                return this.getMachineSecretsField;
            }
            set {
                this.getMachineSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user contact info. If not set, defaults to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getUserContactInfo {
            get {
                return this.getUserContactInfoField;
            }
            set {
                this.getUserContactInfoField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user's expected locations.
    ///   If not set, defaults to false.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getExpectedLocations {
            get {
                return this.getExpectedLocationsField;
            }
            set {
                this.getExpectedLocationsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user's location history.
    ///   If not set, defaults to false.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getLocationHistory {
            get {
                return this.getLocationHistoryField;
            }
            set {
                this.getLocationHistoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user's Activation information.
    ///   If not set, defaults to true.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getActivationExpiryInfo {
            get {
                return this.getActivationExpiryInfoField;
            }
            set {
                this.getActivationExpiryInfoField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user federations. If not set, defaults to false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getFederations {
            get {
                return this.getFederationsField;
            }
            set {
                this.getFederationsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user Digital Ids. If not set, defaults to false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getDigitalIds {
            get {
                return this.getDigitalIdsField;
            }
            set {
                this.getDigitalIdsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, returns user Smart Credentials. If not set, defaults to 
    ///   false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getSmartCredentials {
            get {
                return this.getSmartCredentialsField;
            }
            set {
                this.getSmartCredentialsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to userSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSetCallParms {
        
        private string useridField;
        
        private UserParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID to update
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserParms
    /// </datatype>
    /// <value>
    ///   The updated values to set into the user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters passed when creating or modifying a user. All 
    ///   values can be null indicating that the default is used when creating a 
    ///   user, or the value is not changed when modifying a user. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserParms {
        
        private string useridField;
        
        private string groupField;
        
        private string partitionField;
        
        private System.Nullable<bool> assignToNoPartitionField;
        
        private string repositoryField;
        
        private System.Nullable<UserState> userStateField;
        
        private string suspendReasonField;
        
        private UserContactInfoParms[] contactInfoListField;
        
        private string[] aliasesField;
        
        private System.Nullable<bool> addAliasesField;
        
        private string[] removeAliasesField;
        
        private string fullNameField;
        
        private string localeField;
        
        private UserLockoutParms lockoutParmsField;
        
        private System.Nullable<bool> clearMachineSecretsField;
        
        private string[] removeMachineSecretsField;
        
        private SharedSecret[] sharedSecretsField;
        
        private System.Nullable<bool> mergeSecretsField;
        
        private string[] removeSharedSecretsField;
        
        private System.Nullable<bool> removeAllSecretsField;
        
        private NameValue[] qaSecretsField;
        
        private System.Nullable<bool> mergeQaSecretsField;
        
        private string[] removeQaSecretsField;
        
        private System.Nullable<bool> removeAllQaSecretsField;
        
        private NameValue[] authenticationSecretsField;
        
        private System.Nullable<bool> mergeAuthenticationSecretsField;
        
        private string[] removeAuthenticationSecretsField;
        
        private System.Nullable<bool> removeAllAuthenticationSecretsField;
        
        private string[] rolesField;
        
        private System.Nullable<bool> mergeRolesField;
        
        private string[] removeRolesField;
        
        private System.Nullable<bool> oTPAllowedField;
        
        private System.Nullable<bool> usePolicyForOTPDeliveryEnabledField;
        
        private System.Nullable<bool> oTPDeliveryEnabledField;
        
        private System.Nullable<bool> usePolicyForMaxLocationHistorySizeField;
        
        private System.Nullable<int> maxLocationHistorySizeField;
        
        private System.Nullable<bool> removeAllLocationHistoryField;
        
        private string[] removeLocationHistoryField;
        
        private string[] addLocationHistoryField;
        
        private System.Nullable<bool> usePolicyForCheckVelocityField;
        
        private System.Nullable<bool> checkVelocityField;
        
        private System.Nullable<bool> usePolicyForCheckIPAddressInLocationHistoryField;
        
        private System.Nullable<bool> checkIPAddressInLocationHistoryField;
        
        private System.Nullable<bool> usePolicyForExpectedLocationsField;
        
        private ExpectedLocation[] expectedLocationsField;
        
        private System.Nullable<bool> addExpectedLocationsField;
        
        private System.Nullable<bool> removeExpectedLocationsField;
        
        private System.Nullable<ActivationExpiryCode> activationExpiryCodeField;
        
        private System.Nullable<int> activationDaysToExpiryField;
        
        private string commentsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This parameter only applies to the modify operation, and is ignored by 
    ///   other operations. This value is the old value of a user ID and 
    ///   indicates that the user ID is to be modified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group of the user. When creating a user, if the user ID includes 
    ///   the group, then this value must be null or match the group in the user 
    ///   ID. 
    ///   During creation, if the group is not specified in the user ID nor in 
    ///   this value, then the user is created in the group flagged as the 
    ///   default. 
    ///   When modifying a user, this value can change the group to which the 
    ///   user belongs. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the partition the user is to be assigned to, overriding 
    ///   the partition the user will be created in or is already assigned to. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Partition {
            get {
                return this.partitionField;
            }
            set {
                this.partitionField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   When creating or updating a user, assign them to no partition, 
    ///   overriding the partition that the user would be created in or is already 
    ///   assigned to. 
    ///   This value is ignored if Partition is specified.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AssignToNoPartition {
            get {
                return this.assignToNoPartitionField;
            }
            set {
                this.assignToNoPartitionField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the repository that the user's information is to be stored 
    ///   in. If specified, this must be one of the repositories in the list 
    ///   of repositories assigned to the user's group. 
    ///   When modifying a user, this value can change the repository in which 
    ///   the user's data is stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Repository {
            get {
                return this.repositoryField;
            }
            set {
                this.repositoryField = value;
            }
        }
        
    /// <datatype>
    ///   UserState
    /// </datatype>
    /// <value>
    ///   The user's state.
    ///   The default during user creation is ACTIVE.
    ///   When modifying a user, if this is ACTIVE, the SuspendReason is 
    ///   cleared. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<UserState> UserState {
            get {
                return this.userStateField;
            }
            set {
                this.userStateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A free-format string indicating the reason for a user suspension. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SuspendReason {
            get {
                return this.suspendReasonField;
            }
            set {
                this.suspendReasonField = value;
            }
        }
        
    /// <datatype>
    ///   UserContactInfoParms[]
    /// </datatype>
    /// <value>
    ///   The user's contact information.
    ///   If specified when modifying a user, the user's contact information 
    ///   list will be replaced by the list in this parameter. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserContactInfoParms[] ContactInfoList {
            get {
                return this.contactInfoListField;
            }
            set {
                this.contactInfoListField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The user's aliases.
    ///   If specified during a userSet operation and addAliases is false or 
    ///   null, then the user's existing aliases are replaced by this list. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Aliases {
            get {
                return this.aliasesField;
            }
            set {
                this.aliasesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the aliases listed in the Aliases attribute are merged with 
    ///   the existing values instead of replacing the existing values. If not 
    ///   specified, this value defaults to false. This parameter only applies 
    ///   to the user set operation, and is ignored by other operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> addAliases {
            get {
                return this.addAliasesField;
            }
            set {
                this.addAliasesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of aliases to remove from the user. This list is applied after 
    ///   new aliases are added. This parameter only applies to the user set 
    ///   operation, and is ignored by other operations. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] removeAliases {
            get {
                return this.removeAliasesField;
            }
            set {
                this.removeAliasesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The full name of the user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The locale of the user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
    /// <datatype>
    ///   UserLockoutParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling lockout operations on the user. This parameter 
    ///   only applies to the userSet operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserLockoutParms lockoutParms {
            get {
                return this.lockoutParmsField;
            }
            set {
                this.lockoutParmsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, clears the machine secrets of the user.
    ///   If not specified, this value defaults to false.
    ///   This parameter only applies to the user set operation, and is ignored 
    ///   by other operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ClearMachineSecrets {
            get {
                return this.clearMachineSecretsField;
            }
            set {
                this.clearMachineSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If clearMachineSecrets is not set or set to false this attribute can 
    ///   define a list of machine secret nonces that will be removed from the 
    ///   user. All listed nonces must exist for the user or an error will be 
    ///   returned. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] removeMachineSecrets {
            get {
                return this.removeMachineSecretsField;
            }
            set {
                this.removeMachineSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   SharedSecret[]
    /// </datatype>
    /// <value>
    ///   A list of shared secrets to assign to the user.
    ///   If specified during a userSet operation and MergeSecrets is false or 
    ///   null, then the user's existing shared secrets are replaced by this 
    ///   list. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SharedSecret[] SharedSecrets {
            get {
                return this.sharedSecretsField;
            }
            set {
                this.sharedSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the SharedSecrets list is merged with the existing 
    ///   values. If not specified, this value defaults to false. This parameter 
    ///   only applies to the user set operation, and is ignored by other 
    ///   operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> MergeSecrets {
            get {
                return this.mergeSecretsField;
            }
            set {
                this.mergeSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of shared secret names to be removed.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RemoveSharedSecrets {
            get {
                return this.removeSharedSecretsField;
            }
            set {
                this.removeSharedSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, remove all shared secrets. If specified, this value 
    ///   takes precedence over RemoveSharedSecrets. If not specified it defaults 
    ///   to false. This parameter only applies to the user set operation, and 
    ///   is ignored by other operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RemoveAllSecrets {
            get {
                return this.removeAllSecretsField;
            }
            set {
                this.removeAllSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   Question and answer pairs that will be used for QA authentication. 
    ///   If specified during a userSet operation and MergeQaSecrets is false or 
    ///   null, then the user's existing question and answer pairs are 
    ///   replaced by this list. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] QaSecrets {
            get {
                return this.qaSecretsField;
            }
            set {
                this.qaSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the QaSecrets list is merged with the existing values. 
    ///   If not specified, this value defaults to false. This parameter only 
    ///   applies to the user set operation, and is ignored by other 
    ///   operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> MergeQaSecrets {
            get {
                return this.mergeQaSecretsField;
            }
            set {
                this.mergeQaSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of questions to remove from the list of question and answer 
    ///   pairs. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RemoveQaSecrets {
            get {
                return this.removeQaSecretsField;
            }
            set {
                this.removeQaSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, remove all QA secrets. If specified, this value takes 
    ///   precedence over RemoveQaSecrets. If not specified it defaults to 
    ///   false. This parameter only applies to the user set operation, and is 
    ///   ignored by other operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RemoveAllQaSecrets {
            get {
                return this.removeAllQaSecretsField;
            }
            set {
                this.removeAllQaSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   Secrets to use to allow an application to authenticate itself to the 
    ///   user. 
    ///   If specified during a userSet operation and MergeAuthenticationSecrets 
    ///   is false or null, then the user's existing mutual authentication 
    ///   secrets are replaced by this list. 
    ///   <p>
    ///   Note that it is up to the application to perform any encoding required 
    ///   so that the mutual authentication secrets can be stored as a string. 
    ///   For example, if the secret is a JPEG image then this image must be 
    ///   encoded as a string before being set here, and the calling application 
    ///   must know how to convert such a string back to the original JPEG 
    ///   image. 
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] AuthenticationSecrets {
            get {
                return this.authenticationSecretsField;
            }
            set {
                this.authenticationSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the AuthenticationSecrets list is merged with the 
    ///   existing values. If not specified, this value defaults to false. This 
    ///   parameter only applies to the user set operation, and is ignored by 
    ///   other operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> MergeAuthenticationSecrets {
            get {
                return this.mergeAuthenticationSecretsField;
            }
            set {
                this.mergeAuthenticationSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of authentication secret names to be removed.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RemoveAuthenticationSecrets {
            get {
                return this.removeAuthenticationSecretsField;
            }
            set {
                this.removeAuthenticationSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, removes all authentication secrets.
    ///   If specified, this value takes precedence over 
    ///   RemoveAuthenticationSecrets. If not specified it defaults to false. This parameter only 
    ///   applies to the user set operation, and is ignored by other operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RemoveAllAuthenticationSecrets {
            get {
                return this.removeAllAuthenticationSecretsField;
            }
            set {
                this.removeAllAuthenticationSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of the names of the roles assigned to this user.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the Roles list is merged with the existing values. If 
    ///   not specified, this value defaults to false. This parameter only 
    ///   applies to the user set operation, and is ignored by other operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> MergeRoles {
            get {
                return this.mergeRolesField;
            }
            set {
                this.mergeRolesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of roles names to be removed from the user's list of roles. If 
    ///   both MergeRoles is true and this list is non-empty, then this list of 
    ///   roles is removed first, then the other roles specified are merged. 
    ///   It is an error to remove a role that is not already assigned to the 
    ///   user. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] RemoveRoles {
            get {
                return this.removeRolesField;
            }
            set {
                this.removeRolesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Set the flag indicating if the user is allowed to use a one-time 
    ///   password (OTP) for authentication. 
    ///   If not specified at user creation time, defaults to true.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> OTPAllowed {
            get {
                return this.oTPAllowedField;
            }
            set {
                this.oTPAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, use the policy setting for OTPDeliveryEnabled.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> usePolicyForOTPDeliveryEnabled {
            get {
                return this.usePolicyForOTPDeliveryEnabledField;
            }
            set {
                this.usePolicyForOTPDeliveryEnabledField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the OTP can be delivered via out-of-band delivery 
    ///   mechanism to this user. 
    ///   This value is ignored if usePolicyForOTPDeliveryEnabled is true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> OTPDeliveryEnabled {
            get {
                return this.oTPDeliveryEnabledField;
            }
            set {
                this.oTPDeliveryEnabledField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, use the policy for maxLocationHistorySize.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> usePolicyForMaxLocationHistorySize {
            get {
                return this.usePolicyForMaxLocationHistorySizeField;
            }
            set {
                this.usePolicyForMaxLocationHistorySizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size of the user location history list. This attribute can 
    ///   not be set if usePolicyForMaxLocationHistorySize is set to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxLocationHistorySize {
            get {
                return this.maxLocationHistorySizeField;
            }
            set {
                this.maxLocationHistorySizeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, remove all entries from the user's location history list. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeAllLocationHistory {
            get {
                return this.removeAllLocationHistoryField;
            }
            set {
                this.removeAllLocationHistoryField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of IP addresses of locations to be removed from the user's 
    ///   location history list. 
    ///   This setting is ignored if removeAllLocationHistory is true.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] removeLocationHistory {
            get {
                return this.removeLocationHistoryField;
            }
            set {
                this.removeLocationHistoryField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of IP addresses of locations to be added from the user's 
    ///   location history list. 
    ///   This setting is applied after the removeAllLocationHistory or 
    ///   removeLocationHistory arguments. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] addLocationHistory {
            get {
                return this.addLocationHistoryField;
            }
            set {
                this.addLocationHistoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, use the policy for checkVelocity.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> usePolicyForCheckVelocity {
            get {
                return this.usePolicyForCheckVelocityField;
            }
            set {
                this.usePolicyForCheckVelocityField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the velocity check is performed when authenticating an IP 
    ///   address. 
    ///   This attribute can not be set if usePolicyForCheckVelocity is set to 
    ///   true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> checkVelocity {
            get {
                return this.checkVelocityField;
            }
            set {
                this.checkVelocityField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, use the policy for checkIPAddressInLocationHistory. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> usePolicyForCheckIPAddressInLocationHistory {
            get {
                return this.usePolicyForCheckIPAddressInLocationHistoryField;
            }
            set {
                this.usePolicyForCheckIPAddressInLocationHistoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the IP address is compared when comparing a location against 
    ///   a user's location history. 
    ///   This attribute can not be set if 
    ///   usePolicyForCheckIPAddressInLocationHistory is set to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> checkIPAddressInLocationHistory {
            get {
                return this.checkIPAddressInLocationHistoryField;
            }
            set {
                this.checkIPAddressInLocationHistoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the expected location settings in policy are used instead of 
    ///   the per user settings. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> usePolicyForExpectedLocations {
            get {
                return this.usePolicyForExpectedLocationsField;
            }
            set {
                this.usePolicyForExpectedLocationsField = value;
            }
        }
        
    /// <datatype>
    ///   ExpectedLocation[]
    /// </datatype>
    /// <value>
    ///   The expected locations list is a list of locations that users are 
    ///   expected to authenticate from. Users authenticated from an expected 
    ///   location may require less authentication. 
    ///   <p>
    ///   This attribute is ignored if the usePolicyForExpectedLocations is set 
    ///   to true. 
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ExpectedLocation[] expectedLocations {
            get {
                return this.expectedLocationsField;
            }
            set {
                this.expectedLocationsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The expected locations list is a list of locations that users are 
    ///   expected to authenticate from. Users authenticated from an expected 
    ///   location may require less authentication. 
    ///   <p>
    ///   If this attribute is set to true, the locations in the 
    ///   expectedLocations attribute will be added to the current value. This attribute will 
    ///   be ignored if the expectedLocation attribute is not set. 
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> addExpectedLocations {
            get {
                return this.addExpectedLocationsField;
            }
            set {
                this.addExpectedLocationsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The expected locations list is a list of locations that users are 
    ///   expected to authenticate from. Users authenticated from an expected 
    ///   location may require less authentication. 
    ///   <p>
    ///   If this attribute is set, the locations in the expectedLocations 
    ///   attribute will be removed from the current value. This attribute is 
    ///   ignored if the expectedLocations attribute is not set or the 
    ///   addExpectedLocations attribute is set. 
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeExpectedLocations {
            get {
                return this.removeExpectedLocationsField;
            }
            set {
                this.removeExpectedLocationsField = value;
            }
        }
        
    /// <datatype>
    ///   ActivationExpiryCode
    /// </datatype>
    /// <value>
    ///   The code for setting the user Activation Expiry.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ActivationExpiryCode> ActivationExpiryCode {
            get {
                return this.activationExpiryCodeField;
            }
            set {
                this.activationExpiryCodeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of days until the Activation period expiry.
    ///   This parameter must be null unless the ActivationExpiryCode is set to 
    ///   NUMDAYS. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> ActivationDaysToExpiry {
            get {
                return this.activationDaysToExpiryField;
            }
            set {
                this.activationDaysToExpiryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional descriptive comments about this user.
    ///   Defaults to an empty string if not specified during user creation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the choices for setting the activation expiry of a user. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum ActivationExpiryCode {
        
    /// <value>
    ///   No activation expiry date has been set.
    /// </value>
        NOTSET,
        
    /// <value>
    ///   The user has successfully activated. This state cannot be used when 
    ///   creating a new user. When modifying user information, this state can 
    ///   only be used when the user has an active card or token. 
    /// </value>
        ACTIVATED,
        
    /// <value>
    ///   Use the activation expiry values configured in the policy.
    /// </value>
        USEPOLICY,
        
    /// <value>
    ///   Set an explicit number of days until the activation period expires. 
    /// </value>
        NUMDAYS,
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to userGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserGetCallParms {
        
        private string useridField;
        
        private UserGetParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID to query.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserGetParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling what information is returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserGetParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userDeliver. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDeliverCallParms {
        
        private string useridField;
        
        private string deliveryField;
        
        private string contactField;
        
        private UserDeliveryParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to deliver.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the user delivery mechanism to use to deliver the user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string delivery {
            get {
                return this.deliveryField;
            }
            set {
                this.deliveryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the user contact that contains the address to which the 
    ///   user will be delivered. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
    /// <datatype>
    ///   UserDeliveryParms
    /// </datatype>
    /// <value>
    ///   Optional parameters passed to the delivery.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserDeliveryParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to userDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDeleteCallParms {
        
        private string useridField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to userCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserCreateCallParms {
        
        private string useridField;
        
        private UserParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID of the user to create
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   UserParms
    /// </datatype>
    /// <value>
    ///   The parameters for the new user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of RepositoryInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RepositoryInfoList {
        
        private RepositoryInfo[] repositoryInfoField;
        
    /// <datatype>
    ///   RepositoryInfo[]
    /// </datatype>
    /// <value>
    ///   Information about repositories.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public RepositoryInfo[] repositoryInfo {
            get {
                return this.repositoryInfoField;
            }
            set {
                this.repositoryInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Information about a repository where Entrust IdentityGuard will store 
    ///   data. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RepositoryInfo {
        
        private string nameField;
        
        private RepositoryType typeField;
        
        private bool defaultRepositoryField;
        
        private bool canContainUsersField;
        
        private bool defaultPolicyRepositoryField;
        
        private bool canContainPoliciesField;
        
        private bool defaultCardRepositoryField;
        
        private bool canContainCardsField;
        
        private bool defaultTokenRepositoryField;
        
        private bool canContainTokensField;
        
        private bool defaultSmartCredentialRepositoryField;
        
        private bool canContainSmartCredentialsField;
        
        private string descriptionField;
        
        private bool userEnrollmentEnabledField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the repository.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   RepositoryType
    /// </datatype>
    /// <value>
    ///   The type of the repository.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RepositoryType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this repository is the default repository used to 
    ///   store user information. This is used when creating a new group and no 
    ///   repositories are specifically assigned to the group. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultRepository {
            get {
                return this.defaultRepositoryField;
            }
            set {
                this.defaultRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this repository can contain user information, and 
    ///   can be assigned to a group's list of repositories that are used to 
    ///   store user information. 
    ///   This flag will not always be true. For example, it will be false in 
    ///   the case of file-based repositories used to store pre-produced cards. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool canContainUsers {
            get {
                return this.canContainUsersField;
            }
            set {
                this.canContainUsersField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this repository is the default repository where 
    ///   policy, group, and role definitions will be stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultPolicyRepository {
            get {
                return this.defaultPolicyRepositoryField;
            }
            set {
                this.defaultPolicyRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this repository can contain policy, group, and role 
    ///   definitions. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool canContainPolicies {
            get {
                return this.canContainPoliciesField;
            }
            set {
                this.canContainPoliciesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this repository is the default repository used to 
    ///   store pre-produced card information. This is used when a group does not 
    ///   specify an explicit repository for pre-produced cards created in 
    ///   that group to be placed in. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultCardRepository {
            get {
                return this.defaultCardRepositoryField;
            }
            set {
                this.defaultCardRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this repository can contain pre-produced card 
    ///   information, and can be assigned as a group's repository in which to store 
    ///   pre-produced cards. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool canContainCards {
            get {
                return this.canContainCardsField;
            }
            set {
                this.canContainCardsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this repository is the default repository used to 
    ///   store unassigned token information. This is used when a group does not 
    ///   specify an explicit repository for unassigned tokens loaded in that 
    ///   group to be placed in. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultTokenRepository {
            get {
                return this.defaultTokenRepositoryField;
            }
            set {
                this.defaultTokenRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this repository can contain unassigned token 
    ///   information, and can be assigned as a group's repository in which to store 
    ///   unassigned tokens. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool canContainTokens {
            get {
                return this.canContainTokensField;
            }
            set {
                this.canContainTokensField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this repository is the default repository used to 
    ///   store unassigned smart credential information. This is used when a 
    ///   group does not specify an explicit repository for unassigned smart 
    ///   credentials loaded in that group to be placed in. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultSmartCredentialRepository {
            get {
                return this.defaultSmartCredentialRepositoryField;
            }
            set {
                this.defaultSmartCredentialRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this repository can contain unassigned smart 
    ///   credential information, and can be assigned as a group's repository in which 
    ///   to store unassigned smart credentials. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool canContainSmartCredentials {
            get {
                return this.canContainSmartCredentialsField;
            }
            set {
                this.canContainSmartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A description of the repository.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this repository is an LDAP repository that contains 
    ///   users who are not yet Entrust IdentityGuard users. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool userEnrollmentEnabled {
            get {
                return this.userEnrollmentEnabledField;
            }
            set {
                this.userEnrollmentEnabledField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines possible types for repositories.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum RepositoryType {
        
    /// <value>
    ///   The repository is a Directory that is accessed by LDAP.
    /// </value>
        LDAP,
        
    /// <value>
    ///   The repository is a database that is accessed using a Java Database 
    ///   (JDBC) driver. 
    /// </value>
        DATABASE,
        
    /// <value>
    ///   The repository is a file stored on the Entrust IdentityGuard server. 
    /// </value>
        FILE,
        
    /// <value>
    ///   The repository is a type that does not fit any of the other 
    ///   classifications. 
    /// </value>
        OTHER,
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   repositoryGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RepositoryGetCallParms {
        
        private string repositoryNameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the repository to retrieve. If nil, then information about 
    ///   the default user repository is retrieved. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string repositoryName {
            get {
                return this.repositoryNameField;
            }
            set {
                this.repositoryNameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialPrintModuleWipe. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialPrintModuleWipeCallParms {
        
        private string nameField;
        
        private SmartCredentialWipeOp opField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Print Module that the wipe operation 
    ///   will be sent to. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialWipeOp
    /// </datatype>
    /// <value>
    ///   The type of wipe operation to be performed by the Smart Credential 
    ///   Print Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialWipeOp op {
            get {
                return this.opField;
            }
            set {
                this.opField = value;
            }
        }
    }
    
    /// <summary>
    ///   The Smart Credential Wipe operation to be performed.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum SmartCredentialWipeOp {
        
    /// <value>
    ///   Wipe the current card on the printer's card reader or the first card 
    ///   in the printer's card hopper. 
    /// </value>
        PRINTER_WIPE,
        
    /// <value>
    ///   Wipe all cards on the printer's card reader and in the printer's card 
    ///   hopper. 
    ///   hopper.
    /// </value>
        PRINTER_WIPE_ALL,
        
    /// <value>
    ///   Wipe the card on the printer's external card reader.
    /// </value>
        EXTERNAL_WIPE,
    }
    
    /// <summary>
    ///   Defines a list of SmartCredentialPrintModuleInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialPrintModuleInfoList {
        
        private SmartCredentialPrintModuleInfo[] smartCredentialPrintModuleInfoField;
        
    /// <datatype>
    ///   SmartCredentialPrintModuleInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a Smart Credential Print Module.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialPrintModuleInfo[] SmartCredentialPrintModuleInfo {
            get {
                return this.smartCredentialPrintModuleInfoField;
            }
            set {
                this.smartCredentialPrintModuleInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a SmartCredential Print Module
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialPrintModuleInfo {
        
        private string nameField;
        
        private string uRLField;
        
        private bool sharedKeyField;
        
        private int connectionTimeoutField;
        
        private bool disableSSLHostnameValidationField;
        
        private bool supportsPrintField;
        
        private bool supportsPrinterEncodeField;
        
        private bool supportsExternalEncodeField;
        
        private bool supportsProximityField;
        
        private bool supportsPrinterWipeField;
        
        private bool supportsExternalWipeField;
        
        private System.Nullable<SmartCredentialWipeState> wipeStateField;
        
        private System.Nullable<System.DateTime> wipeDateField;
        
        private string wipeInfoField;
        
        private System.Nullable<int> wipeCountField;
        
        private string proxyField;
        
        private string descriptionField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Print Module.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A URL of the Smart Credential Print Module.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this Print Module has a shared key.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sharedKey {
            get {
                return this.sharedKeyField;
            }
            set {
                this.sharedKeyField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The connection timeout (in msec) used when when connecting to this 
    ///   Print Module. A value of 0 means infinite timeout. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int connectionTimeout {
            get {
                return this.connectionTimeoutField;
            }
            set {
                this.connectionTimeoutField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if SSL Hostname Validation is disabled when 
    ///   connecting to this Print Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool disableSSLHostnameValidation {
            get {
                return this.disableSSLHostnameValidationField;
            }
            set {
                this.disableSSLHostnameValidationField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this print module supports printing a Smart 
    ///   Credential 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportsPrint {
            get {
                return this.supportsPrintField;
            }
            set {
                this.supportsPrintField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this print module supports encoding a Smart 
    ///   Credential using the Print Module's card reader. 
    ///   operation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportsPrinterEncode {
            get {
                return this.supportsPrinterEncodeField;
            }
            set {
                this.supportsPrinterEncodeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this Print Module supports encoding a Smart 
    ///   Credential using an external card reader. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportsExternalEncode {
            get {
                return this.supportsExternalEncodeField;
            }
            set {
                this.supportsExternalEncodeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this Print Module supports encoding physical 
    ///   access information onto a Smart Credential 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportsProximity {
            get {
                return this.supportsProximityField;
            }
            set {
                this.supportsProximityField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this Print Module supports the card wipe 
    ///   operation using the card reader of the Print Module printer. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportsPrinterWipe {
            get {
                return this.supportsPrinterWipeField;
            }
            set {
                this.supportsPrinterWipeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this Print Module supports the card wipe 
    ///   operation using the external card reader of the Print Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportsExternalWipe {
            get {
                return this.supportsExternalWipeField;
            }
            set {
                this.supportsExternalWipeField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialWipeState
    /// </datatype>
    /// <value>
    ///   The state of the current or last wipe operation performed against this 
    ///   Print Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialWipeState> wipeState {
            get {
                return this.wipeStateField;
            }
            set {
                this.wipeStateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date of the current or last wipe operation performed against this 
    ///   Print Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> wipeDate {
            get {
                return this.wipeDateField;
            }
            set {
                this.wipeDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Status information of the current or last wipe operation performed 
    ///   against this Print Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string wipeInfo {
            get {
                return this.wipeInfoField;
            }
            set {
                this.wipeInfoField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   A count of the number of cards wiped during the current or last wipe 
    ///   operation performed against this Print Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> wipeCount {
            get {
                return this.wipeCountField;
            }
            set {
                this.wipeCountField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the proxy used to communicate with this print module. If 
    ///   not set, a proxy is not used. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string proxy {
            get {
                return this.proxyField;
            }
            set {
                this.proxyField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A description of the Smart Credential Print Module.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the possible states of a wipe operation performed against a 
    ///   Print Module. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum SmartCredentialWipeState {
        
    /// <value>
    ///   A wipe operation has started and is in progress.
    /// </value>
        WIPE_START,
        
    /// <value>
    ///   The last wipe operation completed successfully.
    /// </value>
        WIPE_DONE,
        
    /// <value>
    ///   The last wipe operation failed.
    /// </value>
        WIPE_ERROR,
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialPrintModuleSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialPrintModuleSetCallParms {
        
        private string nameField;
        
        private SmartCredentialPrintModuleParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Print Module to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialPrintModuleParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the modification of the Smart Credential Print 
    ///   Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialPrintModuleParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters that can be set when creating or modifying a 
    ///   Smart Credential Print Module. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialPrintModuleParms {
        
        private string nameField;
        
        private string uRLField;
        
        private string sharedKeyField;
        
        private System.Nullable<int> connectionTimeoutField;
        
        private System.Nullable<bool> disableSSLHostnameValidationField;
        
        private System.Nullable<bool> supportsPrintField;
        
        private System.Nullable<bool> supportsPrinterEncodeField;
        
        private System.Nullable<bool> supportsExternalEncodeField;
        
        private System.Nullable<bool> supportsProximityField;
        
        private System.Nullable<bool> supportsPrinterWipeField;
        
        private System.Nullable<bool> supportsExternalWipeField;
        
        private System.Nullable<SmartCredentialWipeState> wipeStateField;
        
        private System.Nullable<bool> wipeDateField;
        
        private string wipeInfoField;
        
        private System.Nullable<int> wipeCountField;
        
        private string proxyField;
        
        private string descriptionField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When passed in a call to smartCredentialPrintModuleSet, this specifies 
    ///   a new name for the Smart Credential Definition. 
    ///   If this is included in a call to smartCredentialPrintModuleCreate it 
    ///   is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The URL of the Smart Credential Print Module. This value is required 
    ///   for the smartCredentialPrintModuleCreate operation and is optional for 
    ///   the smartCredentialPrintModuleSet operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The shared key used to authenticate when sending requests to this 
    ///   Smart Credential Print Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string sharedKey {
            get {
                return this.sharedKeyField;
            }
            set {
                this.sharedKeyField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The connection timeout (in msec) used when when connecting to this 
    ///   Print Module. A value of 0 means infinite timeout. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> connectionTimeout {
            get {
                return this.connectionTimeoutField;
            }
            set {
                this.connectionTimeoutField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if SSL Hostname Validation is disabled when 
    ///   connecting to this Print Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> disableSSLHostnameValidation {
            get {
                return this.disableSSLHostnameValidationField;
            }
            set {
                this.disableSSLHostnameValidationField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this Print Module supports printing a Smart 
    ///   Credential. If not specified this value defaults to false when creating a 
    ///   Smart Credential Print Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> supportsPrint {
            get {
                return this.supportsPrintField;
            }
            set {
                this.supportsPrintField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this print module supports encoding a Smart 
    ///   Credential using the Print Module's card reader. If supportsPrinterEncode 
    ///   is true, supportsExternalEncode must be false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> supportsPrinterEncode {
            get {
                return this.supportsPrinterEncodeField;
            }
            set {
                this.supportsPrinterEncodeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this Print Module supports encoding a Smart 
    ///   Credential using an external card reader. 
    ///   If suppportsExternalEncode is true, supportsPrinterEncode must be 
    ///   false. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> supportsExternalEncode {
            get {
                return this.supportsExternalEncodeField;
            }
            set {
                this.supportsExternalEncodeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this print module supports encoding physical 
    ///   access information onto a Smart Credential. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> supportsProximity {
            get {
                return this.supportsProximityField;
            }
            set {
                this.supportsProximityField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this Print Module supports the card wipe 
    ///   operation using the card reader of the Print Module printer. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> supportsPrinterWipe {
            get {
                return this.supportsPrinterWipeField;
            }
            set {
                this.supportsPrinterWipeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this Print Module supports the card wipe 
    ///   operation using the external card reader of the Print Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> supportsExternalWipe {
            get {
                return this.supportsExternalWipeField;
            }
            set {
                this.supportsExternalWipeField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialWipeState
    /// </datatype>
    /// <value>
    ///   The state of the current or last wipe operation performed against this 
    ///   Print Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialWipeState> wipeState {
            get {
                return this.wipeStateField;
            }
            set {
                this.wipeStateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   This argument is used by the print module.
    ///   If specified as true, the wipe date of this print module is updated to 
    ///   the current date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> wipeDate {
            get {
                return this.wipeDateField;
            }
            set {
                this.wipeDateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Status information of the current or last wipe operation performed 
    ///   against this Print Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string wipeInfo {
            get {
                return this.wipeInfoField;
            }
            set {
                this.wipeInfoField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   A count of the number of cards wiped during the current or last wipe 
    ///   operation performed against this Print Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> wipeCount {
            get {
                return this.wipeCountField;
            }
            set {
                this.wipeCountField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the proxy used to communicate with this print module. Set 
    ///   the value to an empty string to remove the existing proxy value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string proxy {
            get {
                return this.proxyField;
            }
            set {
                this.proxyField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional description.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialPrintModuleGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialPrintModuleGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Definition to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialPrintModuleDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialPrintModuleDeleteCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Print Module to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialPrintModuleCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialPrintModuleCreateCallParms {
        
        private string nameField;
        
        private SmartCredentialPrintModuleParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Print Module to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialPrintModuleParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the creation of the Smart Credential Print 
    ///   Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialPrintModuleParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialLayoutTemplateList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLayoutTemplateListCallParms {
        
        private System.Nullable<bool> includeDataField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The layout data associated with the returned Smart Credential Layouts 
    ///   is only returned if the includeData parameter is specified with the 
    ///   value true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeData {
            get {
                return this.includeDataField;
            }
            set {
                this.includeDataField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of SmartCredentialLayoutInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLayoutInfoList {
        
        private SmartCredentialLayoutInfo[] smartCredentialLayoutInfoField;
        
    /// <datatype>
    ///   SmartCredentialLayoutInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a Smart Credential Layout.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialLayoutInfo[] SmartCredentialLayoutInfo {
            get {
                return this.smartCredentialLayoutInfoField;
            }
            set {
                this.smartCredentialLayoutInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a Smart Credential Layout
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLayoutInfo {
        
        private string nameField;
        
        private byte[] dataField;
        
        private long versionField;
        
        private string descriptionField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Layout.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The binary data that defines the layout.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   A version counter that is incremented each time this layout is 
    ///   updated. The version value can be used by applications that are caching 
    ///   layout information to detect when the layout has been modified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A description of the Smart Credential Layout.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialLayoutList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLayoutListCallParms {
        
        private System.Nullable<bool> includeDataField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The layout data associated with the returned Smart Credential Layouts 
    ///   is only returned if the includeData parameter is specified with the 
    ///   value true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeData {
            get {
                return this.includeDataField;
            }
            set {
                this.includeDataField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialLayoutSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLayoutSetCallParms {
        
        private string nameField;
        
        private SmartCredentialLayoutParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Layout to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialLayoutParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the modification of the Smart Credential 
    ///   Layout. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialLayoutParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters that can be set when creating or modifying a 
    ///   Smart Credential Layout. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLayoutParms {
        
        private string nameField;
        
        private byte[] dataField;
        
        private string descriptionField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When passed in a call to smartCredentialLayoutSet, this specifies a 
    ///   new name for the Smart Credential Layout. 
    ///   If this is included in a call to smartCredentialLayoutCreate it is 
    ///   ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The binary data that defines this layout.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional description.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialLayoutTemplateGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLayoutTemplateGetCallParms {
        
        private string nameField;
        
        private System.Nullable<bool> includeDataField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Layout to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The layout data associated with this Smart Credential Layout is only 
    ///   returned if the includeData parameter is specified with the value 
    ///   true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeData {
            get {
                return this.includeDataField;
            }
            set {
                this.includeDataField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialLayoutGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLayoutGetCallParms {
        
        private string nameField;
        
        private System.Nullable<bool> includeDataField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Layout to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The layout data associated with this Smart Credential Layout is only 
    ///   returned if the includeData parameter is specified with the value 
    ///   true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeData {
            get {
                return this.includeDataField;
            }
            set {
                this.includeDataField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialLayoutDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLayoutDeleteCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Layout to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialLayoutCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLayoutCreateCallParms {
        
        private string nameField;
        
        private SmartCredentialLayoutParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Layout to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialLayoutParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the creation of the Smart Credential Layout. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialLayoutParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   digitalIdConfigTemplateList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdConfigTemplateListCallParms {
        
        private ManagedCaType typeField;
        
    /// <datatype>
    ///   ManagedCaType
    /// </datatype>
    /// <value>
    ///   Identifies the type of digital id config template; only digital id 
    ///   config templates of the indicated type will be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ManagedCaType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of DigitalIdConfigInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdConfigInfoList {
        
        private DigitalIdConfigInfo[] digitalIdConfigInfoField;
        
    /// <datatype>
    ///   DigitalIdConfigInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a Digital Id Config.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public DigitalIdConfigInfo[] DigitalIdConfigInfo {
            get {
                return this.digitalIdConfigInfoField;
            }
            set {
                this.digitalIdConfigInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a Digital Id Config
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdConfigInfo {
        
        private string nameField;
        
        private string dNFormatField;
        
        private string searchbaseField;
        
        private string managedCAField;
        
        private string categoryField;
        
        private SubjectAltName[] subjectAltNamesField;
        
        private string descriptionField;
        
        private ManagedCaType typeField;
        
        private byte[][] p10TrustedSignerCertificatesField;
        
        private string p10CertStreamPolicyField;
        
        private DigitalIdConfigEntrustSpecificInfo entrustSpecificInfoField;
        
        private DigitalIdConfigMicrosoftSpecificInfo microsoftSpecificInfoField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Digital Id Config.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The DNFormat specifies what the DN of Digital Ids for this Config will 
    ///   look like. 
    ///   For example, "cn=&lt;firstname&gt; &lt;lastname&gt;" or 
    ///   "cn=&lt;uuid&gt;" where &lt;firstname&gt;, &lt;lastname&gt; and &lt;uuid&gt; will 
    ///   be replaced by variable values when the digital Id is created. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DNFormat {
            get {
                return this.dNFormatField;
            }
            set {
                this.dNFormatField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The searchbase of the Digital Id Config.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Searchbase {
            get {
                return this.searchbaseField;
            }
            set {
                this.searchbaseField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Managed CA of the Digital Id Config.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ManagedCA {
            get {
                return this.managedCAField;
            }
            set {
                this.managedCAField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional category of the Digital Id Config.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
    /// <datatype>
    ///   SubjectAltName[]
    /// </datatype>
    /// <value>
    ///   The optional subjectAltNames of the Digital Id Config.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SubjectAltName[] subjectAltNames {
            get {
                return this.subjectAltNamesField;
            }
            set {
                this.subjectAltNamesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A description of the Digital Id Config.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaType
    /// </datatype>
    /// <value>
    ///   Indicates the type of the digital identity. If the type is ENTRUST, 
    ///   then the EntrustSpecificInfo component will be non-null; if the type is 
    ///   MICROSOFT, then the MicrosoftSpecificInfo component will be 
    ///   non-null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ManagedCaType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   Base64Binary[]
    /// </datatype>
    /// <value>
    ///   The optional list of P10 trusted signer certificates of the Digital Id 
    ///   Config. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=false)]
        public byte[][] p10TrustedSignerCertificates {
            get {
                return this.p10TrustedSignerCertificatesField;
            }
            set {
                this.p10TrustedSignerCertificatesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If set, the default P10 certificate stream policy. During a 
    ///   create/recover operation in which P10 certificate requests are provided without 
    ///   explicitly specifying certificate stream policy, this value (when 
    ///   present) is used as the certificate stream policy for each request. 
    ///   For an Entrust CA, this is a certificate definition name; for a 
    ///   Microsoft CA, this is a certificate template common name. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string p10CertStreamPolicy {
            get {
                return this.p10CertStreamPolicyField;
            }
            set {
                this.p10CertStreamPolicyField = value;
            }
        }
        
    /// <datatype>
    ///   DigitalIdConfigEntrustSpecificInfo
    /// </datatype>
    /// <value>
    ///   If set, indicates that this information is for an Entrust digital 
    ///   identity configuration and contains the Entrust specific information. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DigitalIdConfigEntrustSpecificInfo EntrustSpecificInfo {
            get {
                return this.entrustSpecificInfoField;
            }
            set {
                this.entrustSpecificInfoField = value;
            }
        }
        
    /// <datatype>
    ///   DigitalIdConfigMicrosoftSpecificInfo
    /// </datatype>
    /// <value>
    ///   If set, indicates that this information is for a Microsoft digital 
    ///   identity configuration and contains the Microsoft specific information. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DigitalIdConfigMicrosoftSpecificInfo MicrosoftSpecificInfo {
            get {
                return this.microsoftSpecificInfoField;
            }
            set {
                this.microsoftSpecificInfoField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information specific to an Entrust Digital Id config. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdConfigEntrustSpecificInfo {
        
        private string certTypeField;
        
        private string userTypeField;
        
        private string roleField;
        
        private System.Nullable<bool> allGroupsField;
        
        private string[] groupsField;
        
        private ManagedCaVariable[] variablesField;
        
        private System.Nullable<ManagedCaDirectoryMode> directoryModeField;
        
        private System.Nullable<bool> recoverIfExistsField;
        
        private System.Nullable<bool> createIfNotExistsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The cert. type of the Digital Id Config.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CertType {
            get {
                return this.certTypeField;
            }
            set {
                this.certTypeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user type of the Digital Id Config.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The role of the Digital Id Config.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the digital id will belong to all groups in Entrust 
    ///   Security Manager. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allGroups {
            get {
                return this.allGroupsField;
            }
            set {
                this.allGroupsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of Entrust Security Manager groups the digital id will belong 
    ///   to. This list will not be set if allGroups is true. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaVariable[]
    /// </datatype>
    /// <value>
    ///   The optional Managed CA variables of the Digital Id Config.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ManagedCaVariable[] variables {
            get {
                return this.variablesField;
            }
            set {
                this.variablesField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaDirectoryMode
    /// </datatype>
    /// <value>
    ///   The optional directory mode of the Digital Id Config.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ManagedCaDirectoryMode> DirectoryMode {
            get {
                return this.directoryModeField;
            }
            set {
                this.directoryModeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The flag indicating if the operation should recover an existing 
    ///   Digital Id. The flag defaults to true if not specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RecoverIfExists {
            get {
                return this.recoverIfExistsField;
            }
            set {
                this.recoverIfExistsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the operation should add a new Digital Id if one 
    ///   does not exist. 
    ///   The flag defaults to true if not specified.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> CreateIfNotExists {
            get {
                return this.createIfNotExistsField;
            }
            set {
                this.createIfNotExistsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information specific to a Microsoft Digital Id config. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdConfigMicrosoftSpecificInfo {
        
        private MicrosoftCertTemplate[] certTemplatesField;
        
    /// <datatype>
    ///   MicrosoftCertTemplate[]
    /// </datatype>
    /// <value>
    ///   An optional list of Microsoft certificate templates configured for use 
    ///   with the digital identity. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MicrosoftCertTemplate[] certTemplates {
            get {
                return this.certTemplatesField;
            }
            set {
                this.certTemplatesField = value;
            }
        }
    }
    
    /// <summary>
    ///   A Microsoft certificate template.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class MicrosoftCertTemplate {
        
        private string nameField;
        
        private PivContainer pivContainerField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the certificate template.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   PivContainer
    /// </datatype>
    /// <value>
    ///   Identifies the PIV container that the key that is generated for this 
    ///   certificate template is to be stored in. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PivContainer PivContainer {
            get {
                return this.pivContainerField;
            }
            set {
                this.pivContainerField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains filters to constrain which Digital Id Configs 
    ///   are returned by the digitalIdConfigList operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdConfigFilter {
        
        private string managedCAField;
        
        private string categoryField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only Digital Id Configs for the specified Managed CA are 
    ///   returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string managedCA {
            get {
                return this.managedCAField;
            }
            set {
                this.managedCAField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only Digital Id Configs with the specified category. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   digitalIdConfigList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdConfigListCallParms {
        
        private DigitalIdConfigFilter filterField;
        
    /// <datatype>
    ///   DigitalIdConfigFilter
    /// </datatype>
    /// <value>
    ///   If specified, only Digital Id Configs matching the given filter are 
    ///   returned. 
    ///   If not specified, all Digital Id Configs are returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DigitalIdConfigFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   digitalIdConfigSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdConfigSetCallParms {
        
        private string nameField;
        
        private DigitalIdConfigParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Digital Id Config to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   DigitalIdConfigParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the modification of the Digital Id Config. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DigitalIdConfigParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters that can be set when creating or modifying a 
    ///   Digital Id Config. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdConfigParms {
        
        private string nameField;
        
        private string dNFormatField;
        
        private string searchbaseField;
        
        private string managedCAField;
        
        private string categoryField;
        
        private System.Nullable<bool> mergeSubjectAltNamesField;
        
        private System.Nullable<bool> removeSubjectAltNamesField;
        
        private SubjectAltName[] subjectAltNamesField;
        
        private string descriptionField;
        
        private byte[][] p10TrustedSignerCertificatesField;
        
        private string p10CertStreamPolicyField;
        
        private DigitalIdConfigEntrustSpecificParms entrustSpecificParamsField;
        
        private DigitalIdConfigMicrosoftSpecificParms microsoftSpecificParamsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When passed in a call to digitalIdConfigSet, this specifies a new name 
    ///   for the Digital Id Config. If this is included in a call to 
    ///   digitalIdConfigCreate it is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The DNFormat specifies what the DN of Digital Ids for this Config will 
    ///   look like. 
    ///   For example, "cn=&lt;firstname&gt; &lt;lastname&gt;" or 
    ///   "cn=&lt;uuid&gt;" where &lt;firstname&gt;, &lt;lastname&gt; and &lt;uuid&gt; will 
    ///   be replaced by variable values when the digital Id is created. 
    ///   The value is required for a call to digitalIdConfigCreate and optional 
    ///   for a call to digitalIdConfigSet. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DNFormat {
            get {
                return this.dNFormatField;
            }
            set {
                this.dNFormatField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The searchbase for the Digital Id Config.
    ///   The value must be a valid DN. It is required for a call to 
    ///   digitalIdConfigCreate and optional for a call to digitalIdConfigSet. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Searchbase {
            get {
                return this.searchbaseField;
            }
            set {
                this.searchbaseField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Managed CA for the Digital Id Config.
    ///   It is required for a call to digitalIdConfigCreate and optional for a 
    ///   call to digitalIdConfigSet. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ManagedCA {
            get {
                return this.managedCAField;
            }
            set {
                this.managedCAField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional category of the Digital Id Config.
    ///   If an empty string is specified, the existing category is removed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   For the digitalIdConfigSet method, if mergeSubjectAltNames is 
    ///   specified as true then the subjectAltName values specified by the 
    ///   subjectAltNames attribute are added to the existing values instead of replacing 
    ///   the existing values. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> mergeSubjectAltNames {
            get {
                return this.mergeSubjectAltNamesField;
            }
            set {
                this.mergeSubjectAltNamesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   For the digitalIdConfigSet method, if mergeSubjectAltNames is not 
    ///   specified as true and the removeSubjectAltNames attribute is specified as 
    ///   true then the subjectAltName values specified by the subjectAltNames 
    ///   attribute are removed from the existing values. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeSubjectAltNames {
            get {
                return this.removeSubjectAltNamesField;
            }
            set {
                this.removeSubjectAltNamesField = value;
            }
        }
        
    /// <datatype>
    ///   SubjectAltName[]
    /// </datatype>
    /// <value>
    ///   If specified, the subjectAltNames of the Digital Id Config are set to 
    ///   the specified value. For the digitalIdConfigSet method, if 
    ///   mergeSubjectAltNames is specified as true then the specified values are added 
    ///   to the existing values instead of replacing the existing values. If 
    ///   mergeSubjectAltNames is not specified as true and removeSubjectAltNames 
    ///   is specified as true then the specified subjectAltNames are removed 
    ///   from the existing values. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SubjectAltName[] subjectAltNames {
            get {
                return this.subjectAltNamesField;
            }
            set {
                this.subjectAltNamesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional description.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
    /// <datatype>
    ///   Base64Binary[]
    /// </datatype>
    /// <value>
    ///   The optional list of P10 trusted signer certificates to use with this 
    ///   Digital Id Config. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=false)]
        public byte[][] p10TrustedSignerCertificates {
            get {
                return this.p10TrustedSignerCertificatesField;
            }
            set {
                this.p10TrustedSignerCertificatesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If set, the default P10 certificate stream policy. During a 
    ///   create/recover operation in which P10 certificate requests are provided without 
    ///   explicitly specifying certificate stream policy, this value (when 
    ///   present) is used as the certificate stream policy for each request. 
    ///   For an Entrust CA, this is a certificate definition name; for a 
    ///   Microsoft CA, this is a certificate template common name. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string p10CertStreamPolicy {
            get {
                return this.p10CertStreamPolicyField;
            }
            set {
                this.p10CertStreamPolicyField = value;
            }
        }
        
    /// <datatype>
    ///   DigitalIdConfigEntrustSpecificParms
    /// </datatype>
    /// <value>
    ///   If set, indicates that these parameters are for an Entrust digital 
    ///   identity configuration and contains the Entrust specific parameters. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DigitalIdConfigEntrustSpecificParms EntrustSpecificParams {
            get {
                return this.entrustSpecificParamsField;
            }
            set {
                this.entrustSpecificParamsField = value;
            }
        }
        
    /// <datatype>
    ///   DigitalIdConfigMicrosoftSpecificParms
    /// </datatype>
    /// <value>
    ///   If set, indicates that these parameters are for an Microsoft digital 
    ///   identity configuration and contains the Microsoft specific parameters. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public DigitalIdConfigMicrosoftSpecificParms MicrosoftSpecificParams {
            get {
                return this.microsoftSpecificParamsField;
            }
            set {
                this.microsoftSpecificParamsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the Entrust specific parameters that can be set when creating 
    ///   or modifying an Entrust Digital Id Config. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdConfigEntrustSpecificParms {
        
        private string certTypeField;
        
        private string userTypeField;
        
        private string roleField;
        
        private System.Nullable<bool> allGroupsField;
        
        private System.Nullable<bool> addGroupsField;
        
        private System.Nullable<bool> removeGroupsField;
        
        private string[] groupsField;
        
        private System.Nullable<bool> mergeVariablesField;
        
        private System.Nullable<bool> removeVariablesField;
        
        private ManagedCaVariable[] variablesField;
        
        private System.Nullable<ManagedCaDirectoryMode> directoryModeField;
        
        private System.Nullable<bool> clearDirectoryModeField;
        
        private System.Nullable<bool> recoverIfExistsField;
        
        private System.Nullable<bool> createIfNotExistsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The cert. type for the Digital Id Config.
    ///   It is required for a call to digitalIdConfigCreate and optional for a 
    ///   call to digitalIdConfigSet. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CertType {
            get {
                return this.certTypeField;
            }
            set {
                this.certTypeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user type for the Digital Id Config.
    ///   It is required for a call to digitalIdConfigCreate and optional for a 
    ///   call to digitalIdConfigSet. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The role for the Digital Id Config.
    ///   It is required for a call to digitalIdConfigCreate and optional for a 
    ///   call to digitalIdConfigSet. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the digital id will belong to all groups in Entrust 
    ///   Security Manager. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allGroups {
            get {
                return this.allGroupsField;
            }
            set {
                this.allGroupsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the groups specified in the groups argument are added 
    ///   to the existing values. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> addGroups {
            get {
                return this.addGroupsField;
            }
            set {
                this.addGroupsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the groups specified in the groups argument are 
    ///   removed from the existing values. This argument is ignored if addGroups is 
    ///   specified as true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeGroups {
            get {
                return this.removeGroupsField;
            }
            set {
                this.removeGroupsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of Entrust Security Manager groups the digital id will belong 
    ///   to. This argument is ignored if allGroups is specified as true. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   For the digitalIdConfigSet method, if mergeVariables is specified as 
    ///   true then the variable values specified by the variables attribute are 
    ///   added to the existing values instead of replacing the existing 
    ///   values. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> mergeVariables {
            get {
                return this.mergeVariablesField;
            }
            set {
                this.mergeVariablesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   For the digitalIdConfigSet method, if mergeVariables is not specified 
    ///   as true and the removeVariables attribute is specified as true then 
    ///   the variable values specified by the variables attribute are removed 
    ///   from the existing values. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeVariables {
            get {
                return this.removeVariablesField;
            }
            set {
                this.removeVariablesField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaVariable[]
    /// </datatype>
    /// <value>
    ///   If specified, the Managed CA Variables of the Digital Id Config are 
    ///   set to the specified value. For the digitalIdConfigSet method, if 
    ///   mergeVariables is specified as true then the specified values are added to 
    ///   the existing values instead of replacing the values. If 
    ///   mergeVariables is not specified as true and removeVariables is specified as true 
    ///   then the specified Managed CA Variables are removed from the existing 
    ///   values. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ManagedCaVariable[] variables {
            get {
                return this.variablesField;
            }
            set {
                this.variablesField = value;
            }
        }
        
    /// <datatype>
    ///   ManagedCaDirectoryMode
    /// </datatype>
    /// <value>
    ///   If specified, the directory mode of the Digital Id Config is set to 
    ///   the specified value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ManagedCaDirectoryMode> DirectoryMode {
            get {
                return this.directoryModeField;
            }
            set {
                this.directoryModeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   For the digitalIdConfigSet method, if DirectoryMode is not specified 
    ///   and this attribute is specified as true, then the directory mode of 
    ///   the Digital Id Config is cleared. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ClearDirectoryMode {
            get {
                return this.clearDirectoryModeField;
            }
            set {
                this.clearDirectoryModeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the operation should recover an existing Digital 
    ///   Id. The flag defaults to true if not specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RecoverIfExists {
            get {
                return this.recoverIfExistsField;
            }
            set {
                this.recoverIfExistsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the operation should add a new Digital Id if one 
    ///   does not exist. 
    ///   The flag defaults to true if not specified.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> CreateIfNotExists {
            get {
                return this.createIfNotExistsField;
            }
            set {
                this.createIfNotExistsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the Microsoft specific parameters that can be set when 
    ///   creating or modifying a Microsoft Digital Id Config. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdConfigMicrosoftSpecificParms {
        
        private MicrosoftCertTemplate[] certTemplatesField;
        
        private System.Nullable<bool> mergeCertTemplatesField;
        
        private System.Nullable<bool> removeCertTemplatesField;
        
    /// <datatype>
    ///   MicrosoftCertTemplate[]
    /// </datatype>
    /// <value>
    ///   An optional list of Microsoft certificate templates configured for use 
    ///   with the digital identity. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MicrosoftCertTemplate[] certTemplates {
            get {
                return this.certTemplatesField;
            }
            set {
                this.certTemplatesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   When used in a call to modify a digital identity configuration, if 
    ///   mergeCertTemplates is specified as true then the certificate templates 
    ///   specified in the CertTemplates attribute are merged with the existing 
    ///   certificate templates instead of replacing them. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> mergeCertTemplates {
            get {
                return this.mergeCertTemplatesField;
            }
            set {
                this.mergeCertTemplatesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   When used in a call to modify a digital identity configuration, if 
    ///   mergeCertTemplates is not specified as true and the mergeCertTemplates 
    ///   attribute is specified as true then the certificate templates 
    ///   identified by the CertTemplates attribute are removed from the existing 
    ///   certificate templates. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeCertTemplates {
            get {
                return this.removeCertTemplatesField;
            }
            set {
                this.removeCertTemplatesField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   digitalIdConfigGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdConfigGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Digital Id Config to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   digitalIdConfigDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdConfigDeleteCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Digital Id Config to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   digitalIdConfigCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DigitalIdConfigCreateCallParms {
        
        private string nameField;
        
        private DigitalIdConfigParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Digital Id Config to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   DigitalIdConfigParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the creation of the Digital Id Config. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DigitalIdConfigParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of SmartCredentialGraphicInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialGraphicInfoList {
        
        private SmartCredentialGraphicInfo[] smartCredentialGraphicInfoField;
        
    /// <datatype>
    ///   SmartCredentialGraphicInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a Smart Credential Graphic.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialGraphicInfo[] SmartCredentialGraphicInfo {
            get {
                return this.smartCredentialGraphicInfoField;
            }
            set {
                this.smartCredentialGraphicInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a Smart Credential Graphic
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialGraphicInfo {
        
        private string nameField;
        
        private byte[] dataField;
        
        private byte[] secondaryDataField;
        
        private string descriptionField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Graphic.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The binary data that defines the graphic.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   Binary data that defines the secondary graphic.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] secondaryData {
            get {
                return this.secondaryDataField;
            }
            set {
                this.secondaryDataField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A description of the Smart Credential Graphic.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialGraphicList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialGraphicListCallParms {
        
        private System.Nullable<bool> includeDataField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The graphic data associated with the Smart Credential Graphics is only 
    ///   returned if the includeData parameter is specified with the value 
    ///   true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeData {
            get {
                return this.includeDataField;
            }
            set {
                this.includeDataField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialGraphicSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialGraphicSetCallParms {
        
        private string nameField;
        
        private SmartCredentialGraphicParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Graphic to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialGraphicParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the modification of the Smart Credential 
    ///   Graphic. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialGraphicParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters that can be set when creating or modifying a 
    ///   Smart Credential Graphic. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialGraphicParms {
        
        private string nameField;
        
        private byte[] dataField;
        
        private byte[] secondaryDataField;
        
        private string descriptionField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When passed in a call to smartCredentialGraphicSet, this specifies a 
    ///   new name for the Smart Credential Graphic. If this is included in a 
    ///   call to smartCredentialGraphicCreate it is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The binary data that defines this graphic.
    ///   This value is required for the smartCredentialGraphicCreate operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The binary data that defines an optional secondary graphic for this 
    ///   object. If a 0 byte value is specified for the 
    ///   smartCredentialGraphicSet operation the existing value is removed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] secondaryData {
            get {
                return this.secondaryDataField;
            }
            set {
                this.secondaryDataField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional description.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialGraphicGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialGraphicGetCallParms {
        
        private string nameField;
        
        private System.Nullable<bool> includeDataField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Graphic to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The graphic data associated with the Smart Credential Graphic is only 
    ///   returned if the includeData parameter is specified with the value 
    ///   true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeData {
            get {
                return this.includeDataField;
            }
            set {
                this.includeDataField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialGraphicDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialGraphicDeleteCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Graphic to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialGraphicCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialGraphicCreateCallParms {
        
        private string nameField;
        
        private SmartCredentialGraphicParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Graphic to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialGraphicParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the creation of the Smart Credential Graphic. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialGraphicParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of BiometricVendorInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class BiometricVendorInfoList {
        
        private BiometricVendorInfo[] biometricVendorInfoField;
        
    /// <datatype>
    ///   BiometricVendorInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a Biometric Vendor.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public BiometricVendorInfo[] BiometricVendorInfo {
            get {
                return this.biometricVendorInfoField;
            }
            set {
                this.biometricVendorInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a Biometric Vendor.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class BiometricVendorInfo {
        
        private string idField;
        
        private string nameField;
        
        private string vendorManufacturerField;
        
        private BiometricType typeField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The id of the Biometric Vendor as defined in Entrust IdentityGuard. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Biometric Vendor as defined in Entrust IdentityGuard. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Biometric Vendor manufacturer as defined by the 
    ///   vendor. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vendorManufacturer {
            get {
                return this.vendorManufacturerField;
            }
            set {
                this.vendorManufacturerField = value;
            }
        }
        
    /// <datatype>
    ///   BiometricType
    /// </datatype>
    /// <value>
    ///   The type of the Biometric Vendor.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BiometricType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   biometricVendorGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class BiometricVendorGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Biometric Vendor to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of RiskEngineInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RiskEngineInfoList {
        
        private RiskEngineInfo[] riskEngineInfoField;
        
    /// <datatype>
    ///   RiskEngineInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a Risk Engine.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public RiskEngineInfo[] RiskEngineInfo {
            get {
                return this.riskEngineInfoField;
            }
            set {
                this.riskEngineInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a Risk Engine.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RiskEngineInfo {
        
        private string labelField;
        
        private string nameField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The label of the Risk Engine.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Risk Engine.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   riskEngineGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RiskEngineGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Risk Engine to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of ProxyInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ProxyInfoList {
        
        private ProxyInfo[] proxyInfoField;
        
    /// <datatype>
    ///   ProxyInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a Proxy.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ProxyInfo[] ProxyInfo {
            get {
                return this.proxyInfoField;
            }
            set {
                this.proxyInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a Proxy.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ProxyInfo {
        
        private string nameField;
        
        private string[] uRLField;
        
        private byte[] profileField;
        
        private string passwordField;
        
        private int connectionTimeoutField;
        
        private bool disableSSLHostnameValidationField;
        
        private string descriptionField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Proxy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The urls of the Proxy.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The profile used to authenticate to the Proxy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] profile {
            get {
                return this.profileField;
            }
            set {
                this.profileField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The password used to authenticate to the Proxy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The connection timeout (in msec) used when when connecting to this 
    ///   Proxy. A value of 0 means infinite timeout. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int connectionTimeout {
            get {
                return this.connectionTimeoutField;
            }
            set {
                this.connectionTimeoutField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if SSL Hostname Validation is disabled when 
    ///   connecting to this Proxy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool disableSSLHostnameValidation {
            get {
                return this.disableSSLHostnameValidationField;
            }
            set {
                this.disableSSLHostnameValidationField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A description of the Proxy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to proxyList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ProxyListCallParms {
        
        private System.Nullable<bool> includeProfileField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The profile data associated with each Proxy is only returned if the 
    ///   includeProfile parameter is specified with the value true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeProfile {
            get {
                return this.includeProfileField;
            }
            set {
                this.includeProfileField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to ProxySet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ProxySetCallParms {
        
        private string nameField;
        
        private ProxyParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Proxy to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   ProxyParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the modification of the Proxy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ProxyParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters that can be set when creating or modifying a 
    ///   Proxy. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ProxyParms {
        
        private string nameField;
        
        private System.Nullable<bool> addURLField;
        
        private System.Nullable<bool> removeURLField;
        
        private string[] uRLField;
        
        private byte[] profileField;
        
        private string passwordField;
        
        private System.Nullable<int> connectionTimeoutField;
        
        private System.Nullable<bool> disableSSLHostnameValidationField;
        
        private string descriptionField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When passed in a call to proxySet, this specifies a new name for the 
    ///   Proxy. 
    ///   If this is included in a call to proxyCreate it is ignored.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, the values specified in URL are added to the 
    ///   existing values. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> addURL {
            get {
                return this.addURLField;
            }
            set {
                this.addURLField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, the values specified in URL are removed from the 
    ///   existing values. 
    ///   This attribute cannot be specified as true for the proxyCreate 
    ///   operation. 
    ///   If specified as true for the proxySet operation it is ignored if 
    ///   addURL is also specified as true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeURL {
            get {
                return this.removeURLField;
            }
            set {
                this.removeURLField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The urls of the Proxy. If addURL is specified as true, the specified 
    ///   values are added to existing values. If removeURL is specified as 
    ///   true, the specified values are removed from the existing values. 
    ///   This value is required for calls to proxyCreate.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The profile used to authenticate to the Proxy. This value is required 
    ///   for calls to proxyCreate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] profile {
            get {
                return this.profileField;
            }
            set {
                this.profileField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The password used to authenticate to the Proxy. This value is required 
    ///   for calls to proxyCreate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The connection timeout (in msec) used when when connecting to this 
    ///   Proxy. A value of 0 means infinite timeout. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> connectionTimeout {
            get {
                return this.connectionTimeoutField;
            }
            set {
                this.connectionTimeoutField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if SSL Hostname Validation is disabled when 
    ///   connecting to this Proxy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> disableSSLHostnameValidation {
            get {
                return this.disableSSLHostnameValidationField;
            }
            set {
                this.disableSSLHostnameValidationField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional description.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to proxyGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ProxyGetCallParms {
        
        private string nameField;
        
        private System.Nullable<bool> includeProfileField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Proxy to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The profile associated with this Proxy is only returned if the 
    ///   includeProfile parameter is specified with the value true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeProfile {
            get {
                return this.includeProfileField;
            }
            set {
                this.includeProfileField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   proxyDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ProxyDeleteCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Proxy to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   proxyCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ProxyCreateCallParms {
        
        private string nameField;
        
        private ProxyParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Proxy to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   ProxyParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the creation of the Proxy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ProxyParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of PACSInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PACSInfoList {
        
        private PACSInfo[] pACSInfoField;
        
    /// <datatype>
    ///   PACSInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a PACS.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public PACSInfo[] PACSInfo {
            get {
                return this.pACSInfoField;
            }
            set {
                this.pACSInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a Physical Access Control System (PACS). 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PACSInfo {
        
        private string nameField;
        
        private string uRLField;
        
        private byte[] profileField;
        
        private string passwordField;
        
        private string proxyField;
        
        private int connectionTimeoutField;
        
        private bool disableSSLHostnameValidationField;
        
        private string[] appletsField;
        
        private string descriptionField;
        
        private string defaultAccessRightsField;
        
        private long versionField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the PACS.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The url of the PACS.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The profile used to authenticate to the PACS.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] profile {
            get {
                return this.profileField;
            }
            set {
                this.profileField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The password used to authenticate to the PACS.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The proxy used to communicate with this PACS system. The value will be 
    ///   null if a proxy is not defined. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string proxy {
            get {
                return this.proxyField;
            }
            set {
                this.proxyField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The connection timeout (in msec) used when when connecting to this 
    ///   PACS. A value of 0 means infinite timeout. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int connectionTimeout {
            get {
                return this.connectionTimeoutField;
            }
            set {
                this.connectionTimeoutField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if SSL Hostname Validation is disabled when 
    ///   connecting to this PACS. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool disableSSLHostnameValidation {
            get {
                return this.disableSSLHostnameValidationField;
            }
            set {
                this.disableSSLHostnameValidationField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   This attribute specifies types of applets that will be published to 
    ///   this PACS. An empty list specifies that all applet types that support 
    ///   PACS (PIV, PROXIMITY and DESFIRE) will be published. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] applets {
            get {
                return this.appletsField;
            }
            set {
                this.appletsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A description of the PACS.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The default access rights sent to the PACS when registering a smart 
    ///   credential. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string defaultAccessRights {
            get {
                return this.defaultAccessRightsField;
            }
            set {
                this.defaultAccessRightsField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   A version counter that is incremented each time the PACS is updated. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to pacsList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PACSListCallParms {
        
        private System.Nullable<bool> includeProfileField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The profile data associated with each PACS is only returned if the 
    ///   includeProfile parameter is specified with the value true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeProfile {
            get {
                return this.includeProfileField;
            }
            set {
                this.includeProfileField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to PACSSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PACSSetCallParms {
        
        private string nameField;
        
        private PACSParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the PACS to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   PACSParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the modification of the PACS.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PACSParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters that can be set when creating or modifying a 
    ///   PACS. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PACSParms {
        
        private string nameField;
        
        private string uRLField;
        
        private byte[] profileField;
        
        private string passwordField;
        
        private string proxyField;
        
        private System.Nullable<int> connectionTimeoutField;
        
        private System.Nullable<bool> disableSSLHostnameValidationField;
        
        private string[] appletsField;
        
        private System.Nullable<bool> addAppletsField;
        
        private System.Nullable<bool> removeAppletsField;
        
        private string descriptionField;
        
        private string defaultAccessRightsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When passed in a call to pacsSet, this specifies a new name for the 
    ///   PACS. 
    ///   If this is included in a call to pacsCreate it is ignored.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The url of the PACS.
    ///   This value is required for calls to pacsCreate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The profile used to authenticate to the PACS. This value is required 
    ///   for calls to pacsCreate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] profile {
            get {
                return this.profileField;
            }
            set {
                this.profileField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The password used to authenticate to the PACS. This value is required 
    ///   for calls to pacsCreate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the proxy used to communicate with this PACS. Specify an 
    ///   empty string to remove the existing value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string proxy {
            get {
                return this.proxyField;
            }
            set {
                this.proxyField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The connection timeout (in msec) used when when connecting to this 
    ///   PACS. A value of 0 means infinite timeout. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> connectionTimeout {
            get {
                return this.connectionTimeoutField;
            }
            set {
                this.connectionTimeoutField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if SSL Hostname Validation is disabled when 
    ///   connecting to this PACS. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> disableSSLHostnameValidation {
            get {
                return this.disableSSLHostnameValidationField;
            }
            set {
                this.disableSSLHostnameValidationField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   This attribute specifies types of applets that will be published to 
    ///   this PACS. An empty list specifies that all applet types that support 
    ///   PACS (PIV, PROXIMITY and DESFIRE) will be published. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] applets {
            get {
                return this.appletsField;
            }
            set {
                this.appletsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, the specified applets are added to the existing 
    ///   values. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> addApplets {
            get {
                return this.addAppletsField;
            }
            set {
                this.addAppletsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, the specified applets are removed from the 
    ///   existing values. This attribute is ignored for the pacsCreate operation or 
    ///   if the addApplets attribute is specified as true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeApplets {
            get {
                return this.removeAppletsField;
            }
            set {
                this.removeAppletsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional description.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The default access rights sent to the PACS when registering a smart 
    ///   credential. If an empty string value is specified, the existing value 
    ///   is removed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string defaultAccessRights {
            get {
                return this.defaultAccessRightsField;
            }
            set {
                this.defaultAccessRightsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to pacsGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PACSGetCallParms {
        
        private string nameField;
        
        private System.Nullable<bool> includeProfileField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the PACS to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The profile associated with this PACS is only returned if the 
    ///   includeProfile parameter is specified with the value true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeProfile {
            get {
                return this.includeProfileField;
            }
            set {
                this.includeProfileField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to pacsDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PACSDeleteCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the PACS to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to pacsCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PACSCreateCallParms {
        
        private string nameField;
        
        private PACSParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the PACS to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   PACSParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the creation of the PACS.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PACSParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialAppletTemplateList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialAppletTemplateListCallParms {
        
        private System.Nullable<bool> includeDataField;
        
        private System.Nullable<bool> includeFileSettingsField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The applet data associated with the Smart Credential Applet Templates 
    ///   is only returned if the includeData parameter is specified with the 
    ///   value true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeData {
            get {
                return this.includeDataField;
            }
            set {
                this.includeDataField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The applet file settings associated with the Smart Credential Applet 
    ///   Templates are only returned if the includeFileSettings parameter is 
    ///   specified with the value true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeFileSettings {
            get {
                return this.includeFileSettingsField;
            }
            set {
                this.includeFileSettingsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialAppletTemplateGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialAppletTemplateGetCallParms {
        
        private string nameField;
        
        private System.Nullable<bool> includeDataField;
        
        private System.Nullable<bool> includeFileSettingsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Applet Template to retrieve. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The applet data associated with this Smart Credential Applet Template 
    ///   is only returned if the includeData parameter is specified with the 
    ///   value true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeData {
            get {
                return this.includeDataField;
            }
            set {
                this.includeDataField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The applet file settings associated with this Smart Credential Applet 
    ///   Template are only returned if the includeFileSettings parameter is 
    ///   specified with the value true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeFileSettings {
            get {
                return this.includeFileSettingsField;
            }
            set {
                this.includeFileSettingsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of SmartCredentialAppletInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialAppletInfoList {
        
        private SmartCredentialAppletInfo[] smartCredentialAppletInfoField;
        
    /// <datatype>
    ///   SmartCredentialAppletInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a Smart Credential Applet.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialAppletInfo[] SmartCredentialAppletInfo {
            get {
                return this.smartCredentialAppletInfoField;
            }
            set {
                this.smartCredentialAppletInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a Smart Credential Applet
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialAppletInfo {
        
        private string nameField;
        
        private string typeField;
        
        private byte[] dataField;
        
        private byte[] masterKeyField;
        
        private string masterKeyPasswordField;
        
        private string masterKeyTypeField;
        
        private NameValue[] configSettingsField;
        
        private FileSetting[] fileSettingsField;
        
        private bool supportsPACSField;
        
        private long versionField;
        
        private string descriptionField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Applet.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The type of the Smart Credential Applet.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The software that defines the applet.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The master key used for DESFIRE applets.
    ///   This value must be specified for type DESFIRE and must not be 
    ///   specified for other types. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] masterKey {
            get {
                return this.masterKeyField;
            }
            set {
                this.masterKeyField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional password used to access the master key. This value can 
    ///   only be specified if a master key is specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string masterKeyPassword {
            get {
                return this.masterKeyPasswordField;
            }
            set {
                this.masterKeyPasswordField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional type used to describe the master key. This value can only 
    ///   be specified if a master key is specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string masterKeyType {
            get {
                return this.masterKeyTypeField;
            }
            set {
                this.masterKeyTypeField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   Configuration settings for this applet.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] configSettings {
            get {
                return this.configSettingsField;
            }
            set {
                this.configSettingsField = value;
            }
        }
        
    /// <datatype>
    ///   FileSetting[]
    /// </datatype>
    /// <value>
    ///   File settings for this applet.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public FileSetting[] fileSettings {
            get {
                return this.fileSettingsField;
            }
            set {
                this.fileSettingsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if information about this applet can be published to 
    ///   a PACS. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportsPACS {
            get {
                return this.supportsPACSField;
            }
            set {
                this.supportsPACSField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   A version counter that is incremented each time this applet is 
    ///   updated. The version value can be used by applications that are caching 
    ///   applet information to detect when the applet has been modified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A description of the Smart Credential Applet.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   A name/file pair.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class FileSetting {
        
        private string nameField;
        
        private string fileNameField;
        
        private byte[] valueField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the setting.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The file name the file settings were loaded from.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The value of the setting.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialAppletList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialAppletListCallParms {
        
        private System.Nullable<bool> includeDataField;
        
        private System.Nullable<bool> includeMasterKeyField;
        
        private System.Nullable<bool> includeFileSettingsField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The applet data associated with the Smart Credential Applets is only 
    ///   returned if the includeData parameter is specified with the value 
    ///   true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeData {
            get {
                return this.includeDataField;
            }
            set {
                this.includeDataField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The applet master key associated with the Smart Credential Applets is 
    ///   only returned if the includeMasterKey parameter is specified with the 
    ///   value true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeMasterKey {
            get {
                return this.includeMasterKeyField;
            }
            set {
                this.includeMasterKeyField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The applet file settings associated with the Smart Credential Applets 
    ///   are only returned if the includeFileSettings parameter is specified 
    ///   with the value true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeFileSettings {
            get {
                return this.includeFileSettingsField;
            }
            set {
                this.includeFileSettingsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialAppletSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialAppletSetCallParms {
        
        private string nameField;
        
        private SmartCredentialAppletParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Applet to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialAppletParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the modification of the Smart Credential 
    ///   Applet. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialAppletParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters that can be set when creating or modifying a 
    ///   Smart Credential Applet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialAppletParms {
        
        private string nameField;
        
        private string typeField;
        
        private byte[] dataField;
        
        private byte[] masterKeyField;
        
        private string masterKeyPasswordField;
        
        private string masterKeyTypeField;
        
        private System.Nullable<bool> addConfigSettingsField;
        
        private NameValue[] configSettingsField;
        
        private string[] removeConfigSettingsField;
        
        private System.Nullable<bool> addFileSettingsField;
        
        private FileSetting[] fileSettingsField;
        
        private string[] removeFileSettingsField;
        
        private string descriptionField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When passed in a call to smartCredentialAppletSet, this specifies a 
    ///   new name for the Smart Credential applet. If this is included in a call 
    ///   to smartCredentialAppletCreate it is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The type of the smart credential applet.
    ///   This value is required for calls to smartCredentialAppletCreate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The binary data that defines this applet.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The master key used for DESFIRE applets.
    ///   This value must be specified for type DESFIRE and must not be 
    ///   specified for other types. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] masterKey {
            get {
                return this.masterKeyField;
            }
            set {
                this.masterKeyField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional password used to access the master key. This value can 
    ///   only be specified if a master key is specified. Specify an empty string 
    ///   to remove the current value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string masterKeyPassword {
            get {
                return this.masterKeyPasswordField;
            }
            set {
                this.masterKeyPasswordField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The optional type used to describe the master key. This value can only 
    ///   be specified if a master key is specified. Specify an empty string 
    ///   to remove the current value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string masterKeyType {
            get {
                return this.masterKeyTypeField;
            }
            set {
                this.masterKeyTypeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the values specified in configSettings are added to 
    ///   the existing value. Otherwise the existing values are replaced. This 
    ///   property is ignored for the userSmartCredentialAppletCreate operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> addConfigSettings {
            get {
                return this.addConfigSettingsField;
            }
            set {
                this.addConfigSettingsField = value;
            }
        }
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   Configuration settings for this applet.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] configSettings {
            get {
                return this.configSettingsField;
            }
            set {
                this.configSettingsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, this value specifies a list of config setting values to 
    ///   be removed. 
    ///   This setting is ignored for the userSmartCredentialAppletCreate 
    ///   operation. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] removeConfigSettings {
            get {
                return this.removeConfigSettingsField;
            }
            set {
                this.removeConfigSettingsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the values specified in fileSettings are added to the 
    ///   existing value. Otherwise the existing values are replaced. This 
    ///   property is ignored for the userSmartCredentialAppletCreate operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> addFileSettings {
            get {
                return this.addFileSettingsField;
            }
            set {
                this.addFileSettingsField = value;
            }
        }
        
    /// <datatype>
    ///   FileSetting[]
    /// </datatype>
    /// <value>
    ///   File settings for this applet.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public FileSetting[] fileSettings {
            get {
                return this.fileSettingsField;
            }
            set {
                this.fileSettingsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, this value specifies a list of file setting values to be 
    ///   removed. 
    ///   This setting is ignored for the userSmartCredentialAppletCreate 
    ///   operation. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] removeFileSettings {
            get {
                return this.removeFileSettingsField;
            }
            set {
                this.removeFileSettingsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional description.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialAppletGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialAppletGetCallParms {
        
        private string nameField;
        
        private System.Nullable<bool> includeDataField;
        
        private System.Nullable<bool> includeMasterKeyField;
        
        private System.Nullable<bool> includeFileSettingsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Applet to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The applet data associated with this Smart Credential Applet is only 
    ///   returned if the includeData parameter is specified with the value 
    ///   true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeData {
            get {
                return this.includeDataField;
            }
            set {
                this.includeDataField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The applet master key associated with this Smart Credential Applet is 
    ///   only returned if the includeMasterKey parameter is specified with the 
    ///   value true 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeMasterKey {
            get {
                return this.includeMasterKeyField;
            }
            set {
                this.includeMasterKeyField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The applet file settings associated with this Smart Credential Applet 
    ///   are only returned if the includeFileSettings parameter is specified 
    ///   with the value true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> includeFileSettings {
            get {
                return this.includeFileSettingsField;
            }
            set {
                this.includeFileSettingsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialAppletDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialAppletDeleteCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Applet to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialAppletCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialAppletCreateCallParms {
        
        private string nameField;
        
        private SmartCredentialAppletParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Applet to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialAppletParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the creation of the Smart Credential Applet. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialAppletParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of UserDeliveryInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDeliveryInfoList {
        
        private UserDeliveryInfo[] userDeliveryInfoField;
        
    /// <datatype>
    ///   UserDeliveryInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a User Delivery.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public UserDeliveryInfo[] UserDeliveryInfo {
            get {
                return this.userDeliveryInfoField;
            }
            set {
                this.userDeliveryInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a User Delivery
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDeliveryInfo {
        
        private string labelField;
        
        private string nameField;
        
        private string typeField;
        
        private string[] requiredVariablesField;
        
        private string deliveryTypeField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The label of the User Delivery.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the User Delivery.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A string indicating the type of the User Delivery. Deliveries with the 
    ///   type UNBLOCK can be used with the userSmartCredentialUnblock 
    ///   operation. 
    ///   Deliveries with other types can be used with the 
    ///   userSmartCredentialDeliver operation. 
    ///   Defined types include PIN, UNBLOCK and MISC although the type can be 
    ///   any value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of enrollment variables required for this delivery mechanism. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] requiredVariables {
            get {
                return this.requiredVariablesField;
            }
            set {
                this.requiredVariablesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A string indicating the delivery type of the User Delivery. Values 
    ///   known to Entrust IdentityGuard include EMAIL and SMS. 
    ///   A custom delivery mechanism may return any value.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string deliveryType {
            get {
                return this.deliveryTypeField;
            }
            set {
                this.deliveryTypeField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userDeliveryGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserDeliveryGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the User Delivery to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of SmartCredentialDeliveryInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDeliveryInfoList {
        
        private SmartCredentialDeliveryInfo[] smartCredentialDeliveryInfoField;
        
    /// <datatype>
    ///   SmartCredentialDeliveryInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a Smart Credential Delivery.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialDeliveryInfo[] SmartCredentialDeliveryInfo {
            get {
                return this.smartCredentialDeliveryInfoField;
            }
            set {
                this.smartCredentialDeliveryInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a Smart Credential Delivery
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDeliveryInfo {
        
        private string labelField;
        
        private string nameField;
        
        private string typeField;
        
        private string[] requiredVariablesField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The label of the Smart Credential Delivery.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Delivery.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A string indicating the type of the Smart Credential Delivery. 
    ///   Deliveries with the type UNBLOCK can be used with the 
    ///   userSmartCredentialUnblock operation. 
    ///   Deliveries with other types can be used with the 
    ///   userSmartCredentialDeliver operation. 
    ///   Defined types include PIN, UNBLOCK and MISC although the type can be 
    ///   any value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of enrollment variables required for this delivery mechanism. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] requiredVariables {
            get {
                return this.requiredVariablesField;
            }
            set {
                this.requiredVariablesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialDeliveryGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDeliveryGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Delivery to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialVariableSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialVariableSetCallParms {
        
        private string definitionField;
        
        private string variableField;
        
        private SmartCredentialVariableParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Definition containing the variable to 
    ///   update. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string definition {
            get {
                return this.definitionField;
            }
            set {
                this.definitionField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Variable to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string variable {
            get {
                return this.variableField;
            }
            set {
                this.variableField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the modification of the Smart Credential 
    ///   Variable. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialVariableParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a Smart Credential Variable.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialVariableParms {
        
        private System.Nullable<SmartCredentialVariableType> typeField;
        
        private System.Nullable<bool> removeRestrictionsField;
        
        private SmartCredentialVariableRestrictions restrictionsField;
        
        private System.Nullable<bool> removeConversionField;
        
        private System.Nullable<SmartCredentialVariableConversionType> conversionField;
        
        private System.Nullable<bool> removeOptionsField;
        
        private SmartCredentialVariableOption[] optionsField;
        
        private System.Nullable<bool> removeDefaultValueField;
        
        private SmartCredentialVariableDefault defaultValueField;
        
        private System.Nullable<bool> requiredField;
        
        private System.Nullable<bool> removeGeneratedField;
        
        private SmartCredentialVariableGenerated generatedField;
        
        private System.Nullable<bool> displayableField;
        
        private System.Nullable<bool> modifiableField;
        
        private System.Nullable<bool> searchableField;
        
        private System.Nullable<bool> privateVariableField;
        
        private System.Nullable<bool> removeUniqueField;
        
        private SmartCredentialVariableUnique uniqueField;
        
        private System.Nullable<SmartCredentialVariableKeyType> keyTypeField;
        
        private System.Nullable<SmartCredentialVariableUnblockType> unblockField;
        
        private System.Nullable<SmartCredentialVariableCategoryType> categoryField;
        
        private SmartCredentialVariableLocale[] localesField;
        
        private string beforeField;
        
    /// <datatype>
    ///   SmartCredentialVariableType
    /// </datatype>
    /// <value>
    ///   The type of the Smart Credential variable.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialVariableType> type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the existing restrictions are removed from the 
    ///   variable. This argument is ignored if restrictions is not null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeRestrictions {
            get {
                return this.removeRestrictionsField;
            }
            set {
                this.removeRestrictionsField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableRestrictions
    /// </datatype>
    /// <value>
    ///   Specifies restrictions for the variable.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SmartCredentialVariableRestrictions restrictions {
            get {
                return this.restrictionsField;
            }
            set {
                this.restrictionsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the existing conversion is removed from the variable. 
    ///   This argument is ignored if conversion is not null. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeConversion {
            get {
                return this.removeConversionField;
            }
            set {
                this.removeConversionField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableConversionType
    /// </datatype>
    /// <value>
    ///   Specifies how the variable value is converted during printing. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialVariableConversionType> conversion {
            get {
                return this.conversionField;
            }
            set {
                this.conversionField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, the existing options are removed. This argument 
    ///   is ignored if the options argument is specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeOptions {
            get {
                return this.removeOptionsField;
            }
            set {
                this.removeOptionsField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableOption[]
    /// </datatype>
    /// <value>
    ///   Options for enumerated variables.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialVariableOption[] options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the existing default value is removed from the 
    ///   variable. 
    ///   This argument is ignored if defaultValue is not null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeDefaultValue {
            get {
                return this.removeDefaultValueField;
            }
            set {
                this.removeDefaultValueField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableDefault
    /// </datatype>
    /// <value>
    ///   Specifies the default value for this variable.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SmartCredentialVariableDefault defaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, a value is required for the variable.
    ///   This argument is ignored if generated is not null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the existing generated value is removed from the 
    ///   variable. 
    ///   This argument is ignored if generated is not null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeGenerated {
            get {
                return this.removeGeneratedField;
            }
            set {
                this.removeGeneratedField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableGenerated
    /// </datatype>
    /// <value>
    ///   Specifies how the value for the variable is generated when a user 
    ///   smart credential is created. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SmartCredentialVariableGenerated generated {
            get {
                return this.generatedField;
            }
            set {
                this.generatedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the value is displayed in administration clients such 
    ///   as Entrust IdentityGuard Enrollment Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> displayable {
            get {
                return this.displayableField;
            }
            set {
                this.displayableField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the value can be modified in administration clients 
    ///   such as Entrust IdentityGuard Enrollment Module. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> modifiable {
            get {
                return this.modifiableField;
            }
            set {
                this.modifiableField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the value can be used as a search criteria.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> searchable {
            get {
                return this.searchableField;
            }
            set {
                this.searchableField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the value is treated as private and a cleartext value 
    ///   is not stored in the repository for searching. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> privateVariable {
            get {
                return this.privateVariableField;
            }
            set {
                this.privateVariableField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If set to true, the existing unique value is removed from the 
    ///   variable. 
    ///   This argument is ignored if unique is not null.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeUnique {
            get {
                return this.removeUniqueField;
            }
            set {
                this.removeUniqueField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableUnique
    /// </datatype>
    /// <value>
    ///   Specifies the uniqueness constraints on the variable value.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SmartCredentialVariableUnique unique {
            get {
                return this.uniqueField;
            }
            set {
                this.uniqueField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableKeyType
    /// </datatype>
    /// <value>
    ///   For KEY variables the KeyType specifies the type of the key.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialVariableKeyType> KeyType {
            get {
                return this.keyTypeField;
            }
            set {
                this.keyTypeField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableUnblockType
    /// </datatype>
    /// <value>
    ///   If set to X509 the variable can be used for X509 unblock. If set to 
    ///   PIV the variable can be used for PIV unblock. Otherwise the variable 
    ///   can't be used for unblock. This value can only be set for variables 
    ///   with type KEY. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialVariableUnblockType> unblock {
            get {
                return this.unblockField;
            }
            set {
                this.unblockField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableCategoryType
    /// </datatype>
    /// <value>
    ///   Specifies the category of the variable.
    ///   The categories correspond to user smart credential category 
    ///   permissions that restrict access to variable values. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialVariableCategoryType> category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableLocale[]
    /// </datatype>
    /// <value>
    ///   The specified locales update existing locale values for the variable. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialVariableLocale[] locales {
            get {
                return this.localesField;
            }
            set {
                this.localesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the name of an existing variable that this variable should 
    ///   be inserted before. 
    ///   For the userSmartCredentialVariableCreate operation, if a value is not 
    ///   specified then the new variable goes at the end of the variable 
    ///   list. For the userSmartCredentialVariableSet operation if a value is not 
    ///   specified then the variable is left in its current location in the 
    ///   variable list. If a value is specified and the named variable does not 
    ///   exist, an error is returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string before {
            get {
                return this.beforeField;
            }
            set {
                this.beforeField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines smart credential variable types.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum SmartCredentialVariableType {
        
    /// <value>
    ///   A STRING variable stores a string value.
    /// </value>
        STRING,
        
    /// <value>
    ///   A INTEGER variable stores an integer value.
    /// </value>
        INTEGER,
        
    /// <value>
    ///   A BOOLEAN variable stores a boolean value.
    /// </value>
        BOOLEAN,
        
    /// <value>
    ///   A DATE variable stores a date value.
    /// </value>
        DATE,
        
    /// <value>
    ///   A COUNTRY variable is an enumerated type that defines a list of 
    ///   country codes and stores a single country code. 
    /// </value>
        COUNTRY,
        
    /// <value>
    ///   A ENUM variable defines an enumerated type.
    ///   and stores one of the allowed values.
    /// </value>
        ENUM,
        
    /// <value>
    ///   A GRAPHIC variable defines an enumerated type and stores a reference 
    ///   to an IdentityGuard Graphic object. 
    /// </value>
        GRAPHIC,
        
    /// <value>
    ///   A PHOTO variable stores a photograph and associated information. 
    /// </value>
        PHOTO,
        
    /// <value>
    ///   A FINGERPRINTS variable stores a list of fingerprints and associated 
    ///   information. 
    /// </value>
        FINGERPRINTS,
        
    /// <value>
    ///   A SIGNATURE variable stores an image of a signature.
    /// </value>
        SIGNATURE,
        
    /// <value>
    ///   A GRID variable stores the serial number of a Grid.
    /// </value>
        GRID,
        
    /// <value>
    ///   A KEY variable stores a key value.
    /// </value>
        KEY,
        
    /// <value>
    ///   A UUID variable stores a uuid value.
    /// </value>
        UUID,
        
    /// <value>
    ///   A DIGITALID variable defines an enumerated type and stores a reference 
    ///   to an IdentityGuard Digital Id Config object. 
    /// </value>
        DIGITALID,
    }
    
    /// <summary>
    ///   Defines restrictions on a variable.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialVariableRestrictions {
        
        private string minField;
        
        private string maxField;
        
        private string regexField;
        
        private string charSetField;
        
        private SmartCredentialVariableRules rulesField;
        
        private SmartCredentialVariablePrintWidth printWidthField;
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   If specified this value specifies the minimum length for a string 
    ///   value and the minimum value for an integer value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string min {
            get {
                return this.minField;
            }
            set {
                this.minField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   If specified this value specifies the maximum length for a string 
    ///   value and the maximum value for an integer value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string max {
            get {
                return this.maxField;
            }
            set {
                this.maxField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies a regular expression describing allowed values for a string 
    ///   value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string regex {
            get {
                return this.regexField;
            }
            set {
                this.regexField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies a character set describing allowed values for a string 
    ///   value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CharSet {
            get {
                return this.charSetField;
            }
            set {
                this.charSetField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableRules
    /// </datatype>
    /// <value>
    ///   Rules constraining the value of string and integer variables. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SmartCredentialVariableRules rules {
            get {
                return this.rulesField;
            }
            set {
                this.rulesField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariablePrintWidth
    /// </datatype>
    /// <value>
    ///   Print width rules constraining the value of string variables. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SmartCredentialVariablePrintWidth printWidth {
            get {
                return this.printWidthField;
            }
            set {
                this.printWidthField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines rules specifying allowed characters for a variable value. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialVariableRules {
        
        private System.Nullable<SmartCredentialVariableRulesType> digitsField;
        
        private System.Nullable<SmartCredentialVariableRulesType> upperField;
        
        private System.Nullable<SmartCredentialVariableRulesType> lowerField;
        
        private System.Nullable<SmartCredentialVariableRulesType> symbolsField;
        
    /// <datatype>
    ///   SmartCredentialVariableRulesType
    /// </datatype>
    /// <value>
    ///   Specifies if digits in the variable value are not allowed, allowed or 
    ///   required. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialVariableRulesType> digits {
            get {
                return this.digitsField;
            }
            set {
                this.digitsField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableRulesType
    /// </datatype>
    /// <value>
    ///   Specifies if uppercase characters in the variable value are not 
    ///   allowed, allowed or required. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialVariableRulesType> upper {
            get {
                return this.upperField;
            }
            set {
                this.upperField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableRulesType
    /// </datatype>
    /// <value>
    ///   Specifies if lowercase characters in the variable value are not 
    ///   allowed, allowed or required. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialVariableRulesType> lower {
            get {
                return this.lowerField;
            }
            set {
                this.lowerField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableRulesType
    /// </datatype>
    /// <value>
    ///   Specifies if symbols in the variable value are not allowed, allowed or 
    ///   required. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialVariableRulesType> symbols {
            get {
                return this.symbolsField;
            }
            set {
                this.symbolsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the rules used to control the content of a variable value. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum SmartCredentialVariableRulesType {
        
    /// <value>
    ///   The variable value cannot have characters of the specified type. 
    /// </value>
        NOT_ALLOWED,
        
    /// <value>
    ///   The variable value can have characters of the specified type. 
    /// </value>
        ALLOWED,
        
    /// <value>
    ///   The variable value must have characters of the specified type. 
    /// </value>
        REQUIRED,
    }
    
    /// <summary>
    ///   Defines the maximum print width of the variable value for a given font 
    ///   and fontsize. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialVariablePrintWidth {
        
        private int valueField;
        
        private string fontNameField;
        
        private int fontSizeField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the maximum width of the value.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the font to be used for printing.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fontName {
            get {
                return this.fontNameField;
            }
            set {
                this.fontNameField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the font size to be used for printing.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int fontSize {
            get {
                return this.fontSizeField;
            }
            set {
                this.fontSizeField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines how a smart credential variable value is converted before 
    ///   being printed. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum SmartCredentialVariableConversionType {
        
    /// <value>
    ///   Convert the value to uppercase.
    /// </value>
        UPPER,
        
    /// <value>
    ///   Convert the value to lowercase.
    /// </value>
        LOWER,
    }
    
    /// <summary>
    ///   Defines an allowed value for an enumerated type.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialVariableOption {
        
        private string refField;
        
        private string valueField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the reference name of the allowed value.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @ref {
            get {
                return this.refField;
            }
            set {
                this.refField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the actual value.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the default value for a smart credential variable.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialVariableDefault {
        
        private SmartCredentialVariableDefaultType typeField;
        
        private string valueField;
        
    /// <datatype>
    ///   SmartCredentialVariableDefaultType
    /// </datatype>
    /// <value>
    ///   The type of the default value.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialVariableDefaultType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The default value.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the type of default value for a smart credential variable. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum SmartCredentialVariableDefaultType {
        
    /// <value>
    ///   The specified default value is the default value for the variable. 
    /// </value>
        CONSTANT,
        
    /// <value>
    ///   The specified default is a repository attribute. The default value for 
    ///   the variable comes from the named repository attribute. 
    /// </value>
        REPOSITORY,
        
    /// <value>
    ///   The specified default is a user contact info. The default value for 
    ///   the variable comes from the named contact. 
    /// </value>
        CONTACT,
        
    /// <value>
    ///   The specified default is a user contact info type. The default value 
    ///   for the variable comes from the contact with the specified type. If 
    ///   the user has multiple contacts with the named type, the first contact 
    ///   is used. 
    ///   Example contact types include EMAIL and PHONE.
    /// </value>
        CONTACTTYPE,
    }
    
    /// <summary>
    ///   Defines if and how a variable value is generated when the user smart 
    ///   credential is created. 
    ///   Only variables of type STRING, INTEGER, GRID, KEY and UUID can be 
    ///   generated. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialVariableGenerated {
        
        private bool valueField;
        
        private string lengthField;
        
        private System.Nullable<bool> cloneField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the variable value is generated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
    /// <datatype>
    ///   positiveInteger
    /// </datatype>
    /// <value>
    ///   If specified, the length of the generated value. This value only 
    ///   applies when generating values for variables of type STRING and INTEGER. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger", IsNullable=true)]
        public string length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   By default, new values are generated for generated variables when a 
    ///   user smart credential is cloned. If the clone attribute is specified as 
    ///   false, the old variable value is copied during cloning. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> clone {
            get {
                return this.cloneField;
            }
            set {
                this.cloneField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines if and how a variable value is unique.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialVariableUnique {
        
        private bool valueField;
        
        private System.Nullable<SmartCredentialVariableScopeType> scopeField;
        
        private string variableField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the variable value is unique.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableScopeType
    /// </datatype>
    /// <value>
    ///   Specifies if the variable value is unique in global or user scope. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialVariableScopeType> scope {
            get {
                return this.scopeField;
            }
            set {
                this.scopeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, the variable is unique only in the scope of variables 
    ///   that have the same value for the specified variable. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string variable {
            get {
                return this.variableField;
            }
            set {
                this.variableField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the scope of a unique smart credential variable.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum SmartCredentialVariableScopeType {
        
    /// <value>
    ///   The variable value is unique with respect to all user smart 
    ///   credentials in the system. 
    /// </value>
        GLOBAL,
        
    /// <value>
    ///   The variable value is unique with respect to all user smart 
    ///   credentials in the system owned by different users. Smart credentials with the 
    ///   same user can have duplicate values. 
    /// </value>
        USER,
    }
    
    /// <summary>
    ///   Defines the key type of the smart credential variable.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum SmartCredentialVariableKeyType {
        
    /// <value>
    /// </value>
        AES_128,
        
    /// <value>
    /// </value>
        AES_192,
        
    /// <value>
    /// </value>
        AES_256,
        
    /// <value>
    /// </value>
        TRIPLEDES_128,
        
    /// <value>
    /// </value>
        TRIPLEDES_192,
    }
    
    /// <summary>
    ///   Defines the unblock type of the smart credential variable.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum SmartCredentialVariableUnblockType {
        
    /// <value>
    /// </value>
        NONE,
        
    /// <value>
    /// </value>
        X509,
        
    /// <value>
    /// </value>
        PIV,
    }
    
    /// <summary>
    ///   Defines the category of the smart credential variable. It corresponds 
    ///   to the user smart credential category permissions. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum SmartCredentialVariableCategoryType {
        
    /// <value>
    /// </value>
        CAT1,
        
    /// <value>
    /// </value>
        CAT2,
        
    /// <value>
    /// </value>
        CAT3,
        
    /// <value>
    /// </value>
        CAT4,
        
    /// <value>
    /// </value>
        CAT5,
    }
    
    /// <summary>
    ///   Defines information about a Smart Credential Variable locale. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialVariableLocale {
        
        private string nameField;
        
        private bool defaultLocaleField;
        
        private string promptTextField;
        
        private string helpTextField;
        
        private SmartCredentialVariableOption[] optionsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential locale.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies if this locale is the default.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultLocale {
            get {
                return this.defaultLocaleField;
            }
            set {
                this.defaultLocaleField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The prompt text for this variable.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string promptText {
            get {
                return this.promptTextField;
            }
            set {
                this.promptTextField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional help text for this variable displayed in the administration 
    ///   clients. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string helpText {
            get {
                return this.helpTextField;
            }
            set {
                this.helpTextField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableOption[]
    /// </datatype>
    /// <value>
    ///   For ENUM variable types, the locale specific options contains the 
    ///   locale specific values for the corresponding reference. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialVariableOption[] options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialVariableDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialVariableDeleteCallParms {
        
        private string definitionField;
        
        private string variableField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Definition containing the variable to 
    ///   delete. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string definition {
            get {
                return this.definitionField;
            }
            set {
                this.definitionField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Variable to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string variable {
            get {
                return this.variableField;
            }
            set {
                this.variableField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialVariableCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialVariableCreateCallParms {
        
        private string definitionField;
        
        private string variableField;
        
        private SmartCredentialVariableParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Definition that will contain the new 
    ///   variable. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string definition {
            get {
                return this.definitionField;
            }
            set {
                this.definitionField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Variable to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string variable {
            get {
                return this.variableField;
            }
            set {
                this.variableField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the creation of the Smart Credential Variable. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialVariableParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialDefinitionListTemplate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDefinitionTemplateListCallParms {
        
        private bool getXMLField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, return the XML that defines the definition 
    ///   variables. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool getXML {
            get {
                return this.getXMLField;
            }
            set {
                this.getXMLField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of SmartCredentialDefinitionInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDefinitionInfoList {
        
        private SmartCredentialDefinitionInfo[] smartCredentialDefinitionInfoField;
        
    /// <datatype>
    ///   SmartCredentialDefinitionInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a Smart Credential Definition.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialDefinitionInfo[] SmartCredentialDefinitionInfo {
            get {
                return this.smartCredentialDefinitionInfoField;
            }
            set {
                this.smartCredentialDefinitionInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a Smart Credential Definition
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDefinitionInfo {
        
        private string nameField;
        
        private string valueDefinitionField;
        
        private SmartCredentialLocaleInfo[] variableLocalesField;
        
        private SmartCredentialVariableInfo[] variablesField;
        
        private System.Nullable<bool> approvalRequiredField;
        
        private string layoutField;
        
        private string[] appletsField;
        
        private string[] pACSField;
        
        private SmartCredentialDeliveryInfo[] allowedDeliveriesField;
        
        private string descriptionField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Definition.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   An XML document that describes the values that need to be collected 
    ///   during enrollment. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string valueDefinition {
            get {
                return this.valueDefinitionField;
            }
            set {
                this.valueDefinitionField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialLocaleInfo[]
    /// </datatype>
    /// <value>
    ///   A list of locales defined for smart credential variables.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialLocaleInfo[] variableLocales {
            get {
                return this.variableLocalesField;
            }
            set {
                this.variableLocalesField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableInfo[]
    /// </datatype>
    /// <value>
    ///   A list of variables defined for this smart credential definition. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialVariableInfo[] variables {
            get {
                return this.variablesField;
            }
            set {
                this.variablesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if Smart Credentials need to be approved before they 
    ///   can be printed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ApprovalRequired {
            get {
                return this.approvalRequiredField;
            }
            set {
                this.approvalRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Layout assigned to the Smart 
    ///   Credential Definition. 
    ///   If the value is null no Smart Credential Layout is assigned to this 
    ///   Smart Credential Definition. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Layout {
            get {
                return this.layoutField;
            }
            set {
                this.layoutField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of Smart Credential Applet names assigned to the Smart 
    ///   Credential Definition. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Applets {
            get {
                return this.appletsField;
            }
            set {
                this.appletsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of PACS names assigned to the Smart Credential Definition. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] PACS {
            get {
                return this.pACSField;
            }
            set {
                this.pACSField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialDeliveryInfo[]
    /// </datatype>
    /// <value>
    ///   A list of Smart Credential Deliveries that can be used as a parameter 
    ///   to the userSmartCredentialDelivery and userSmartCredentialUnblock 
    ///   operations with smart credentials using this definition. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialDeliveryInfo[] AllowedDeliveries {
            get {
                return this.allowedDeliveriesField;
            }
            set {
                this.allowedDeliveriesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A description of the Smart Credential Definition.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a Smart Credential locale.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLocaleInfo {
        
        private string nameField;
        
        private bool defaultLocaleField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential locale.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies which locale is the default.
    ///   If locales are specified, exactly one locale must be specified as 
    ///   default. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultLocale {
            get {
                return this.defaultLocaleField;
            }
            set {
                this.defaultLocaleField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a Smart Credential Variable.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialVariableInfo {
        
        private string nameField;
        
        private SmartCredentialVariableType typeField;
        
        private SmartCredentialVariableRestrictions restrictionsField;
        
        private System.Nullable<SmartCredentialVariableConversionType> conversionField;
        
        private SmartCredentialVariableOption[] optionsField;
        
        private SmartCredentialVariableDefault defaultValueField;
        
        private bool requiredField;
        
        private SmartCredentialVariableGenerated generatedField;
        
        private bool displayableField;
        
        private bool modifiableField;
        
        private bool searchableField;
        
        private bool privateValueField;
        
        private SmartCredentialVariableUnique uniqueField;
        
        private System.Nullable<SmartCredentialVariableKeyType> keyTypeField;
        
        private System.Nullable<SmartCredentialVariableUnblockType> unblockField;
        
        private SmartCredentialVariableCategoryType categoryField;
        
        private SmartCredentialVariableLocale[] localesField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential variable.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableType
    /// </datatype>
    /// <value>
    ///   The type of the Smart Credential variable.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialVariableType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableRestrictions
    /// </datatype>
    /// <value>
    ///   The type of the Smart Credential variable.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SmartCredentialVariableRestrictions restrictions {
            get {
                return this.restrictionsField;
            }
            set {
                this.restrictionsField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableConversionType
    /// </datatype>
    /// <value>
    ///   Specifies if the variable value is converted before being printed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialVariableConversionType> conversion {
            get {
                return this.conversionField;
            }
            set {
                this.conversionField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableOption[]
    /// </datatype>
    /// <value>
    ///   For an enumerated type, specifies the list of allowed values. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialVariableOption[] options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableDefault
    /// </datatype>
    /// <value>
    ///   The default value for this variable.
    ///   allowed values.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SmartCredentialVariableDefault defaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The required value specifies whether the variable requires a value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableGenerated
    /// </datatype>
    /// <value>
    ///   The generated value specifies if and how the variable value is 
    ///   generated when the user smart credential is created. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SmartCredentialVariableGenerated generated {
            get {
                return this.generatedField;
            }
            set {
                this.generatedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The displayable value specifies whether the variable value can be 
    ///   displayed by the administration clients. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayable {
            get {
                return this.displayableField;
            }
            set {
                this.displayableField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The modifiable value specifies whether the variable value can be 
    ///   modified by the administration clients. To be modifiable the variable must 
    ///   also be displayable. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool modifiable {
            get {
                return this.modifiableField;
            }
            set {
                this.modifiableField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The searchable value specifies whether the variable value can be 
    ///   searched by the administration clients. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool searchable {
            get {
                return this.searchableField;
            }
            set {
                this.searchableField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If a variable value is specified as private a clear text value of the 
    ///   variable is not stored to allow for searching or to ensure 
    ///   uniqueness. Instead a HMAC of the value is stored. When searching is enabled 
    ///   for private values, only exact matching is supported. When searching is 
    ///   enabled for non-private values, ranges and wildcard matches are 
    ///   supported. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool privateValue {
            get {
                return this.privateValueField;
            }
            set {
                this.privateValueField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableUnique
    /// </datatype>
    /// <value>
    ///   Specifies if a variable value is unique and if unique in what scope. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SmartCredentialVariableUnique unique {
            get {
                return this.uniqueField;
            }
            set {
                this.uniqueField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableKeyType
    /// </datatype>
    /// <value>
    ///   The keytype value specifies the type of a KEY variable.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialVariableKeyType> KeyType {
            get {
                return this.keyTypeField;
            }
            set {
                this.keyTypeField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableUnblockType
    /// </datatype>
    /// <value>
    ///   The unblock value specifies if the variable value can be used in the 
    ///   user smart credential unblock operation. Only variables of type KEY 
    ///   can be used for unblock. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<SmartCredentialVariableUnblockType> unblock {
            get {
                return this.unblockField;
            }
            set {
                this.unblockField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableCategoryType
    /// </datatype>
    /// <value>
    ///   The category of a smart credential variable corresponds to one of the 
    ///   user smart credential category permissions. To have access to view or 
    ///   modify a variable in a given category the administrator must have 
    ///   the corresponding category permission. The categories can be used to 
    ///   give administrators access to only a subset of variable values. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialVariableCategoryType category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialVariableLocale[]
    /// </datatype>
    /// <value>
    ///   For each locale defined for the smart credential definition provide 
    ///   locale specific text for this variable. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SmartCredentialVariableLocale[] locales {
            get {
                return this.localesField;
            }
            set {
                this.localesField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialDefinitionList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDefinitionFilter {
        
        private string groupField;
        
        private System.Nullable<bool> getXMLField;
        
        private System.Nullable<bool> getVariablesField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only return smart credential definitions that are 
    ///   allowed by the policy of the named group. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, return the XML that defines the definition 
    ///   variables for each Smart Credential Definition. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getXML {
            get {
                return this.getXMLField;
            }
            set {
                this.getXMLField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, return the definition variables for each Smart 
    ///   Credential Definition. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> getVariables {
            get {
                return this.getVariablesField;
            }
            set {
                this.getVariablesField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialDefinitionList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDefinitionListCallParms {
        
        private SmartCredentialDefinitionFilter filterField;
        
    /// <datatype>
    ///   SmartCredentialDefinitionFilter
    /// </datatype>
    /// <value>
    ///   The filter that specifies what information is returned for the Smart 
    ///   Credential Definitions. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialDefinitionFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialDefinitionSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDefinitionSetCallParms {
        
        private string nameField;
        
        private SmartCredentialDefinitionParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Definition to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialDefinitionParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the modification of the Smart Credential 
    ///   Definition. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialDefinitionParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the parameters that can be set when creating or modifying a 
    ///   Smart Credential Definition. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDefinitionParms {
        
        private string nameField;
        
        private string valueDefinitionField;
        
        private System.Nullable<bool> approvalRequiredField;
        
        private string layoutField;
        
        private System.Nullable<bool> addAppletsField;
        
        private System.Nullable<bool> removeAppletsField;
        
        private string[] appletsField;
        
        private System.Nullable<bool> addPACSField;
        
        private System.Nullable<bool> removePACSField;
        
        private string[] pACSField;
        
        private System.Nullable<bool> addAllowedDeliveriesField;
        
        private System.Nullable<bool> removeAllowedDeliveriesField;
        
        private string[] allowedDeliveriesField;
        
        private System.Nullable<bool> addLocalesField;
        
        private System.Nullable<bool> removeLocalesField;
        
        private string[] localesField;
        
        private string defaultLocaleField;
        
        private string descriptionField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When passed in a call to smartCredentialDefinitionSet, this specifies 
    ///   a new name for the Smart Credential Definition. 
    ///   If this is included in a call to smartCredentialDefinitionCreate it is 
    ///   ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   An XML document that defines the values to be collected during 
    ///   enrollment. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string valueDefinition {
            get {
                return this.valueDefinitionField;
            }
            set {
                this.valueDefinitionField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if Smart Credentials need to be approved before they 
    ///   can be printed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ApprovalRequired {
            get {
                return this.approvalRequiredField;
            }
            set {
                this.approvalRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If this value is set it specifies the name of the Smart Credential 
    ///   Layout to be assigned to this Smart Credential Definition. If the value 
    ///   is an empty string, the current Smart Credential Layout is removed 
    ///   from the Smart Credential Definition. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Layout {
            get {
                return this.layoutField;
            }
            set {
                this.layoutField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the Applets 
    ///   parameter are added to the existing values instead of overwriting them. 
    ///   If not specified, this attribute defaults to false.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AddApplets {
            get {
                return this.addAppletsField;
            }
            set {
                this.addAppletsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the Applets 
    ///   parameter are removed from the existing values. 
    ///   If not specified, this attribute defaults to false.
    ///   This attribute can not be specified as true for the 
    ///   smartCredentialDefinitionCreate operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RemoveApplets {
            get {
                return this.removeAppletsField;
            }
            set {
                this.removeAppletsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of Smart Credential Applet names to be set, added or removed 
    ///   from a Smart Credential Definition. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Applets {
            get {
                return this.appletsField;
            }
            set {
                this.appletsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the PACS 
    ///   parameter are added to the existing values instead of overwriting them. 
    ///   If not specified, this attribute defaults to false.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AddPACS {
            get {
                return this.addPACSField;
            }
            set {
                this.addPACSField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the PACS 
    ///   parameter are removed from the existing values. 
    ///   If not specified, this attribute defaults to false.
    ///   This attribute can not be specified as true for the 
    ///   smartCredentialDefinitionCreate operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RemovePACS {
            get {
                return this.removePACSField;
            }
            set {
                this.removePACSField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of PACS names to be set, added or removed from a Smart 
    ///   Credential Definition. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] PACS {
            get {
                return this.pACSField;
            }
            set {
                this.pACSField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the 
    ///   AllowedDeliveries parameter are added to the existing values instead of 
    ///   overwriting them. 
    ///   If not specified, this attribute defaults to false.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AddAllowedDeliveries {
            get {
                return this.addAllowedDeliveriesField;
            }
            set {
                this.addAllowedDeliveriesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the 
    ///   AllowedDeliveries parameter are removed from the existing values. 
    ///   If not specified, this attribute defaults to false.
    ///   This attribute can not be specified as true for the 
    ///   smartCredentialDefinitionCreate operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RemoveAllowedDeliveries {
            get {
                return this.removeAllowedDeliveriesField;
            }
            set {
                this.removeAllowedDeliveriesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of Smart Credential Delivery names to be set, added or removed 
    ///   from the allowed Smart Credential Deliveries list of a Smart 
    ///   Credential Definition. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] AllowedDeliveries {
            get {
                return this.allowedDeliveriesField;
            }
            set {
                this.allowedDeliveriesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the Locales 
    ///   parameter are added to the existing values instead of overwriting them. 
    ///   If not specified, this attribute defaults to false.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AddLocales {
            get {
                return this.addLocalesField;
            }
            set {
                this.addLocalesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the Locales 
    ///   parameter are removed from the existing values. 
    ///   If not specified, this attribute defaults to false.
    ///   This attribute is ignored for the smartCredentialDefinitionCreate 
    ///   operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RemoveLocales {
            get {
                return this.removeLocalesField;
            }
            set {
                this.removeLocalesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of locale names to be set, added or removed from a Smart 
    ///   Credential Definition. 
    ///   This argument is ignored if the valueDefinitions parameter is 
    ///   specified. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Locales {
            get {
                return this.localesField;
            }
            set {
                this.localesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the locale to be made the default locale. If not specified 
    ///   for the smartCredentialDefinitionCreate operation and a list of 
    ///   locales is specified the first locale in the locales list is made the 
    ///   default. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DefaultLocale {
            get {
                return this.defaultLocaleField;
            }
            set {
                this.defaultLocaleField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional description.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialDefinitionTemplateGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDefinitionTemplateGetCallParms {
        
        private string nameField;
        
        private bool getXMLField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Definition Template to retrieve. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, return the XML that defines the definition 
    ///   variables. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool getXML {
            get {
                return this.getXMLField;
            }
            set {
                this.getXMLField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialDefinitionGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDefinitionGetCallParms {
        
        private string nameField;
        
        private bool getXMLField;
        
        private bool getVariablesField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Definition to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, return the XML that defines the definition 
    ///   variables. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool getXML {
            get {
                return this.getXMLField;
            }
            set {
                this.getXMLField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, return the definition variables.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool getVariables {
            get {
                return this.getVariablesField;
            }
            set {
                this.getVariablesField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialDefinitionDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDefinitionDeleteCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Definition to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialDefinitionCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialDefinitionCreateCallParms {
        
        private string nameField;
        
        private SmartCredentialDefinitionParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Smart Credential Definition to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   SmartCredentialDefinitionParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the creation of the Smart Credential 
    ///   Definition. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialDefinitionParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userRegistrationPasswordAuthenticateEx. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserRegistrationPasswordAuthenticateExCallParms {
        
        private string useridField;
        
        private string passwordField;
        
        private string typeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID to authenticate a registration password for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user registration password being authenticated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   An optional type specified by the application.
    ///   When authenticating the registration password the same type must be 
    ///   specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userRegistrationPasswordGetEx. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserRegistrationPasswordGetExCallParms {
        
        private string useridField;
        
        private string typeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID to obtain a registration password for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   An optional type specified by the application.
    ///   When authenticating the registration password the same type must be 
    ///   specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the information returned by a call to 
    ///   userRegistrationPasswordAuthenticate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserRegistrationPasswordResponse {
        
        private bool responseField;
        
        private bool expiredField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates whether the password was authenticated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   This is set to true if the password was authenticated but was expired. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Expired {
            get {
                return this.expiredField;
            }
            set {
                this.expiredField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userRegistrationPasswordAuthenticate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserRegistrationPasswordAuthenticateCallParms {
        
        private string useridField;
        
        private string passwordField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID to authenticate a registration password for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user registration password being authenticated.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a one-time user registration password. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserRegistrationPasswordInfo {
        
        private string passwordField;
        
        private System.DateTime createDateField;
        
        private int lifetimeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The one-time registration password.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date on which this user registration password was created. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime createDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The lifetime of the user registration password in minutes.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int lifetime {
            get {
                return this.lifetimeField;
            }
            set {
                this.lifetimeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userRegistrationPasswordGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserRegistrationPasswordGetCallParms {
        
        private string useridField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user ID to obtain a registration password for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about signed SCEP data.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ScepRaSignContentResult {
        
        private byte[] cmsSignedDataField;
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The signed data.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] cmsSignedData {
            get {
                return this.cmsSignedDataField;
            }
            set {
                this.cmsSignedDataField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about signing attribute data.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ScepRaSignedAttributes {
        
        private string transactionIDField;
        
        private string messageTypeField;
        
        private string pkiStatusField;
        
        private string failInfoField;
        
        private byte[] senderNonceField;
        
        private byte[] recipientNonceField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The transaction ID.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The message type.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MessageType {
            get {
                return this.messageTypeField;
            }
            set {
                this.messageTypeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The PKI Status.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pkiStatus {
            get {
                return this.pkiStatusField;
            }
            set {
                this.pkiStatusField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The failure information.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FailInfo {
            get {
                return this.failInfoField;
            }
            set {
                this.failInfoField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The sender nonce.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] SenderNonce {
            get {
                return this.senderNonceField;
            }
            set {
                this.senderNonceField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The recipient nonce.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] RecipientNonce {
            get {
                return this.recipientNonceField;
            }
            set {
                this.recipientNonceField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about signing data.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ScepRaSignContentParms {
        
        private string managedCaField;
        
        private SignatureAlg signingAlgField;
        
        private ScepRaSignedAttributes signedAttributesField;
        
        private System.Nullable<bool> includeSignerCertificateField;
        
        private System.Nullable<bool> includeIssuerAndSerialNumberField;
        
        private byte[] dataToSignField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Managed CA which will sign this data.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ManagedCa {
            get {
                return this.managedCaField;
            }
            set {
                this.managedCaField = value;
            }
        }
        
    /// <datatype>
    ///   SignatureAlg
    /// </datatype>
    /// <value>
    ///   The signing algorithm to use.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SignatureAlg SigningAlg {
            get {
                return this.signingAlgField;
            }
            set {
                this.signingAlgField = value;
            }
        }
        
    /// <datatype>
    ///   ScepRaSignedAttributes
    /// </datatype>
    /// <value>
    ///   The signing attribute to use.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ScepRaSignedAttributes SignedAttributes {
            get {
                return this.signedAttributesField;
            }
            set {
                this.signedAttributesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Controls whether to include the signer certificate in the SignedData. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> IncludeSignerCertificate {
            get {
                return this.includeSignerCertificateField;
            }
            set {
                this.includeSignerCertificateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Controls whether to include the IssuerandSerialNumber SignerInfo. If 
    ///   false then a SubjectKeyIdentifier will be used as the SignerInfo. The 
    ///   default behavior is true (to include IssuerAndSerialNumber in the 
    ///   result). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> IncludeIssuerAndSerialNumber {
            get {
                return this.includeIssuerAndSerialNumberField;
            }
            set {
                this.includeIssuerAndSerialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The data to sign.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DataToSign {
            get {
                return this.dataToSignField;
            }
            set {
                this.dataToSignField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   managedCaScepRaSignContent. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaScepRaSignContentCallParms {
        
        private ScepRaSignContentParms parmsField;
        
    /// <datatype>
    ///   ScepRaSignContentParms
    /// </datatype>
    /// <value>
    ///   The data to sign.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ScepRaSignContentParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about decrypted data.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class DecryptedDataInfo {
        
        private byte[] dataField;
        
        private EncryptionAlg algField;
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The decrypted plaintext data.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
    /// <datatype>
    ///   EncryptionAlg
    /// </datatype>
    /// <value>
    ///   The encryption algorithm the data was encrypted with.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EncryptionAlg Alg {
            get {
                return this.algField;
            }
            set {
                this.algField = value;
            }
        }
    }
    
    /// <summary>
    ///   An encryption algorithm.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum EncryptionAlg {
        
    /// <value>
    ///   The AES_128_CBC encryption algorithm.
    /// </value>
        AES_128_CBC,
        
    /// <value>
    ///   The AES_128_ECB encryption algorithm.
    /// </value>
        AES_128_ECB,
        
    /// <value>
    ///   The AES_128_WRAP encryption algorithm.
    /// </value>
        AES_128_WRAP,
        
    /// <value>
    ///   The AES_192_CBC encryption algorithm.
    /// </value>
        AES_192_CBC,
        
    /// <value>
    ///   The AES_192_ECB encryption algorithm.
    /// </value>
        AES_192_ECB,
        
    /// <value>
    ///   The AES_192_WRAP encryption algorithm.
    /// </value>
        AES_192_WRAP,
        
    /// <value>
    ///   The AES_256_CBC encryption algorithm.
    /// </value>
        AES_256_CBC,
        
    /// <value>
    ///   The AES_256_ECB encryption algorithm.
    /// </value>
        AES_256_ECB,
        
    /// <value>
    ///   The AES_256_WRAP encryption algorithm.
    /// </value>
        AES_256_WRAP,
        
    /// <value>
    ///   The CAST3_CBC encryption algorithm.
    /// </value>
        CAST3_CBC,
        
    /// <value>
    ///   The CAST5_CBC encryption algorithm.
    /// </value>
        CAST5_CBC,
        
    /// <value>
    ///   The CMS_3DES_WRAP encryption algorithm.
    /// </value>
        CMS_3DES_WRAP,
        
    /// <value>
    ///   The CMS_CAST_WRAP encryption algorithm.
    /// </value>
        CMS_CAST_WRAP,
        
    /// <value>
    ///   The CMS_CAST5_WRAP encryption algorithm.
    /// </value>
        CMS_CAST5_WRAP,
        
    /// <value>
    ///   The CMS_IDEA_WRAP encryption algorithm.
    /// </value>
        CMS_IDEA_WRAP,
        
    /// <value>
    ///   The CMS_RC2_WRAP encryption algorithm.
    /// </value>
        CMS_RC2_WRAP,
        
    /// <value>
    ///   The DES_CBC encryption algorithm.
    /// </value>
        DES_CBC,
        
    /// <value>
    ///   The DES_EDE3_CBC encryption algorithm.
    /// </value>
        DES_EDE3_CBC,
        
    /// <value>
    ///   The IDEA_CBC encryption algorithm.
    /// </value>
        IDEA_CBC,
        
    /// <value>
    ///   The RC2_CBC encryption algorithm.
    /// </value>
        RC2_CBC,
        
    /// <value>
    ///   The RC4 encryption algorithm.
    /// </value>
        RC4,
        
    /// <value>
    ///   The RC5_CBC encryption algorithm.
    /// </value>
        RC5_CBC,
    }
    
    /// <summary>
    ///   Defines information about encrypted data.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class EncryptedDataParms {
        
        private byte[] cmsEnvelopedDataField;
        
        private string managedCaField;
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The encrypted data.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] cmsEnvelopedData {
            get {
                return this.cmsEnvelopedDataField;
            }
            set {
                this.cmsEnvelopedDataField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The Managed CA for which this data has been encrypted for.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ManagedCa {
            get {
                return this.managedCaField;
            }
            set {
                this.managedCaField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   managedCaScepRaDecryptData. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaScepRaDecryptDataCallParms {
        
        private EncryptedDataParms encryptedDataField;
        
    /// <datatype>
    ///   EncryptedDataParms
    /// </datatype>
    /// <value>
    ///   The encrypted data to decrypt.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EncryptedDataParms encryptedData {
            get {
                return this.encryptedDataField;
            }
            set {
                this.encryptedDataField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   managedCaScepRaCertificateList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class managedCaScepRaCertificateListCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Managed CA.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   managedCaScepRaEncryptionCertificateGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaScepRaEncryptionCertificateGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Managed CA.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines an X.509 Certificate Response.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CertificateResponse {
        
        private CertificateEncoding certificateEncodingField;
        
        private byte[] certificateField;
        
    /// <datatype>
    ///   CertificateEncoding
    /// </datatype>
    /// <value>
    ///   The type of data being assigned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CertificateEncoding CertificateEncoding {
            get {
                return this.certificateEncodingField;
            }
            set {
                this.certificateEncodingField = value;
            }
        }
        
    /// <datatype>
    ///   base64Binary
    /// </datatype>
    /// <value>
    ///   The X.509 Certificate.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] Certificate {
            get {
                return this.certificateField;
            }
            set {
                this.certificateField = value;
            }
        }
    }
    
    /// <summary>
    ///   The encoding used in a certificate.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum CertificateEncoding {
        
    /// <value>
    ///   Binary (DER) encoding.
    /// </value>
        BINARY,
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   ManagedCaCertificateList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaCertificateListCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the Managed CA.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about an existing managed CA user id. This id is 
    ///   not necessarily assigned to an IdentityGuard user. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaUserInfo {
        
        private string managedCaField;
        
        private string dnField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the managed CA.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ManagedCa {
            get {
                return this.managedCaField;
            }
            set {
                this.managedCaField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The DN of the managed CA user id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DN {
            get {
                return this.dnField;
            }
            set {
                this.dnField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains filters to constrain which Managed CA user ids 
    ///   returned by the managedCaUserList operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaUserFilter {
        
        private string managedCaField;
        
        private string emailField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   If specified, only Managed CA user ids for the specified Managed CA 
    ///   are returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ManagedCa {
            get {
                return this.managedCaField;
            }
            set {
                this.managedCaField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The email of the managed CA user id.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   managedCaUserList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ManagedCaUserListCallParms {
        
        private ManagedCaUserFilter filterField;
        
    /// <datatype>
    ///   ManagedCaUserFilter
    /// </datatype>
    /// <value>
    ///   The search filter, specifying which users should be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ManagedCaUserFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of GroupInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class GroupInfoList {
        
        private GroupInfo[] groupInfoField;
        
    /// <datatype>
    ///   GroupInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a group.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public GroupInfo[] groupInfo {
            get {
                return this.groupInfoField;
            }
            set {
                this.groupInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a group.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class GroupInfo {
        
        private string nameField;
        
        private bool defaultGroupField;
        
        private string policyField;
        
        private string partitionField;
        
        private string[] repositoryField;
        
        private string cardRepositoryField;
        
        private string tokenRepositoryField;
        
        private string smartCredentialRepositoryField;
        
        private string[] rolesGrantingAccessField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the group.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this group is the default, and is used in situations 
    ///   where no group is specified but a group is required, such as user 
    ///   creation. If false, this is not the default group. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultGroup {
            get {
                return this.defaultGroupField;
            }
            set {
                this.defaultGroupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the policy associated with the group.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string policy {
            get {
                return this.policyField;
            }
            set {
                this.policyField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the partition associated with the group. Users or cards 
    ///   created in this group will be assigned user numbers or serial numbers 
    ///   from this partition, as appropriate. If this value is nil, users and 
    ///   cards are assigned user numbers and card serial numbers from the 
    ///   global system settings. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string partition {
            get {
                return this.partitionField;
            }
            set {
                this.partitionField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The names of the repositories that users in this group may be stored 
    ///   in. If this value is nil, it means that users in this group will be 
    ///   stored in the repository flagged as the default. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] repository {
            get {
                return this.repositoryField;
            }
            set {
                this.repositoryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The repository used to store pre-produced cards created in this group 
    ///   or added to it. If this value is nil, pre-produced cards created in 
    ///   or added to this group will be stored in the default pre-produced card 
    ///   repository. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string cardRepository {
            get {
                return this.cardRepositoryField;
            }
            set {
                this.cardRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The repository used to store unassigned tokens loaded in this group or 
    ///   added to it. If this value is nil, unassigned tokens loaded in or 
    ///   added to this group will be stored in the default unassigned token 
    ///   repository. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string tokenRepository {
            get {
                return this.tokenRepositoryField;
            }
            set {
                this.tokenRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The repository used to store unassigned smart credentials loaded in 
    ///   this group or added to it. If this value is nil, unassigned smart 
    ///   credentials loaded in or added to this group will be stored in the default 
    ///   unassigned smart credential repository. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string smartCredentialRepository {
            get {
                return this.smartCredentialRepositoryField;
            }
            set {
                this.smartCredentialRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional descriptive comments.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the filter to limit which groups are to be returned from the 
    ///   groupList operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class GroupFilter {
        
        private string[] policiesField;
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, provides a list of policy names and returns only groups 
    ///   using those policies. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] policies {
            get {
                return this.policiesField;
            }
            set {
                this.policiesField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to groupList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class GroupListCallParms {
        
        private GroupFilter filterField;
        
    /// <datatype>
    ///   GroupFilter
    /// </datatype>
    /// <value>
    ///   A filter limiting which groups are returned.
    ///   If nil, all groups are returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public GroupFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to groupSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class GroupSetCallParms {
        
        private string groupNameField;
        
        private GroupParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the group to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
    /// <datatype>
    ///   GroupParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the modification of the group.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GroupParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the group.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class GroupParms {
        
        private string nameField;
        
        private System.Nullable<bool> defaultGroupField;
        
        private string policyField;
        
        private string partitionField;
        
        private System.Nullable<bool> useNoPartitionField;
        
        private string[] repositoriesField;
        
        private string cardRepositoryField;
        
        private System.Nullable<bool> useNoCardRepositoryField;
        
        private string tokenRepositoryField;
        
        private System.Nullable<bool> useNoTokenRepositoryField;
        
        private string smartCredentialRepositoryField;
        
        private System.Nullable<bool> useNoSmartCredentialRepositoryField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When passed in a call to groupSet, this specifies a new name for the 
    ///   group. If this is included in a call to groupCreate it is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this group is the default, and is used in situations 
    ///   where no group is specified. If false, this is not the default 
    ///   group. There must always be exactly one group flagged as being the 
    ///   default. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> defaultGroup {
            get {
                return this.defaultGroupField;
            }
            set {
                this.defaultGroupField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the policy associated with the group.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string policy {
            get {
                return this.policyField;
            }
            set {
                this.policyField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the partition associated with the group. Users or cards 
    ///   created in this group will be assigned user numbers or serial numbers 
    ///   from this partition, as appropriate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string partition {
            get {
                return this.partitionField;
            }
            set {
                this.partitionField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   When updating a group, set this value to true to make the group not be 
    ///   assigned any partition. 
    ///   This value is ignored during group creation, if set to false, or if a 
    ///   partition is specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> useNoPartition {
            get {
                return this.useNoPartitionField;
            }
            set {
                this.useNoPartitionField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The names of the repositories that users in this group may be stored 
    ///   in. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] repositories {
            get {
                return this.repositoriesField;
            }
            set {
                this.repositoriesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The repository used to store pre-produced cards created in this group 
    ///   or added to it. Changing the repository for an existing group will 
    ///   not move pre-produced cards already assigned to this group to the new 
    ///   repository. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string cardRepository {
            get {
                return this.cardRepositoryField;
            }
            set {
                this.cardRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   When updating a group, set this value to true to make the group not be 
    ///   assigned a particular repository in which to store pre-produced 
    ///   cards, instead making it use the default pre-produced card repository. 
    ///   This value is ignored during group creation, if set to false, or if 
    ///   cardRepository is specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> useNoCardRepository {
            get {
                return this.useNoCardRepositoryField;
            }
            set {
                this.useNoCardRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The repository used to store unassigned tokens loaded in this group or 
    ///   added to it. Changing the repository for an existing group will not 
    ///   move unassigned token already assigned to this group to the new 
    ///   repository. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string tokenRepository {
            get {
                return this.tokenRepositoryField;
            }
            set {
                this.tokenRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   When updating a group, set this value to true to make the group not be 
    ///   assigned a particular repository in which to store unassigned 
    ///   tokens, instead making it use the default unassigned token repository. This 
    ///   value is ignored during group creation, if set to false, or if 
    ///   tokenRepository is specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> useNoTokenRepository {
            get {
                return this.useNoTokenRepositoryField;
            }
            set {
                this.useNoTokenRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The repository used to store unassigned smart credentials loaded in 
    ///   this group or added to it. Changing the repository for an existing 
    ///   group will not move unassigned smart credentials already assigned to this 
    ///   group to the new repository. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string smartCredentialRepository {
            get {
                return this.smartCredentialRepositoryField;
            }
            set {
                this.smartCredentialRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   When updating a group, set this value to true to make the group not be 
    ///   assigned a particular repository in which to store unassigned smart 
    ///   credentials, instead making it use the default unassigned smart 
    ///   credential repository. This value is ignored during group creation, if set 
    ///   to false, or if smartCredentialRepository is specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> useNoSmartCredentialRepository {
            get {
                return this.useNoSmartCredentialRepositoryField;
            }
            set {
                this.useNoSmartCredentialRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional descriptive comments.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to groupGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class GroupGetCallParms {
        
        private string groupNameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the group to retrieve. If null, it indicates the default 
    ///   group should be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   groupDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class GroupDeleteCallParms {
        
        private string groupNameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the group to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   groupCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class GroupCreateCallParms {
        
        private string groupNameField;
        
        private GroupParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the group to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
    /// <datatype>
    ///   GroupParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the creation of the group.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GroupParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the filter to limit which roles are to be returned from the 
    ///   roleList operation. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RoleFilter {
        
        private System.Nullable<bool> systemRoleField;
        
        private string[] permissionsField;
        
        private System.Nullable<bool> allPermissionsField;
        
        private string[] policiesField;
        
        private System.Nullable<bool> allPoliciesField;
        
        private string[] groupsField;
        
        private System.Nullable<bool> allGroupsField;
        
        private System.Nullable<bool> ownGroupField;
        
        private string[] rolesField;
        
        private System.Nullable<bool> allRolesField;
        
        private string[] smartCredentialDefinitionsField;
        
        private System.Nullable<bool> allSmartCredentialDefinitionsField;
        
        private string[] smartCredentialPrintModulesField;
        
        private System.Nullable<bool> allSmartCredentialPrintModulesField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, only the built-in system roles will be returned. If false, 
    ///   only roles that have been created since the system was installed will 
    ///   be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> systemRole {
            get {
                return this.systemRoleField;
            }
            set {
                this.systemRoleField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, provides a list of permission names and returns only 
    ///   roles where one of these names is explicitly included in the role's 
    ///   permission list. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, only roles where the permission list is the special "all" 
    ///   list will be returned. If false, only roles where the permission list is 
    ///   not the special "all" list will be returned. 
    ///   Specifying both a non-empty list for permissions and setting this 
    ///   value to true is invalid and will result in no roles being returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allPermissions {
            get {
                return this.allPermissionsField;
            }
            set {
                this.allPermissionsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, provides a list of policy names and returns only roles 
    ///   where one of these names is explicitly included in the role's policy 
    ///   list. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] policies {
            get {
                return this.policiesField;
            }
            set {
                this.policiesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, only roles where the policy list is the special "all" list 
    ///   will be returned. If false, only roles where the policy list is not the 
    ///   special "all" list will be returned. 
    ///   Specifying both a non-empty list for policies and setting this value 
    ///   to true is invalid and will result in no roles being returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allPolicies {
            get {
                return this.allPoliciesField;
            }
            set {
                this.allPoliciesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, provides a list of group names and returns only roles 
    ///   where one of these names is explicitly included in the role's group 
    ///   list. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, only roles where the group list is the special "all" list 
    ///   will be returned. If false, only roles where the group list is not the 
    ///   special "all" list will be returned. 
    ///   Specifying both a non-empty list for groups and setting this value to 
    ///   true is invalid and will result in no roles being returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allGroups {
            get {
                return this.allGroupsField;
            }
            set {
                this.allGroupsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, only roles where the group list is the special "own" list 
    ///   will be returned. If false, only roles where the group list is not the 
    ///   special "own" list will be returned. 
    ///   Specifying both a non-empty list for groups and setting this value to 
    ///   true is invalid and will result in no roles being returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ownGroup {
            get {
                return this.ownGroupField;
            }
            set {
                this.ownGroupField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, provides a list of role names and returns only roles 
    ///   where one of these names is explicitly included in the role's role list. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, only roles where the role list is the special "all" list will 
    ///   be returned. If false, only roles where the role list is not the 
    ///   special "all" list will be returned. 
    ///   Specifying both a non-empty list for roles and setting this value to 
    ///   true is invalid and will result in no roles being returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allRoles {
            get {
                return this.allRolesField;
            }
            set {
                this.allRolesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, provides a list of Smart Credential Definition names and 
    ///   returns only roles where one of these names is explicitly included 
    ///   in the role's Smart Credential Definition list. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] SmartCredentialDefinitions {
            get {
                return this.smartCredentialDefinitionsField;
            }
            set {
                this.smartCredentialDefinitionsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, only roles where the Smart Credential Definition list is the 
    ///   special "all" list will be returned. If false, only roles where the 
    ///   Smart Credential Definition list is not the special "all" list will be 
    ///   returned. 
    ///   Specifying both a non-empty list for SmartCredentialDefinitions and 
    ///   setting this value to true is invalid and will result in no roles being 
    ///   returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allSmartCredentialDefinitions {
            get {
                return this.allSmartCredentialDefinitionsField;
            }
            set {
                this.allSmartCredentialDefinitionsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If specified, provides a list of Smart Credential Print Module names 
    ///   and returns only roles where one of these names is explicitly included 
    ///   in the role's Smart Credential Print Module list. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] SmartCredentialPrintModules {
            get {
                return this.smartCredentialPrintModulesField;
            }
            set {
                this.smartCredentialPrintModulesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, only roles where the Smart Credential Print Module list is 
    ///   the special "all" list will be returned. If false, only roles where the 
    ///   Smart Credential Print Module list is not the special "all" list 
    ///   will be returned. 
    ///   Specifying both a non-empty list for SmartCredentialPrintModules and 
    ///   setting this value to true is invalid and will result in no roles 
    ///   being returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allSmartCredentialPrintModules {
            get {
                return this.allSmartCredentialPrintModulesField;
            }
            set {
                this.allSmartCredentialPrintModulesField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to roleList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RoleListCallParms {
        
        private RoleFilter parmsField;
        
    /// <datatype>
    ///   RoleFilter
    /// </datatype>
    /// <value>
    ///   Parameters controlling which role to retrieve.
    ///   If nil, then all roles are retrieved.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public RoleFilter parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to roleGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RoleSetCallParms {
        
        private string roleNameField;
        
        private RoleParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the role to modify.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string roleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
        
    /// <datatype>
    ///   RoleParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the modification of the role.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RoleParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a role when creating or modifying a role. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RoleParms {
        
        private string nameField;
        
        private System.Nullable<bool> allPermissionsField;
        
        private string[] permissionsField;
        
        private System.Nullable<bool> allPoliciesField;
        
        private string[] policyListField;
        
        private System.Nullable<bool> allGroupsField;
        
        private System.Nullable<bool> ownGroupField;
        
        private string[] groupListField;
        
        private System.Nullable<bool> allRolesField;
        
        private string[] roleListField;
        
        private System.Nullable<bool> allSmartCredentialDefinitionsField;
        
        private string[] smartCredentialDefinitionListField;
        
        private System.Nullable<bool> allSmartCredentialPrintModulesField;
        
        private string[] smartCredentialPrintModuleListField;
        
        private System.Nullable<bool> skipSecondAuthField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When specified in a call to roleSet, this is the new name for the 
    ///   role. It is ignored if specified in a call to roleCreate. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this role grants all permissions.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allPermissions {
            get {
                return this.allPermissionsField;
            }
            set {
                this.allPermissionsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of the names of the permissions that this role grants. If 
    ///   allPermissions is true, this list must be empty or nil. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this role grants access to all policies.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allPolicies {
            get {
                return this.allPoliciesField;
            }
            set {
                this.allPoliciesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of the names of policies that this role grants access to. If 
    ///   allPolicies is true, this list must be empty or nil. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] policyList {
            get {
                return this.policyListField;
            }
            set {
                this.policyListField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this role grants access to all groups.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allGroups {
            get {
                return this.allGroupsField;
            }
            set {
                this.allGroupsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, when assigned to an administrator, this role grants access to 
    ///   users who belong to the same group as the administrator. At most one 
    ///   of allGroups and ownGroup can be true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ownGroup {
            get {
                return this.ownGroupField;
            }
            set {
                this.ownGroupField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of the names of the groups that this role grants access to. 
    ///   If either allGroups or ownGroup is true, this list must be empty or 
    ///   nil. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] groupList {
            get {
                return this.groupListField;
            }
            set {
                this.groupListField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this role grants access to all roles.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allRoles {
            get {
                return this.allRolesField;
            }
            set {
                this.allRolesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of the names of the roles that this role grants access to. If 
    ///   allRoles is true, this list must be empty or nil. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] roleList {
            get {
                return this.roleListField;
            }
            set {
                this.roleListField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this role grants access to all Smart Credential 
    ///   Definitions. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allSmartCredentialDefinitions {
            get {
                return this.allSmartCredentialDefinitionsField;
            }
            set {
                this.allSmartCredentialDefinitionsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of the names of Smart Credential Definitions that this role 
    ///   grants access to. If allSmartCredentialDefinitions is true, this list 
    ///   must be empty or nil. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] SmartCredentialDefinitionList {
            get {
                return this.smartCredentialDefinitionListField;
            }
            set {
                this.smartCredentialDefinitionListField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this role grants access to all Smart Credential 
    ///   Print Modules. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allSmartCredentialPrintModules {
            get {
                return this.allSmartCredentialPrintModulesField;
            }
            set {
                this.allSmartCredentialPrintModulesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of the names of Smart Credential Print Modules that this role 
    ///   grants access to. If allSmartCredentialPrintModules is true, this 
    ///   list must be empty or nil. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] SmartCredentialPrintModuleList {
            get {
                return this.smartCredentialPrintModuleListField;
            }
            set {
                this.smartCredentialPrintModuleListField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If the skipSecondAuth flag is set to true for a role, administrators 
    ///   in this role will skip second factor authentication when logging into 
    ///   the Entrust IdentityGuard Administration Interface or Service even 
    ///   when policy dictates that second factor authentication is required. 
    ///   This flag should be set to true for administration identities that 
    ///   require unattended login such as those used for services. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> SkipSecondAuth {
            get {
                return this.skipSecondAuthField;
            }
            set {
                this.skipSecondAuthField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Descriptive comments about this role, that could be used to provide a 
    ///   full description of this role's intended purpose. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to roleGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RoleGetCallParms {
        
        private string roleNameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the role to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string roleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to roleDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RoleDeleteCallParms {
        
        private string roleNameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the role to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string roleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to roleCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RoleCreateCallParms {
        
        private string roleNameField;
        
        private RoleParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the role to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string roleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
        
    /// <datatype>
    ///   RoleParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the creation of the role.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RoleParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a role.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RoleInfo {
        
        private string nameField;
        
        private bool systemRoleField;
        
        private bool allPermissionsField;
        
        private string[] permissionsField;
        
        private bool allPoliciesField;
        
        private string[] policyListField;
        
        private bool allGroupsField;
        
        private bool ownGroupField;
        
        private string[] groupListField;
        
        private bool allRolesField;
        
        private string[] roleListField;
        
        private bool allSmartCredentialDefinitionsField;
        
        private string[] smartCredentialDefinitionListField;
        
        private bool allSmartCredentialPrintModulesField;
        
        private string[] smartCredentialPrintModuleListField;
        
        private bool skipSecondAuthField;
        
        private string[] rolesGrantingAccessField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the role.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this role is a built-in system role, or one that 
    ///   was created after the system was installed. The built-in system roles 
    ///   cannot be modified with roleSet, nor can they be deleted with 
    ///   roleDelete. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool systemRole {
            get {
                return this.systemRoleField;
            }
            set {
                this.systemRoleField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this role grants all permissions.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allPermissions {
            get {
                return this.allPermissionsField;
            }
            set {
                this.allPermissionsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of the names of the permissions granted by the role. Any 
    ///   permission not included in this list is not allowed for the role. 
    ///   If allPermissions is true, this list will be nil.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this role grants access to all policies.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allPolicies {
            get {
                return this.allPoliciesField;
            }
            set {
                this.allPoliciesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of the names of policies that this role grants access to. If 
    ///   allPolicies is true, this list will be filled in with the names of 
    ///   all policies in the system. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] policyList {
            get {
                return this.policyListField;
            }
            set {
                this.policyListField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this role grants access to all groups.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allGroups {
            get {
                return this.allGroupsField;
            }
            set {
                this.allGroupsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, when assigned to an administrator, this role grants access to 
    ///   users who belong to the same group as the administrator. At most one 
    ///   of allGroups and ownGroup can be true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ownGroup {
            get {
                return this.ownGroupField;
            }
            set {
                this.ownGroupField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of the names of the groups that this role grants access to. 
    ///   If allGroups is true, this list will be filled in with the names of 
    ///   all groups in the system. 
    ///   If ownGroup is true, this list will have a single entry which is the 
    ///   name of the caller's group. 
    ///   In general, the allGroups and ownGroup flags should be checked before 
    ///   this list. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] groupList {
            get {
                return this.groupListField;
            }
            set {
                this.groupListField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this role grants access to all roles.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allRoles {
            get {
                return this.allRolesField;
            }
            set {
                this.allRolesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of the names of the roles that this role grants access to. If 
    ///   allRoles is true, this list will be filled in with the names of all 
    ///   roles in the system. 
    ///   In general, the allRoles flag should be checked before this list. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] roleList {
            get {
                return this.roleListField;
            }
            set {
                this.roleListField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this role grants access to all Smart Credential 
    ///   Definitions. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allSmartCredentialDefinitions {
            get {
                return this.allSmartCredentialDefinitionsField;
            }
            set {
                this.allSmartCredentialDefinitionsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of the names of Smart Credential Definitions that this role 
    ///   grants access to. If allSmartCredentialDefinitions is true, this list 
    ///   will be filled in with the names of all Smart Credential Definitions 
    ///   in the system. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] SmartCredentialDefinitionList {
            get {
                return this.smartCredentialDefinitionListField;
            }
            set {
                this.smartCredentialDefinitionListField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this role grants access to all Smart Credential 
    ///   Print Modules. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allSmartCredentialPrintModules {
            get {
                return this.allSmartCredentialPrintModulesField;
            }
            set {
                this.allSmartCredentialPrintModulesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of the names of Smart Credential Print Modules that this role 
    ///   grants access to. If allSmartCredentialPrintModules is true, this 
    ///   list will be filled in with the names of all Smart Credential Print 
    ///   Modules in the system. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] SmartCredentialPrintModuleList {
            get {
                return this.smartCredentialPrintModuleListField;
            }
            set {
                this.smartCredentialPrintModuleListField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If the skipSecondAuth flag is set to true for a role, administrators 
    ///   in this role will skip second factor authentication when logging into 
    ///   the Entrust IdentityGuard Administration Interface or Service even 
    ///   when policy dictates that second factor authentication is required. 
    ///   This flag should be set to true for administration identities that 
    ///   require unattended login such as those used for services. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool SkipSecondAuth {
            get {
                return this.skipSecondAuthField;
            }
            set {
                this.skipSecondAuthField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Descriptive comments about this role.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of RoleInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RoleInfoList {
        
        private RoleInfo[] roleInfoField;
        
    /// <datatype>
    ///   RoleInfo[]
    /// </datatype>
    /// <value>
    ///   List of information about roles.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public RoleInfo[] roleInfo {
            get {
                return this.roleInfoField;
            }
            set {
                this.roleInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a permission that may be included in a role's list of 
    ///   permissions. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class Permission {
        
        private string nameField;
        
        private string[] dependenciesField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of a permission.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   An optional list of names of permissions that this permission depends 
    ///   on. To be included in a role's permission list, all of the 
    ///   permissions named in this list must also be included. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] dependencies {
            get {
                return this.dependenciesField;
            }
            set {
                this.dependenciesField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of permissions.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PermissionsList {
        
        private Permission[] permissionsField;
        
    /// <datatype>
    ///   Permission[]
    /// </datatype>
    /// <value>
    ///   The list of permissions.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public Permission[] Permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   passwordRulesGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PasswordRulesGetCallParms {
        
        private string nameField;
        
        private string passwordNameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the password policy to retrieve. If null, it indicates the 
    ///   default policy should be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the password to retrieve from the policy. If null, the 
    ///   policy for the default password is returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string passwordName {
            get {
                return this.passwordNameField;
            }
            set {
                this.passwordNameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to pinSpecGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PinSpecGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the temporary PIN specification policy to retrieve. 
    ///   If null, it indicates the default policy should be returned.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   cardSpecGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CardSpecGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the card specification policy to retrieve. If null, it 
    ///   indicates the default policy should be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   userSpecGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSpecGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the user specification policy to retrieve. If null, it 
    ///   indicates the default policy should be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a list of PolicyInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PolicyInfoList {
        
        private PolicyInfo[] policyInfoField;
        
    /// <datatype>
    ///   PolicyInfo[]
    /// </datatype>
    /// <value>
    ///   Information about a policy.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public PolicyInfo[] policyInfo {
            get {
                return this.policyInfoField;
            }
            set {
                this.policyInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines basic information about a policy.
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolicyInfoEx))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PolicyInfo {
        
        private string nameField;
        
        private bool defaultPolicyField;
        
        private UserSpecInfo userSpecField;
        
        private CardSpecInfo cardSpecField;
        
        private PINSpecInfo pinSpecField;
        
        private PasswordRulesInfo passwordRulesField;
        
        private PasswordRulesInfo[] namedPasswordRulesField;
        
        private string[] rolesGrantingAccessField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the policy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, it means this policy is the default, and is used in 
    ///   situations where no policy is specified but a policy is required, such as 
    ///   during group creation. If false, this is not the default policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultPolicy {
            get {
                return this.defaultPolicyField;
            }
            set {
                this.defaultPolicyField = value;
            }
        }
        
    /// <datatype>
    ///   UserSpecInfo
    /// </datatype>
    /// <value>
    ///   The user specification for this policy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserSpecInfo userSpec {
            get {
                return this.userSpecField;
            }
            set {
                this.userSpecField = value;
            }
        }
        
    /// <datatype>
    ///   CardSpecInfo
    /// </datatype>
    /// <value>
    ///   The card specification for this policy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CardSpecInfo cardSpec {
            get {
                return this.cardSpecField;
            }
            set {
                this.cardSpecField = value;
            }
        }
        
    /// <datatype>
    ///   PINSpecInfo
    /// </datatype>
    /// <value>
    ///   The PIN specification for this policy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PINSpecInfo pinSpec {
            get {
                return this.pinSpecField;
            }
            set {
                this.pinSpecField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordRulesInfo
    /// </datatype>
    /// <value>
    ///   The default password rules for this policy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PasswordRulesInfo passwordRules {
            get {
                return this.passwordRulesField;
            }
            set {
                this.passwordRulesField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordRulesInfo[]
    /// </datatype>
    /// <value>
    ///   The list of named password rules for this policy.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public PasswordRulesInfo[] namedPasswordRules {
            get {
                return this.namedPasswordRulesField;
            }
            set {
                this.namedPasswordRulesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Descriptive comments about this policy, that could be used to provide 
    ///   a full description of this policy's intended purpose. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a user specification policy.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSpecInfo {
        
        private string nameField;
        
        private int maxAliasesField;
        
        private int maxContactInfoNumberField;
        
        private LockoutMode lockoutModeField;
        
        private int maxFailuresField;
        
        private int maxGlobalFailuresField;
        
        private int maxCertificateFailuresField;
        
        private int maxExternalFailuresField;
        
        private int maxGridFailuresField;
        
        private int maxTokenCRFailuresField;
        
        private int maxTokenROFailuresField;
        
        private int maxOTPFailuresField;
        
        private int maxQAFailuresField;
        
        private int maxRBAIPAuthFailuresField;
        
        private int maxRBAMachineAuthFailuresField;
        
        private int maxRBACertificateAuthFailuresField;
        
        private int maxRBAExternalRiskAuthFailuresField;
        
        private int lockoutTimeField;
        
        private int maxSecretSizeField;
        
        private int maxSecretNumberField;
        
        private AuthenticationType[] genericAuthTypeField;
        
        private AuthenticationType[] enhancedGenericAuthTypeField;
        
        private AuthenticationType[] machineAuthTypeField;
        
        private AuthenticationType[] authTypeCanViewSecretsField;
        
        private AuthenticationType[] authTypeCanModifySecretsField;
        
        private int maxMachineSecretsField;
        
        private int maxMachineSecretsSizeField;
        
        private bool machineSecretRequiresMachineNonceField;
        
        private bool machineSecretRequiresSequenceNonceField;
        
        private int machineSecretRequiresAppDataField;
        
        private int machineSecretAllowsBadAppDataField;
        
        private int machineSecretLifetimeField;
        
        private bool failedMachineAuthIncrementsLockoutField;
        
        private int maxAuthSecretsField;
        
        private int maxAuthSecretsSizeField;
        
        private int maxQuestionsField;
        
        private int maxQASizeField;
        
        private int qAChallengeSizeField;
        
        private int minQAChallengeSizeField;
        
        private int maxQAChallengeSizeField;
        
        private bool disableQAChallengeRetentionField;
        
        private int qAChallengeLifetimeField;
        
        private bool updateLockoutForReplacedQAChallengeField;
        
        private int qaDefaultWrongAnswersAllowedField;
        
        private int qaMaximumWrongAnswersAllowedField;
        
        private bool qaInexactMatchAllowedField;
        
        private string[] oTPCellAlphabetField;
        
        private CellReplacement[] oTPCellReplacementsField;
        
        private int oTPLifetimeField;
        
        private int oTPLengthField;
        
        private bool oTPDeliveryEnabledField;
        
        private bool oTPAlwaysGenerateField;
        
        private bool oTPDynamicRefreshField;
        
        private int oTPNumberOutstandingField;
        
        private int oTPRefreshThresholdField;
        
        private bool returnAuthSecretWithChallField;
        
        private bool autoUnassignTokensField;
        
        private bool autoMoveTokensField;
        
        private bool disableTokenChallengeRetentionField;
        
        private int tokenChallengeLifetimeField;
        
        private bool updateLockoutForReplacedTokenChallengeField;
        
        private int maxAllowedTokenSetsField;
        
        private bool allowNONEAuthenticationField;
        
        private bool considerTempPINLastField;
        
        private bool storeLastAuthInfoField;
        
        private bool allowCreateIfDisabledInRepositoryField;
        
        private bool allowCreateIfExpiredInRepositoryField;
        
        private bool allowAuthIfDisabledInRepositoryField;
        
        private bool allowAuthIfExpiredInRepositoryField;
        
        private TransactionSignatureType transactionSignatureTypeField;
        
        private int transactionLifetimeField;
        
        private int maxNumTransactionDetailsField;
        
        private bool allowSelfSignedUserCertField;
        
        private bool allowCertNotIssuedByRegisteredCAField;
        
        private bool allowAllRegisteredCAsField;
        
        private string[] allowedRegisteredCAsField;
        
        private bool allowCertNotIssuedByManagedCAField;
        
        private bool allowAllManagedCAsField;
        
        private string[] allowedManagedCAsField;
        
        private string certificateAuthenticationHashAlgField;
        
        private int certificateAuthenticationChallengeSizeField;
        
        private int maxCertsPerUserField;
        
        private bool autoDeleteUserCertsField;
        
        private bool disableCertificateChallengeRetentionField;
        
        private int certificateChallengeLifetimeField;
        
        private bool updateLockoutForReplacedCertificateChallengeField;
        
        private bool allowCertificateChallengeDeliveryField;
        
        private bool allowCertificateTransactionDeliveryField;
        
        private bool allowCertificateSignField;
        
        private bool allowAllSmartCredentialDefinitionsField;
        
        private string[] allowedSmartCredentialDefinitionsField;
        
        private int maxSmartCredentialsPerUserField;
        
        private string smartCredentialIDPrefixField;
        
        private string smartCredentialTokenVendorField;
        
        private bool autoUnassignSmartCredentialsField;
        
        private bool autoCancelSmartCredentialsField;
        
        private bool autoCancelSmartCredentialsForceField;
        
        private bool autoMoveSmartCredentialsField;
        
        private bool autoRegisterSmartCredentialsToPACSField;
        
        private bool autoSuspendSmartCredentialsFromPACSField;
        
        private bool allowSoftwareSmartCredentialsField;
        
        private PINPromptType mobileSmartCredentialPINPromptField;
        
        private int mobileSmartCredentialSessionTimeoutField;
        
        private bool allowAllDigitalIdConfigsField;
        
        private string[] allowedDigitalIdConfigsField;
        
        private int maxDigitalIdsPerUserField;
        
        private int maxClientTypesPerDigitalIdField;
        
        private bool autoCancelDigitalIdsField;
        
        private int userRegistrationPasswordLifetimeField;
        
        private int userRegistrationPasswordLengthField;
        
        private int maxFederationsPerUserField;
        
        private int maxNumUserPreferencesField;
        
        private int maxSizeUserPreferenceField;
        
        private int pVNLengthField;
        
        private bool pVNChangeRequiredOnAdminResetField;
        
        private AuthenticationType[] authTypesRequiringPVNField;
        
        private bool allTokenVendorsRequirePVNField;
        
        private string[] tokenVendorsRequiringPVNField;
        
        private int numDaysForActivationField;
        
        private AuthenticationType[] activationAuthTypesField;
        
        private bool checkIPAddressInLocationHistoryField;
        
        private int maxLocationHistorySizeField;
        
        private int locationHistoryLifetimeField;
        
        private int maxVelocityField;
        
        private bool checkVelocityField;
        
        private CountryInfo[] countryBlacklistField;
        
        private ExpectedLocation[] expectedLocationsField;
        
        private int maxUserExpectedLocationsSizeField;
        
        private RBAExpressionList normalRejectField;
        
        private RBAExpressionList normalAuthenticatedField;
        
        private RBAExpressionList enhancedRejectField;
        
        private RBAExpressionList enhancedAuthenticatedField;
        
        private int externalRiskScoreNormalPassField;
        
        private int externalRiskScoreNormalFailField;
        
        private int externalRiskScoreEnhancedPassField;
        
        private int externalRiskScoreEnhancedFailField;
        
        private string externalRiskEngineField;
        
        private bool performTransactionDeliveryField;
        
        private bool softTokenPINRequiredField;
        
        private int softTokenOTPLengthField;
        
        private string[] rolesGrantingAccessField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the user specification policy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of aliases that can be assigned to a user. A value 
    ///   of 0 means that users are not allowed to have aliases. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxAliases {
            get {
                return this.maxAliasesField;
            }
            set {
                this.maxAliasesField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of contact information entries for a user. A value 
    ///   of 0 means that no contact information can be stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxContactInfoNumber {
            get {
                return this.maxContactInfoNumberField;
            }
            set {
                this.maxContactInfoNumberField = value;
            }
        }
        
    /// <datatype>
    ///   LockoutMode
    /// </datatype>
    /// <value>
    ///   The authentication lockout mode.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LockoutMode lockoutMode {
            get {
                return this.lockoutModeField;
            }
            set {
                this.lockoutModeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive authentication failures allowed before a 
    ///   user is locked out. A value of 0 means the user is never locked out, no 
    ///   matter how many times they fail to authenticate. 
    ///   The various maxXXXFailures policies should be used instead of this 
    ///   policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxFailures {
            get {
                return this.maxFailuresField;
            }
            set {
                this.maxFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive authentication failures allowed across all 
    ///   authentication types before a user is locked out. A value of 0 means 
    ///   the user is never locked out, no matter how many times they fail to 
    ///   authenticate. 
    ///   This policy is used with the GLOBAL lockout mode.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxGlobalFailures {
            get {
                return this.maxGlobalFailuresField;
            }
            set {
                this.maxGlobalFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive CERTIFICATE authentication failures allowed 
    ///   before a user is locked out. A value of 0 means the user is never 
    ///   locked out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxCertificateFailures {
            get {
                return this.maxCertificateFailuresField;
            }
            set {
                this.maxCertificateFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive EXTERNAL authentication failures allowed 
    ///   before a user is locked out. A value of 0 means the user is never locked 
    ///   out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxExternalFailures {
            get {
                return this.maxExternalFailuresField;
            }
            set {
                this.maxExternalFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive GRID authentication failures allowed before 
    ///   a user is locked out. A value of 0 means the user is never locked 
    ///   out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxGridFailures {
            get {
                return this.maxGridFailuresField;
            }
            set {
                this.maxGridFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive TOKENCR authentication failures allowed 
    ///   before a user is locked out. A value of 0 means the user is never locked 
    ///   out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxTokenCRFailures {
            get {
                return this.maxTokenCRFailuresField;
            }
            set {
                this.maxTokenCRFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive TOKENRO authentication failures allowed 
    ///   before a user is locked out. A value of 0 means the user is never locked 
    ///   out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxTokenROFailures {
            get {
                return this.maxTokenROFailuresField;
            }
            set {
                this.maxTokenROFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive OTP authentication failures allowed before a 
    ///   user is locked out. A value of 0 means the user is never locked out, 
    ///   no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxOTPFailures {
            get {
                return this.maxOTPFailuresField;
            }
            set {
                this.maxOTPFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive QA authentication failures allowed before a 
    ///   user is locked out. A value of 0 means the user is never locked out, 
    ///   no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxQAFailures {
            get {
                return this.maxQAFailuresField;
            }
            set {
                this.maxQAFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive RBA IP authentication failures allowed 
    ///   before a user is locked out. A value of 0 means the user is never locked 
    ///   out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxRBAIPAuthFailures {
            get {
                return this.maxRBAIPAuthFailuresField;
            }
            set {
                this.maxRBAIPAuthFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive RBA Machine authentication failures allowed 
    ///   before a user is locked out. A value of 0 means the user is never 
    ///   locked out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxRBAMachineAuthFailures {
            get {
                return this.maxRBAMachineAuthFailuresField;
            }
            set {
                this.maxRBAMachineAuthFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive RBA Certificate authentication failures 
    ///   allowed before a user is locked out. A value of 0 means the user is never 
    ///   locked out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxRBACertificateAuthFailures {
            get {
                return this.maxRBACertificateAuthFailuresField;
            }
            set {
                this.maxRBACertificateAuthFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive RBA external risk authentication failures 
    ///   allowed before a user is locked out. A value of 0 means the user is 
    ///   never locked out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxRBAExternalRiskAuthFailures {
            get {
                return this.maxRBAExternalRiskAuthFailuresField;
            }
            set {
                this.maxRBAExternalRiskAuthFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of minutes a user remains locked out. A value of 0 means 
    ///   the user remains locked out until unlocked by an administrator. 
    ///   This policy is used with the GLOBAL, ALL_AUTHENTICATOR and 
    ///   PER_AUTHENTICATOR lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int lockoutTime {
            get {
                return this.lockoutTimeField;
            }
            set {
                this.lockoutTimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size of the shared secrets for a user, in kilobytes. A 
    ///   value of 0 means that users are not allowed to have shared secrets. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxSecretSize {
            get {
                return this.maxSecretSizeField;
            }
            set {
                this.maxSecretSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of shared secrets for a user. A value of 0 means 
    ///   that users are not allowed to have shared secrets. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxSecretNumber {
            get {
                return this.maxSecretNumberField;
            }
            set {
                this.maxSecretNumberField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   The type of authentications that can be used for generic 
    ///   authentication operations with a normal security level. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] genericAuthType {
            get {
                return this.genericAuthTypeField;
            }
            set {
                this.genericAuthTypeField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   The type of authentications that can be used for generic 
    ///   authentication operations with an enhanced security level. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] enhancedGenericAuthType {
            get {
                return this.enhancedGenericAuthTypeField;
            }
            set {
                this.enhancedGenericAuthTypeField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   The type of authentications that can be used for machine registration 
    ///   authentication operations. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] machineAuthType {
            get {
                return this.machineAuthTypeField;
            }
            set {
                this.machineAuthTypeField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   The type of authentications that can view mutual authentication 
    ///   secrets and shared secrets during authentication operations. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] authTypeCanViewSecrets {
            get {
                return this.authTypeCanViewSecretsField;
            }
            set {
                this.authTypeCanViewSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   The type of authentications that can modify mutual authentication 
    ///   secrets and shared secrets during authentication operations. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] authTypeCanModifySecrets {
            get {
                return this.authTypeCanModifySecretsField;
            }
            set {
                this.authTypeCanModifySecretsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of machine secrets for a user. A value of 0 means 
    ///   that no machine secrets can be stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxMachineSecrets {
            get {
                return this.maxMachineSecretsField;
            }
            set {
                this.maxMachineSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size of a single machine secret for a user, in kilobytes. 
    ///   A value of 0 means that no machine secrets can be stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxMachineSecretsSize {
            get {
                return this.maxMachineSecretsSizeField;
            }
            set {
                this.maxMachineSecretsSizeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if machine secrets must contain the machine nonce 
    ///   when used for authentication. 
    ///   If this flag is false, the machineSecretRequiresAppData setting will 
    ///   be greater than 0, and the machineSecretAllowsBadAppData setting will 
    ///   be 0. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool machineSecretRequiresMachineNonce {
            get {
                return this.machineSecretRequiresMachineNonceField;
            }
            set {
                this.machineSecretRequiresMachineNonceField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if machine secrets must contain the sequence nonce 
    ///   when used for authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool machineSecretRequiresSequenceNonce {
            get {
                return this.machineSecretRequiresSequenceNonceField;
            }
            set {
                this.machineSecretRequiresSequenceNonceField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   A count indicating how many application data values must be contained 
    ///   in a machine secret used for authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int machineSecretRequiresAppData {
            get {
                return this.machineSecretRequiresAppDataField;
            }
            set {
                this.machineSecretRequiresAppDataField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   A count indicating how many application data values in a machine 
    ///   secret being used for authentication can be bad before validation fails. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int machineSecretAllowsBadAppData {
            get {
                return this.machineSecretAllowsBadAppDataField;
            }
            set {
                this.machineSecretAllowsBadAppDataField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Machine secret lifetime in hours. A value of 0 means an infinite 
    ///   lifetime. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int machineSecretLifetime {
            get {
                return this.machineSecretLifetimeField;
            }
            set {
                this.machineSecretLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating whether or not a failed machine authentication 
    ///   results in a user's failed login attempt counter for machine 
    ///   authentication being incremented. If this flag is set to true, too many failed 
    ///   machine authentications will cause a user's account to be locked out. 
    ///   This may be problematic if, at the application level, a failed machine 
    ///   authentication is always followed by a second factor authentication, 
    ///   as the user will be locked out by failed machine authentications 
    ///   before they can attempt the maximum number of second factor 
    ///   authentications allowed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool failedMachineAuthIncrementsLockout {
            get {
                return this.failedMachineAuthIncrementsLockoutField;
            }
            set {
                this.failedMachineAuthIncrementsLockoutField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of authentication secrets for a user. A value of 0 
    ///   means that no authentication secrets can be stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxAuthSecrets {
            get {
                return this.maxAuthSecretsField;
            }
            set {
                this.maxAuthSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size of authentication secrets for a user, in kilobytes. A 
    ///   value of 0 means that no authentication secrets can be stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxAuthSecretsSize {
            get {
                return this.maxAuthSecretsSizeField;
            }
            set {
                this.maxAuthSecretsSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of question and answer pairs for a user. A value of 
    ///   0 means that no question and answer pairs can be stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxQuestions {
            get {
                return this.maxQuestionsField;
            }
            set {
                this.maxQuestionsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size of question and answer (QA) pairs stored for a user, 
    ///   in kilobytes. A value of 0 means that no QA pairs can be stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxQASize {
            get {
                return this.maxQASizeField;
            }
            set {
                this.maxQASizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of questions in a QA challenge.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int QAChallengeSize {
            get {
                return this.qAChallengeSizeField;
            }
            set {
                this.qAChallengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The minimum number of questions allowed in a question and answer 
    ///   challenge when the call to obtain such a challenge overrides the default. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int minQAChallengeSize {
            get {
                return this.minQAChallengeSizeField;
            }
            set {
                this.minQAChallengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of questions allowed in a question and answer 
    ///   challenge when the call to obtain such a challenge overrides the default. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxQAChallengeSize {
            get {
                return this.maxQAChallengeSizeField;
            }
            set {
                this.maxQAChallengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, challenge retention is disabled for QA challenges. This means 
    ///   a new challenge will be generated for every challenge request. 
    ///   Note that doing this allows an attacker who knows some of the users 
    ///   answers to request different challenges until they receive a challenge 
    ///   that they can answer. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool disableQAChallengeRetention {
            get {
                return this.disableQAChallengeRetentionField;
            }
            set {
                this.disableQAChallengeRetentionField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the QA challenge lifetime in seconds. A value of 0 means 
    ///   infinite lifetime. 
    ///   When requesting a challenge, if the retained challenge has exceeded 
    ///   its lifetime a new challenge is generated. When authenticating a 
    ///   challenge, if the retained challenge has exceeded its lifetime a 
    ///   USER_NO_CHALLENGE error is returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int QAChallengeLifetime {
            get {
                return this.qAChallengeLifetimeField;
            }
            set {
                this.qAChallengeLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the lockout count is updated when an existing QA challenge is 
    ///   replaced during a challenge request either because challenge 
    ///   retention is disabled or because its lifetime has expired. If false, the 
    ///   lockout count is not updated. The default for this policy is true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool updateLockoutForReplacedQAChallenge {
            get {
                return this.updateLockoutForReplacedQAChallengeField;
            }
            set {
                this.updateLockoutForReplacedQAChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The default number of wrong answers that are allowed in response to a 
    ///   question and answer challenge and still have the response be 
    ///   considered correct. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int qaDefaultWrongAnswersAllowed {
            get {
                return this.qaDefaultWrongAnswersAllowedField;
            }
            set {
                this.qaDefaultWrongAnswersAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of wrong answers that are allowed in response to a 
    ///   question and answer challenge and still have the response be 
    ///   considered correct. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int qaMaximumWrongAnswersAllowed {
            get {
                return this.qaMaximumWrongAnswersAllowedField;
            }
            set {
                this.qaMaximumWrongAnswersAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if word substitutions can be used when comparing the 
    ///   answer and response in a question and answer challenge. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool qaInexactMatchAllowed {
            get {
                return this.qaInexactMatchAllowedField;
            }
            set {
                this.qaInexactMatchAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The characters that can appear in a one-time password (OTP).
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] OTPCellAlphabet {
            get {
                return this.oTPCellAlphabetField;
            }
            set {
                this.oTPCellAlphabetField = value;
            }
        }
        
    /// <datatype>
    ///   CellReplacement[]
    /// </datatype>
    /// <value>
    ///   A list of characters that are replaced in a one-time password (OTP) 
    ///   response before it is validated. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CellReplacement[] OTPCellReplacements {
            get {
                return this.oTPCellReplacementsField;
            }
            set {
                this.oTPCellReplacementsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The lifetime in seconds of a one-time password (OTP). A value of 0 
    ///   means an infinite lifetime. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int OTPLifetime {
            get {
                return this.oTPLifetimeField;
            }
            set {
                this.oTPLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of characters in a one-time password (OTP).
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int OTPLength {
            get {
                return this.oTPLengthField;
            }
            set {
                this.oTPLengthField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if a user's one-time password (OTP) can be delivered 
    ///   via an out-of-band delivery mechanism. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool OTPDeliveryEnabled {
            get {
                return this.oTPDeliveryEnabledField;
            }
            set {
                this.oTPDeliveryEnabledField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if a new OTP is generated for each challenge request. 
    ///   If set to false, a new OTP is generated only if there is no existing 
    ///   OTP or the current OTP is expired. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool OTPAlwaysGenerate {
            get {
                return this.oTPAlwaysGenerateField;
            }
            set {
                this.oTPAlwaysGenerateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if OTP dynamic refresh is enabled. If set to true, new 
    ///   OTPs are automatically generated after authentication. 
    ///   If set to false, new OTPs are generated as necessary when an OTP 
    ///   challenge is requested. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool OTPDynamicRefresh {
            get {
                return this.oTPDynamicRefreshField;
            }
            set {
                this.oTPDynamicRefreshField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Number of outstanding OTPs allowed for users.
    ///   The value must be a positive integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int OTPNumberOutstanding {
            get {
                return this.oTPNumberOutstandingField;
            }
            set {
                this.oTPNumberOutstandingField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   When the number of OTPs below the number outstanding reaches the 
    ///   specified threshold, new OTPs are generated. This value must be a positive 
    ///   integer not exceeding the OTPNumberOutstanding policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int OTPRefreshThreshold {
            get {
                return this.oTPRefreshThresholdField;
            }
            set {
                this.oTPRefreshThresholdField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if mutual authentication secrets can be returned with 
    ///   a challenge. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ReturnAuthSecretWithChall {
            get {
                return this.returnAuthSecretWithChallField;
            }
            set {
                this.returnAuthSecretWithChallField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if user tokens are automatically unassigned when the 
    ///   user they belong to is deleted. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AutoUnassignTokens {
            get {
                return this.autoUnassignTokensField;
            }
            set {
                this.autoUnassignTokensField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if tokens are automatically moved to the user's group 
    ///   during assignment. 
    ///   The administrator requires access to both groups and the tokenSet 
    ///   permission in order to move the token to the user's group. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AutoMoveTokens {
            get {
                return this.autoMoveTokensField;
            }
            set {
                this.autoMoveTokensField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, challenge retention is disabled for TOKENCR challenges. This 
    ///   means a new challenge will be generated for every challenge request. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool disableTokenChallengeRetention {
            get {
                return this.disableTokenChallengeRetentionField;
            }
            set {
                this.disableTokenChallengeRetentionField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the TOKENCR challenge lifetime in seconds. A value of 0 
    ///   means infinite lifetime. 
    ///   When requesting a challenge, if the retained challenge has exceeded 
    ///   its lifetime a new challenge is generated. When authenticating a 
    ///   challenge, if the retained challenge has exceeded its lifetime a 
    ///   USER_NO_CHALLENGE error is returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int tokenChallengeLifetime {
            get {
                return this.tokenChallengeLifetimeField;
            }
            set {
                this.tokenChallengeLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the lockout count is updated when an existing TOKENCR 
    ///   challenge is replaced during a challenge request either because challenge 
    ///   retention is disabled or because its lifetime has expired. If false, 
    ///   the lockout count is not updated. The default for this policy is true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool updateLockoutForReplacedTokenChallenge {
            get {
                return this.updateLockoutForReplacedTokenChallengeField;
            }
            set {
                this.updateLockoutForReplacedTokenChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of allowed token sets for users with this policy. 
    ///   The value must be a positive integer. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MaxAllowedTokenSets {
            get {
                return this.maxAllowedTokenSetsField;
            }
            set {
                this.maxAllowedTokenSetsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if the NONE authentication type can be used when 
    ///   performing an authentication request. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowNONEAuthentication {
            get {
                return this.allowNONEAuthenticationField;
            }
            set {
                this.allowNONEAuthenticationField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if the temporary PIN is considered last when Entrust 
    ///   IdentityGuard is selecting a user's authentication type. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ConsiderTempPINLast {
            get {
                return this.considerTempPINLastField;
            }
            set {
                this.considerTempPINLastField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if information about the last authentication for a 
    ///   user is stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool StoreLastAuthInfo {
            get {
                return this.storeLastAuthInfoField;
            }
            set {
                this.storeLastAuthInfoField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if repository entries that are disabled can be used to 
    ///   create Entrust IdentityGuard users. If false (the default), disabled 
    ///   repository entries will be skipped over during user creation. If 
    ///   true, disabled repository entries may be used to store the Entrust 
    ///   IdentityGuard user data. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowCreateIfDisabledInRepository {
            get {
                return this.allowCreateIfDisabledInRepositoryField;
            }
            set {
                this.allowCreateIfDisabledInRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if repository entries that are expired can be used to 
    ///   create Entrust IdentityGuard users. If false (the default), expired 
    ///   repository entries will be skipped over during user creation. If true, 
    ///   expired repository entries may be used to store the Entrust 
    ///   IdentityGuard user data. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowCreateIfExpiredInRepository {
            get {
                return this.allowCreateIfExpiredInRepositoryField;
            }
            set {
                this.allowCreateIfExpiredInRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if an Entrust IdentityGuard user can perform 
    ///   authentication operations when their repository entry is disabled. 
    ///   If false (the default), users with a disabled repository entry cannot 
    ///   authenticate and any attempt to authenticate will fail. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowAuthIfDisabledInRepository {
            get {
                return this.allowAuthIfDisabledInRepositoryField;
            }
            set {
                this.allowAuthIfDisabledInRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if an Entrust IdentityGuard user can perform 
    ///   authentication operations when their repository entry is expired. 
    ///   If false (the default), users with an expired repository entry cannot 
    ///   authenticate and any attempt to authenticate will fail. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowAuthIfExpiredInRepository {
            get {
                return this.allowAuthIfExpiredInRepositoryField;
            }
            set {
                this.allowAuthIfExpiredInRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   TransactionSignatureType
    /// </datatype>
    /// <value>
    ///   Specifies how transaction receipts are signed.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionSignatureType TransactionSignatureType {
            get {
                return this.transactionSignatureTypeField;
            }
            set {
                this.transactionSignatureTypeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the lifetime of a transaction in seconds.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int TransactionLifetime {
            get {
                return this.transactionLifetimeField;
            }
            set {
                this.transactionLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the maximum number of transaction details that can be 
    ///   specified for a transaction. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MaxNumTransactionDetails {
            get {
                return this.maxNumTransactionDetailsField;
            }
            set {
                this.maxNumTransactionDetailsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies if self-signed user certificates can be assigned to a user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowSelfSignedUserCert {
            get {
                return this.allowSelfSignedUserCertField;
            }
            set {
                this.allowSelfSignedUserCertField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies if a user certificate that isn't self-signed but not issued 
    ///   by a CA registered with Entrust IdentityGuard can be can be assigned 
    ///   to a user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowCertNotIssuedByRegisteredCA {
            get {
                return this.allowCertNotIssuedByRegisteredCAField;
            }
            set {
                this.allowCertNotIssuedByRegisteredCAField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies that user certificates issued by any CA registered with 
    ///   Entrust IdentityGuard can be assigned to a user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowAllRegisteredCAs {
            get {
                return this.allowAllRegisteredCAsField;
            }
            set {
                this.allowAllRegisteredCAsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   User certificates issued by the specified registered CAs can be 
    ///   assigned to a user. 
    ///   If the AllowAllRegisteredCAs policy is set to true, this policy will 
    ///   not be set. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] AllowedRegisteredCAs {
            get {
                return this.allowedRegisteredCAsField;
            }
            set {
                this.allowedRegisteredCAsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies if a user certificate that is not issued by a managed CA can 
    ///   be used to authenticate a user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowCertNotIssuedByManagedCA {
            get {
                return this.allowCertNotIssuedByManagedCAField;
            }
            set {
                this.allowCertNotIssuedByManagedCAField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies that user certificates issued by any managed CA can be used 
    ///   to authenticate a user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowAllManagedCAs {
            get {
                return this.allowAllManagedCAsField;
            }
            set {
                this.allowAllManagedCAsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   User certificates issued by the specified managed CAs can be used to 
    ///   authenticate a user. 
    ///   If the AllowAllManagedCAs policy is set to true, this policy will not 
    ///   be set. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] AllowedManagedCAs {
            get {
                return this.allowedManagedCAsField;
            }
            set {
                this.allowedManagedCAsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the hashing algorithm used for certificate authentication. 
    ///   Possible values are MD5, SHA-1 and SHA-256. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CertificateAuthenticationHashAlg {
            get {
                return this.certificateAuthenticationHashAlgField;
            }
            set {
                this.certificateAuthenticationHashAlgField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the size of the certificate authentication challenge. The 
    ///   value must be between 32 and 1000 and has a default value of 32. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int CertificateAuthenticationChallengeSize {
            get {
                return this.certificateAuthenticationChallengeSizeField;
            }
            set {
                this.certificateAuthenticationChallengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the maximum number of certificates that can be assigned to a 
    ///   user. 
    ///   This value must be a non-negative integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MaxCertsPerUser {
            get {
                return this.maxCertsPerUserField;
            }
            set {
                this.maxCertsPerUserField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating whether old user certificates are automatically 
    ///   deleted from a user when the user has reached the maximum number of 
    ///   allowed certificates. Certificates are only automatically deleted when new 
    ///   certificates are assigned during authentication. Certificates are 
    ///   not automatically deleted when new certificates are assigned by an 
    ///   administrator. 
    ///   that can be assigned to a user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AutoDeleteUserCerts {
            get {
                return this.autoDeleteUserCertsField;
            }
            set {
                this.autoDeleteUserCertsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, challenge retention is disabled for CERTIFICATE challenges. 
    ///   This means a new challenge will be generated for every challenge 
    ///   request. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool disableCertificateChallengeRetention {
            get {
                return this.disableCertificateChallengeRetentionField;
            }
            set {
                this.disableCertificateChallengeRetentionField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the CERTIFICATE challenge lifetime in seconds. A value of 0 
    ///   means infinite lifetime. 
    ///   When requesting a challenge, if the retained challenge has exceeded 
    ///   its lifetime a new challenge is generated. When authenticating a 
    ///   challenge, if the retained challenge has exceeded its lifetime a 
    ///   USER_NO_CHALLENGE error is returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int certificateChallengeLifetime {
            get {
                return this.certificateChallengeLifetimeField;
            }
            set {
                this.certificateChallengeLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the lockout count is updated when an existing CERTIFICATE 
    ///   challenge is replaced during a challenge request either because 
    ///   challenge retention is disabled or because its lifetime has expired. If 
    ///   false, the lockout count is not updated. The default for this policy is 
    ///   true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool updateLockoutForReplacedCertificateChallenge {
            get {
                return this.updateLockoutForReplacedCertificateChallengeField;
            }
            set {
                this.updateLockoutForReplacedCertificateChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, challenge delivery is allowed for CERTIFICATE challenges. 
    ///   This means a new challenge can be delivered to mobile smart credentials 
    ///   that are registered to receive certificate challenges. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowCertificateChallengeDelivery {
            get {
                return this.allowCertificateChallengeDeliveryField;
            }
            set {
                this.allowCertificateChallengeDeliveryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, transaction delivery is allowed for CERTIFICATE challenges. 
    ///   This means transaction details can be delivered to mobile smart 
    ///   credentials that are registered to receive certificate challenges. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowCertificateTransactionDelivery {
            get {
                return this.allowCertificateTransactionDeliveryField;
            }
            set {
                this.allowCertificateTransactionDeliveryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, signing operations are allowed for smart credentials 
    ///   supporting certificate challenges. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowCertificateSign {
            get {
                return this.allowCertificateSignField;
            }
            set {
                this.allowCertificateSignField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies that any Smart Credential Definition can be used to create 
    ///   Smart Credentials for a user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowAllSmartCredentialDefinitions {
            get {
                return this.allowAllSmartCredentialDefinitionsField;
            }
            set {
                this.allowAllSmartCredentialDefinitionsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   Specifies a list of Smart Credential Definitions that can be used to 
    ///   create Smart Credentials for a user. 
    ///   If the AllowAllSmartCredentialDefinitions policy is set to true, this 
    ///   policy will not be set. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] AllowedSmartCredentialDefinitions {
            get {
                return this.allowedSmartCredentialDefinitionsField;
            }
            set {
                this.allowedSmartCredentialDefinitionsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the maximum number of Smart Credentials that can be created 
    ///   for a user. 
    ///   This value must be a non-negative integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MaxSmartCredentialsPerUser {
            get {
                return this.maxSmartCredentialsPerUserField;
            }
            set {
                this.maxSmartCredentialsPerUserField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The prefix added to Smart Credential Ids.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SmartCredentialIDPrefix {
            get {
                return this.smartCredentialIDPrefixField;
            }
            set {
                this.smartCredentialIDPrefixField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The token vendor used when creating a token for the Smart Credential 
    ///   OTP applet. 
    ///   If not set, the default token vendor is used. The specified token 
    ///   vendor must support token creation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SmartCredentialTokenVendor {
            get {
                return this.smartCredentialTokenVendorField;
            }
            set {
                this.smartCredentialTokenVendorField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if user smart credentials are automatically unassigned 
    ///   when they or the user they belong to is deleted. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AutoUnassignSmartCredentials {
            get {
                return this.autoUnassignSmartCredentialsField;
            }
            set {
                this.autoUnassignSmartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if user smart credentials are automatically canceled 
    ///   when they are deleted or unassigned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AutoCancelSmartCredentials {
            get {
                return this.autoCancelSmartCredentialsField;
            }
            set {
                this.autoCancelSmartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if the force option is applied when smart credentials 
    ///   or auto-canceled. 
    ///   This option only applies if AutoCancelSmartCredentials is true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AutoCancelSmartCredentialsForce {
            get {
                return this.autoCancelSmartCredentialsForceField;
            }
            set {
                this.autoCancelSmartCredentialsForceField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if smart credentials are automatically moved to the 
    ///   user's group during assignment. 
    ///   The administrator requires access to both groups and the 
    ///   smartCredentialSet permission in order to move the smart credentials to the user's 
    ///   group. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AutoMoveSmartCredentials {
            get {
                return this.autoMoveSmartCredentialsField;
            }
            set {
                this.autoMoveSmartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if smart credentials are automatically registered to 
    ///   PACS if appropriate when they are issued. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AutoRegisterSmartCredentialsToPACS {
            get {
                return this.autoRegisterSmartCredentialsToPACSField;
            }
            set {
                this.autoRegisterSmartCredentialsToPACSField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if smart credentials are automatically suspended from 
    ///   PACS if appropriate when they are deleted. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AutoSuspendSmartCredentialsFromPACS {
            get {
                return this.autoSuspendSmartCredentialsFromPACSField;
            }
            set {
                this.autoSuspendSmartCredentialsFromPACSField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if software smart credentials can be activated for 
    ///   users with this policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowSoftwareSmartCredentials {
            get {
                return this.allowSoftwareSmartCredentialsField;
            }
            set {
                this.allowSoftwareSmartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   PINPromptType
    /// </datatype>
    /// <value>
    ///   Policy indicating how the mobile smart credential applications will 
    ///   prompt the user for their PIN. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PINPromptType MobileSmartCredentialPINPrompt {
            get {
                return this.mobileSmartCredentialPINPromptField;
            }
            set {
                this.mobileSmartCredentialPINPromptField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Policy indicating the session timeout after which the mobile smart 
    ///   credential will prompt the user to re-enter their PIN when the Mobile 
    ///   SmartCredential PIN Prompt policy is set to SESSION. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MobileSmartCredentialSessionTimeout {
            get {
                return this.mobileSmartCredentialSessionTimeoutField;
            }
            set {
                this.mobileSmartCredentialSessionTimeoutField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies that any Digital Id Config can be used to create Digital Ids 
    ///   for a user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowAllDigitalIdConfigs {
            get {
                return this.allowAllDigitalIdConfigsField;
            }
            set {
                this.allowAllDigitalIdConfigsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   Specifies a list of Digital Id Configs that can be used to create 
    ///   Digital Ids for a user. 
    ///   If the AllowAllDigitalIdConfigs policy is set to true, this policy 
    ///   will not be set. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] AllowedDigitalIdConfigs {
            get {
                return this.allowedDigitalIdConfigsField;
            }
            set {
                this.allowedDigitalIdConfigsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the maximum number of Digital Ids that can be created for a 
    ///   user. 
    ///   This value must be a non-negative integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MaxDigitalIdsPerUser {
            get {
                return this.maxDigitalIdsPerUserField;
            }
            set {
                this.maxDigitalIdsPerUserField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the maximum number of Client Types for a Digital Id. 
    ///   This value must be a non-negative integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MaxClientTypesPerDigitalId {
            get {
                return this.maxClientTypesPerDigitalIdField;
            }
            set {
                this.maxClientTypesPerDigitalIdField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if user digital ids are automatically cancelled when 
    ///   they, a smart credential using the digital Id or the user they belong 
    ///   to is deleted. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AutoCancelDigitalIds {
            get {
                return this.autoCancelDigitalIdsField;
            }
            set {
                this.autoCancelDigitalIdsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   User registration password lifetime in minutes.
    ///   A value of 0 means an infinite lifetime.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int UserRegistrationPasswordLifetime {
            get {
                return this.userRegistrationPasswordLifetimeField;
            }
            set {
                this.userRegistrationPasswordLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of random bytes in a user registration password. The value 
    ///   must be between 8 and 32. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int UserRegistrationPasswordLength {
            get {
                return this.userRegistrationPasswordLengthField;
            }
            set {
                this.userRegistrationPasswordLengthField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the maximum number of federations that can be created for a 
    ///   user. 
    ///   This value must be a non-negative integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MaxFederationsPerUser {
            get {
                return this.maxFederationsPerUserField;
            }
            set {
                this.maxFederationsPerUserField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of user preferences allowed for a user. This value 
    ///   must be a non-negative integer. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MaxNumUserPreferences {
            get {
                return this.maxNumUserPreferencesField;
            }
            set {
                this.maxNumUserPreferencesField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size in characters of the value for a user preference. 
    ///   This value must be a non-negative integer. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MaxSizeUserPreference {
            get {
                return this.maxSizeUserPreferenceField;
            }
            set {
                this.maxSizeUserPreferenceField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The required length of new personal verification numbers (PVNs). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int PVNLength {
            get {
                return this.pVNLengthField;
            }
            set {
                this.pVNLengthField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates whether a user is required to change their personal 
    ///   verification number (PVN) after it is set by an administrator. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool PVNChangeRequiredOnAdminReset {
            get {
                return this.pVNChangeRequiredOnAdminResetField;
            }
            set {
                this.pVNChangeRequiredOnAdminResetField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   The authentication types that require a personal verification number 
    ///   to be provided when authenticating. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] AuthTypesRequiringPVN {
            get {
                return this.authTypesRequiringPVNField;
            }
            set {
                this.authTypesRequiringPVNField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If a PVN is required for TOKENRO or TOKENCR authentication, this 
    ///   setting indicates if authentication requests for all token vendors must 
    ///   specify the PVN. If set to false then the tokenVendorsRequringPVN 
    ///   attribute specifies the token vendors that require a PVN. When creating a 
    ///   new policy, this setting defaults to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allTokenVendorsRequirePVN {
            get {
                return this.allTokenVendorsRequirePVNField;
            }
            set {
                this.allTokenVendorsRequirePVNField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If a PVN is required for TOKENRO or TOKENCR authentication, this 
    ///   setting indicates if authentication requests for a specific token vendor 
    ///   must specify the PVN. This attribute is ignored if 
    ///   tokenVendorsRequiringPVN is set to true. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] tokenVendorsRequiringPVN {
            get {
                return this.tokenVendorsRequiringPVNField;
            }
            set {
                this.tokenVendorsRequiringPVNField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of days for user activation.
    ///   A value of 0 means that the user has no grace period, they will need 
    ///   to activate their card or token immediately. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numDaysForActivation {
            get {
                return this.numDaysForActivationField;
            }
            set {
                this.numDaysForActivationField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   The authentication types that trigger user activation on first 
    ///   successful authentication. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] ActivationAuthTypes {
            get {
                return this.activationAuthTypesField;
            }
            set {
                this.activationAuthTypesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates if the IP address should be checked when comparing a 
    ///   location to entries in a user's location history. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool checkIPAddressInLocationHistory {
            get {
                return this.checkIPAddressInLocationHistoryField;
            }
            set {
                this.checkIPAddressInLocationHistoryField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size of a user's location history.
    ///   If a user exceeds this many locations, the least-recently used 
    ///   locations are removed from the list. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxLocationHistorySize {
            get {
                return this.maxLocationHistorySizeField;
            }
            set {
                this.maxLocationHistorySizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The lifetime (in days) of an entry in a user's location history. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int locationHistoryLifetime {
            get {
                return this.locationHistoryLifetimeField;
            }
            set {
                this.locationHistoryLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum velocity (in km/h) a user can travel. This value is used 
    ///   when comparing a user's current location against previous locations 
    ///   during IP authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxVelocity {
            get {
                return this.maxVelocityField;
            }
            set {
                this.maxVelocityField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the velocity check is performed during IP authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool checkVelocity {
            get {
                return this.checkVelocityField;
            }
            set {
                this.checkVelocityField = value;
            }
        }
        
    /// <datatype>
    ///   CountryInfo[]
    /// </datatype>
    /// <value>
    ///   The country blacklist is a list of countries.
    ///   Users authenticating from these countries may not be allowed to 
    ///   authenticate or may require additional authentication. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CountryInfo[] countryBlacklist {
            get {
                return this.countryBlacklistField;
            }
            set {
                this.countryBlacklistField = value;
            }
        }
        
    /// <datatype>
    ///   ExpectedLocation[]
    /// </datatype>
    /// <value>
    ///   The expected locations list is a list of locations that users are 
    ///   expected to authenticate from. Users authenticated from an expected 
    ///   location may require less authentication. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ExpectedLocation[] expectedLocations {
            get {
                return this.expectedLocationsField;
            }
            set {
                this.expectedLocationsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If the user has their own list of expected locations instead of 
    ///   relying on expectedLocations, this policy defines the maximum size of that 
    ///   list. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxUserExpectedLocationsSize {
            get {
                return this.maxUserExpectedLocationsSizeField;
            }
            set {
                this.maxUserExpectedLocationsSizeField = value;
            }
        }
        
    /// <datatype>
    ///   RBAExpressionList
    /// </datatype>
    /// <value>
    ///   A list of RBA expressions. If the results of normal RBA authentication 
    ///   match any expression in this list, the request will be rejected. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RBAExpressionList normalReject {
            get {
                return this.normalRejectField;
            }
            set {
                this.normalRejectField = value;
            }
        }
        
    /// <datatype>
    ///   RBAExpressionList
    /// </datatype>
    /// <value>
    ///   A list of RBA expressions. If the results of normal RBA authentication 
    ///   do not match any in the normalReject list and do match any of the 
    ///   expressions in this list or the enhancedAuthenticated list, the request 
    ///   will be authenticated. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RBAExpressionList normalAuthenticated {
            get {
                return this.normalAuthenticatedField;
            }
            set {
                this.normalAuthenticatedField = value;
            }
        }
        
    /// <datatype>
    ///   RBAExpressionList
    /// </datatype>
    /// <value>
    ///   A list of RBA expressions. If the results of enhanced RBA 
    ///   authentication match any expression in this list or any expression in the 
    ///   normalReject list, the request will be rejected. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RBAExpressionList enhancedReject {
            get {
                return this.enhancedRejectField;
            }
            set {
                this.enhancedRejectField = value;
            }
        }
        
    /// <datatype>
    ///   RBAExpressionList
    /// </datatype>
    /// <value>
    ///   A list of RBA expressions. If the results of enhanced RBA 
    ///   authentication were not rejected according to the expressions specified in the 
    ///   normalReject and enhancedReject lists and they match any of the 
    ///   expressions in this list, the request will be authenticated. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RBAExpressionList enhancedAuthenticated {
            get {
                return this.enhancedAuthenticatedField;
            }
            set {
                this.enhancedAuthenticatedField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   A risk score threshold used for normal transactions.
    ///   An external risk score is a value between 0 and 100. If the score is 
    ///   less than the ExternalRiskScoreNormalPass policy, then the external 
    ///   risk score test passes. 
    ///   The ExternalRiskScoreNormalPass value must be less than or equal to 
    ///   the ExternalRiskScoreNormalFail value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ExternalRiskScoreNormalPass {
            get {
                return this.externalRiskScoreNormalPassField;
            }
            set {
                this.externalRiskScoreNormalPassField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   A risk score threshold used for normal transactions.
    ///   An external risk score is a value between 0 and 100. If the score is 
    ///   greater than the ExternalRiskScoreNormalFail policy, then the external 
    ///   risk score test fails. 
    ///   The ExternalRiskScorePass value must be less than or equal to the 
    ///   ExternalRiskScoreNormalFail value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ExternalRiskScoreNormalFail {
            get {
                return this.externalRiskScoreNormalFailField;
            }
            set {
                this.externalRiskScoreNormalFailField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   A risk score threshold used for enhanced transactions.
    ///   An external risk score is a value between 0 and 100. If the score is 
    ///   less than the ExternalRiskScoreEnhancedPass policy, then the external 
    ///   risk score test passes. 
    ///   The ExternalRiskScoreEnhancedPass value must be less than or equal to 
    ///   the ExternalRiskScoreEnhancedFail value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ExternalRiskScoreEnhancedPass {
            get {
                return this.externalRiskScoreEnhancedPassField;
            }
            set {
                this.externalRiskScoreEnhancedPassField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   A risk score threshold used for enhanced transactions.
    ///   An external risk score is a value between 0 and 100. If the score is 
    ///   greater than the ExternalRiskScoreEnhancedFail policy, then the 
    ///   external risk score test fails. 
    ///   The ExternalRiskScorePass value must be less than or equal to the 
    ///   ExternalRiskScoreEnhancedFail value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ExternalRiskScoreEnhancedFail {
            get {
                return this.externalRiskScoreEnhancedFailField;
            }
            set {
                this.externalRiskScoreEnhancedFailField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the risk engine to be used to calculate a risk score for 
    ///   the current application session. If this value is not set, external 
    ///   risk scoring is not available. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ExternalRiskEngine {
            get {
                return this.externalRiskEngineField;
            }
            set {
                this.externalRiskEngineField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if transactions should be delivered to soft tokens 
    ///   that support delivery. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool PerformTransactionDelivery {
            get {
                return this.performTransactionDeliveryField;
            }
            set {
                this.performTransactionDeliveryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating whether or not soft tokens require users to enter a 
    ///   PIN before generating an OTP. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool SoftTokenPINRequired {
            get {
                return this.softTokenPINRequiredField;
            }
            set {
                this.softTokenPINRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of digits in an OTP response from a soft token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int SoftTokenOTPLength {
            get {
                return this.softTokenOTPLengthField;
            }
            set {
                this.softTokenOTPLengthField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Descriptive comments.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   The authentication lockout mode.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum LockoutMode {
        
    /// <value>
    ///   GLOBAL lockout mode.
    ///   A single lockout of all authenticators based on a global failure 
    ///   limit. The failures are tracked globally across all authenticators. If the 
    ///   global failure limit is reached, then all authenticators are locked. 
    /// </value>
        GLOBAL,
        
    /// <value>
    ///   ALL_AUTHENTICATOR lockout mode.
    ///   A single lockout of all authenticators based on individual 
    ///   authenticator failure limits. The failures are tracked individually for each 
    ///   authenticator and if a single authenticator failure limit is reached, 
    ///   then all authenticators are locked. This is the behavior used in 
    ///   previous versions of the API and it will be the default value for this 
    ///   policy. 
    /// </value>
        ALL_AUTHENTICATOR,
        
    /// <value>
    ///   PER_AUTHENTICATOR lockout mode.
    ///   Granular lockouts of authenticators based on individual authenticator 
    ///   failure limits. The failures are tracked individually for all 
    ///   authenticators and if a single authenticator failure limit is reached, then 
    ///   only that authenticator is locked. All other authenticators can still 
    ///   be used. 
    /// </value>
        PER_AUTHENTICATOR,
    }
    
    /// <summary>
    ///   Defines a cell replacement element for the cell alphabet in a card, 
    ///   temporary PIN, or one-time password (OTP). 
    ///   Basically, this represents a mapping from a character not in the given 
    ///   alphabet to a character in the alphabet. 
    ///   <p>
    ///   This is useful in cases where multiple characters that may be entered 
    ///   by a user should be treated as the same character. 
    ///   For example, '0' is easily confused with 'o' and 'O', so you may 
    ///   define a cell alphabet containing the character '0', and have cell 
    ///   replacements mapping 'o' to '0', and 'O' to '0', making all of these 
    ///   characters equivalent for authentication purposes. 
    ///   </p>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CellReplacement {
        
        private string fromField;
        
        private string toField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The character to be replaced. This character must not appear in the 
    ///   cell alphabet that the replacement is being applied to. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string from {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The character it is replaced with. This character must appear in the 
    ///   cell alphabet that the replacement is being applied to. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string to {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the possible ways in which a transaction receipt can be 
    ///   signed. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public enum TransactionSignatureType {
        
    /// <value>
    ///   Indicates that transaction receipts are not signed.
    /// </value>
        NONE,
        
    /// <value>
    ///   Indicates that transaction receipts are signed using XML digital 
    ///   signatures. 
    /// </value>
        XML,
        
    /// <value>
    ///   Indicates that transaction receipts are signed using S/MIME digital 
    ///   signatures. 
    /// </value>
        SMIME,
    }
    
    /// <summary>
    ///   Defines the PIN prompt types supported by the mobile smart credential. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum PINPromptType {
        
    /// <value>
    ///   Prompt for the PIN for each transaction.
    /// </value>
        TRANSACTION,
        
    /// <value>
    ///   Prompt for the PIN once for each session.
    ///   The session timeout policy will apply.
    /// </value>
        SESSION,
    }
    
    /// <summary>
    ///   This structure provides information about a country.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CountryInfo {
        
        private string countryCodeField;
        
        private string countryNameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The code of the country.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string countryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the country.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string countryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
    }
    
    /// <summary>
    ///   An RBA expression list is a list of RBAExpressions.
    ///   For actual results to match an RBA expression list, the results must 
    ///   match at least one of the RBAExpressions in the expression list. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RBAExpressionList {
        
        private RBAExpression[] listField;
        
    /// <datatype>
    ///   RBAExpression[]
    /// </datatype>
    /// <value>
    ///   The list of RBAExpression values making up this RBA expression list. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public RBAExpression[] List {
            get {
                return this.listField;
            }
            set {
                this.listField = value;
            }
        }
    }
    
    /// <summary>
    ///   An RBA expression is a list of RBATestAndResults.
    ///   For actual results to match an RBA expression, the results must match 
    ///   each RBATestAndResult value in the expression. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RBAExpression {
        
        private RBATestAndResult[] listField;
        
    /// <datatype>
    ///   RBATestAndResult[]
    /// </datatype>
    /// <value>
    ///   The list of RBATestAndResult values making up this RBA expression. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public RBATestAndResult[] List {
            get {
                return this.listField;
            }
            set {
                this.listField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines an RBA test/result pair.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RBATestAndResult {
        
        private RBATest testField;
        
        private RBATestResult resultField;
        
    /// <datatype>
    ///   RBATest
    /// </datatype>
    /// <value>
    ///   The RBA test.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RBATest Test {
            get {
                return this.testField;
            }
            set {
                this.testField = value;
            }
        }
        
    /// <datatype>
    ///   RBATestResult
    /// </datatype>
    /// <value>
    ///   The RBA test result.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RBATestResult Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <summary>
    ///   The types of tests that can be performed for RBA.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum RBATest {
        
    /// <value>
    ///   IP authentication.
    /// </value>
        IP,
        
    /// <value>
    ///   The IP blacklist subtest of IP.
    /// </value>
        IP_IPBLACKLIST,
        
    /// <value>
    ///   The country blacklist subtest of IP.
    /// </value>
        IP_COUNTRYBLACKLIST,
        
    /// <value>
    ///   The velocity subtest of IP.
    /// </value>
        IP_VELOCITY,
        
    /// <value>
    ///   The location history subtest of IP.
    /// </value>
        IP_LOCATIONHISTORY,
        
    /// <value>
    ///   Machine authentication.
    /// </value>
        MA,
        
    /// <value>
    ///   Certificate authentication.
    /// </value>
        CA,
        
    /// <value>
    ///   The certificate valid subtest of certificate authentication.
    /// </value>
        CA_CERTVALID,
        
    /// <value>
    ///   The certificate registered subtest of certificate authentication. 
    /// </value>
        CA_CERTREG,
        
    /// <value>
    ///   External risk-score.
    /// </value>
        EXTERNAL_RISK,
    }
    
    /// <summary>
    ///   The types of RBA test results.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum RBATestResult {
        
    /// <value>
    ///   The test passed.
    /// </value>
        PASS,
        
    /// <value>
    ///   The test failed.
    /// </value>
        FAIL,
        
    /// <value>
    ///   The test failed or was not performed.
    /// </value>
        NOTPASS,
        
    /// <value>
    ///   The test passed or was not performed.
    /// </value>
        NOTFAIL,
    }
    
    /// <summary>
    ///   Defines a card specification policy. These values control how cards 
    ///   are used for authentication and how new cards are created. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CardSpecInfo {
        
        private string nameField;
        
        private int numRowsField;
        
        private int numColumnsField;
        
        private int cellSizeField;
        
        private string[] cellAlphabetField;
        
        private CellReplacement[] cellReplacementsField;
        
        private int challengeSizeField;
        
        private int minChallengeSizeField;
        
        private int maxChallengeSizeField;
        
        private long lifetimeField;
        
        private long supersedeField;
        
        private bool sortChallengeField;
        
        private bool userInfoInChallengeField;
        
        private bool disableChallengeRetentionField;
        
        private int challengeLifetimeField;
        
        private bool updateLockoutForReplacedChallengeField;
        
        private bool disableAnonymousAuthField;
        
        private ChallengeGenAlg challengeGenAlgField;
        
        private bool gatherUsageStatisticsField;
        
        private int leastUsedCellsPerChallengeField;
        
        private int challengeCountWarningThresholdField;
        
        private int challengeCountReplacementThresholdField;
        
        private int leastUsedCellWarningThresholdField;
        
        private int leastUsedCellReplacementThresholdField;
        
        private string[] rolesGrantingAccessField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the card specification policy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of rows in cards created using this policy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numRows {
            get {
                return this.numRowsField;
            }
            set {
                this.numRowsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of columns in cards created using this policy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numColumns {
            get {
                return this.numColumnsField;
            }
            set {
                this.numColumnsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of characters in each cell of cards created using this 
    ///   policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int cellSize {
            get {
                return this.cellSizeField;
            }
            set {
                this.cellSizeField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The characters that can appear in a card cell.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] cellAlphabet {
            get {
                return this.cellAlphabetField;
            }
            set {
                this.cellAlphabetField = value;
            }
        }
        
    /// <datatype>
    ///   CellReplacement[]
    /// </datatype>
    /// <value>
    ///   A list of characters that are replaced in a challenge response before 
    ///   it is validated. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CellReplacement[] cellReplacements {
            get {
                return this.cellReplacementsField;
            }
            set {
                this.cellReplacementsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of cells in a challenge.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int challengeSize {
            get {
                return this.challengeSizeField;
            }
            set {
                this.challengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The minimum number of cells in a challenge.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int minChallengeSize {
            get {
                return this.minChallengeSizeField;
            }
            set {
                this.minChallengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of cells in a challenge.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxChallengeSize {
            get {
                return this.maxChallengeSizeField;
            }
            set {
                this.maxChallengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The lifetime in days of a card created using this policy. A value of 0 
    ///   indicates that the card has infinite lifetime. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long lifetime {
            get {
                return this.lifetimeField;
            }
            set {
                this.lifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The amount of time in days that a superseded card can be used after it 
    ///   is superseded. A value of 0 indicates that it can be used 
    ///   indefinitely. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long supersede {
            get {
                return this.supersedeField;
            }
            set {
                this.supersedeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, challenges are sorted by column/row after generation. This 
    ///   makes it easier for people to respond to the challenge. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sortChallenge {
            get {
                return this.sortChallengeField;
            }
            set {
                this.sortChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If false, the hasPin flag and serial number list are not included in 
    ///   challenges. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool userInfoInChallenge {
            get {
                return this.userInfoInChallengeField;
            }
            set {
                this.userInfoInChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, challenge retention is disabled for GRID challenges. This 
    ///   means a new challenge will be generated for every challenge request. 
    ///   Note that doing this allows an attacker who knows part of the GRID to 
    ///   request different challenges until they receive a challenge that they 
    ///   can answer. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool disableChallengeRetention {
            get {
                return this.disableChallengeRetentionField;
            }
            set {
                this.disableChallengeRetentionField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the GRID challenge lifetime in seconds. A value of 0 means 
    ///   infinite lifetime. 
    ///   When requesting a challenge, if the retained challenge has exceeded 
    ///   its lifetime a new challenge is generated. When authenticating a 
    ///   challenge, if the retained challenge has exceeded its lifetime a 
    ///   USER_NO_CHALLENGE error is returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int challengeLifetime {
            get {
                return this.challengeLifetimeField;
            }
            set {
                this.challengeLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the lockout count is updated when an existing GRID challenge 
    ///   is replaced during a challenge request either because challenge 
    ///   retention is disabled or because its lifetime has expired. If false, the 
    ///   lockout count is not updated. The default for this policy is true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool updateLockoutForReplacedChallenge {
            get {
                return this.updateLockoutForReplacedChallengeField;
            }
            set {
                this.updateLockoutForReplacedChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, anonymous authentication operations are not allowed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool disableAnonymousAuth {
            get {
                return this.disableAnonymousAuthField;
            }
            set {
                this.disableAnonymousAuthField = value;
            }
        }
        
    /// <datatype>
    ///   ChallengeGenAlg
    /// </datatype>
    /// <value>
    ///   Identifies the challenge generation algorithm being used.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChallengeGenAlg challengeGenAlg {
            get {
                return this.challengeGenAlgField;
            }
            set {
                this.challengeGenAlgField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates whether or not usage statistics are being gathered. This 
    ///   only applies when the RANDOM challenge generation algorithm is being 
    ///   used. When the LEASTUSED challenge generation algorithm is being used, 
    ///   usage statistics are always gathered, regardless of this setting. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool gatherUsageStatistics {
            get {
                return this.gatherUsageStatisticsField;
            }
            set {
                this.gatherUsageStatisticsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Indicates the minimum number of least used cells that will be included 
    ///   in every generated challenge. Only applies when the LEASTUSED 
    ///   challenge generation algorithm is being used. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int leastUsedCellsPerChallenge {
            get {
                return this.leastUsedCellsPerChallengeField;
            }
            set {
                this.leastUsedCellsPerChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The challenge count warning threshold; represents a number of 
    ///   challenges that can be generated for a card and used to authenticate and when 
    ///   this number is reached, a warning will be logged each time the card 
    ///   is used to authenticate. 
    ///   Once a card has been used to authenticate this many challenges it 
    ///   should be replaced. 
    ///   <p>
    ///   This threshold is used for the LEASTUSED challenge algorithm, or the 
    ///   RANDOM algorithm when gatherUsageStatistics has been set to true. 
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int challengeCountWarningThreshold {
            get {
                return this.challengeCountWarningThresholdField;
            }
            set {
                this.challengeCountWarningThresholdField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The challenge count replacement threshold; represents a number of 
    ///   challenges that can be generated for a card and used to authenticate and 
    ///   when this number is reached, the card will be moved to the HOLD state 
    ///   and can no longer be used to authenticate. 
    ///   Once a card has been used to authenticate this many challenges it must 
    ///   be replaced. 
    ///   <p>
    ///   This threshold is used for the LEASTUSED challenge algorithm, or the 
    ///   RANDOM algorithm when gatherUsageStatistics has been set to true. 
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int challengeCountReplacementThreshold {
            get {
                return this.challengeCountReplacementThresholdField;
            }
            set {
                this.challengeCountReplacementThresholdField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The least used cell warning threshold. The least used cell in a card 
    ///   is the cell that has been appeared the least number of times in a 
    ///   successfully authenticated challenge. When the least used cell in a card 
    ///   has been used a number of times equal to this threshold, a warning 
    ///   will be logged each time the card is used to authenticate. The card 
    ///   should be replaced at this point. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int leastUsedCellWarningThreshold {
            get {
                return this.leastUsedCellWarningThresholdField;
            }
            set {
                this.leastUsedCellWarningThresholdField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The least used cell replacement threshold.
    ///   When the least used cell in a card has been used a number of times 
    ///   equal to this threshold, the card will be moved to the HOLD state and 
    ///   can no longer be used to authenticate. 
    ///   The card must be replaced at this point.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int leastUsedCellReplacementThreshold {
            get {
                return this.leastUsedCellReplacementThresholdField;
            }
            set {
                this.leastUsedCellReplacementThresholdField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Descriptive comments.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the possible challenge generation algorithms for card 
    ///   GRID-based challenges. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum ChallengeGenAlg {
        
    /// <value>
    ///   Challenges select cells from the card completely at random, and 
    ///   challenges for the same user have no dependencies on prior challenges. It 
    ///   is possible, though extremely unlikely, that two consecutive 
    ///   challenges for the same user will be identical. 
    /// </value>
        RANDOM,
        
    /// <value>
    ///   Challenges select cells from the card randomly, but each challenge 
    ///   will include at least one cell with the lowest usage count, where a 
    ///   cell's usage count is the number of times it has been used to 
    ///   authenticate previous challenges. 
    /// </value>
        LEASTUSED,
    }
    
    /// <summary>
    ///   Defines a temporary PIN specification policy.
    ///   These values control how temporary PINs are used for authentication 
    ///   and how new temporary PINs are created. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PINSpecInfo {
        
        private string nameField;
        
        private int cellSizeField;
        
        private string[] cellAlphabetField;
        
        private CellReplacement[] cellReplacementsField;
        
        private int challengeSizeField;
        
        private long lifetimeField;
        
        private int maxUsesField;
        
        private bool autoDeleteField;
        
        private string[] rolesGrantingAccessField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the PIN specification policy.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of characters in each cell.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int cellSize {
            get {
                return this.cellSizeField;
            }
            set {
                this.cellSizeField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The characters that can appear in a cell.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] cellAlphabet {
            get {
                return this.cellAlphabetField;
            }
            set {
                this.cellAlphabetField = value;
            }
        }
        
    /// <datatype>
    ///   CellReplacement[]
    /// </datatype>
    /// <value>
    ///   A list of characters that are replaced in a challenge response before 
    ///   it is validated. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CellReplacement[] cellReplacements {
            get {
                return this.cellReplacementsField;
            }
            set {
                this.cellReplacementsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of cells in a temporary PIN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int challengeSize {
            get {
                return this.challengeSizeField;
            }
            set {
                this.challengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The lifetime in hours of the temporary PIN. A value of 0 indicates 
    ///   that the PIN has infinite lifetime. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long lifetime {
            get {
                return this.lifetimeField;
            }
            set {
                this.lifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of times the temporary PIN can be used for authentication. 
    ///   A value of 0 means the PIN can be used an infinite number of times. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxUses {
            get {
                return this.maxUsesField;
            }
            set {
                this.maxUsesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, a user's temporary PIN is automatically deleted after a 
    ///   successful grid or token authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool autoDelete {
            get {
                return this.autoDeleteField;
            }
            set {
                this.autoDeleteField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Descriptive comments.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Information returned from policyGetEx. This structure contains an 
    ///   extraPolicy field that contains values for policies added after the 
    ///   policy structures defined in the API were released. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PolicyInfoEx : PolicyInfo {
        
        private NameValue[] extraPoliciesField;
        
    /// <datatype>
    ///   NameValue[]
    /// </datatype>
    /// <value>
    ///   Extra policy information.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NameValue[] extraPolicies {
            get {
                return this.extraPoliciesField;
            }
            set {
                this.extraPoliciesField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to policySet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PolicySetCallParms {
        
        private string nameField;
        
        private PolicyParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the policy to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   PolicyParms
    /// </datatype>
    /// <value>
    ///   Parameters that control the policy settings. Any policy settings not 
    ///   in this structure will not be updated. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PolicyParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Parameters that can be applied when creating or modifying a policy. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PolicyParms {
        
        private string nameField;
        
        private System.Nullable<bool> defaultPolicyField;
        
        private UserSpecParms userSpecField;
        
        private CardSpecParms cardSpecField;
        
        private PINSpecParms pinSpecField;
        
        private PasswordRulesParms passwordRulesField;
        
        private System.Nullable<bool> createNamedPasswordRulesOnlyField;
        
        private System.Nullable<bool> updateNamedPasswordRulesOnlyField;
        
        private System.Nullable<bool> replaceNamedPasswordRulesField;
        
        private PasswordRulesParms[] namedPasswordRulesField;
        
        private string[] removeNamedPasswordRulesField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When modifying a policy, this element is the new name of the policy. 
    ///   When creating a policy, this value is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, make this policy the default. Whichever policy is currently 
    ///   flagged as the default will be updated so that it is no longer the 
    ///   default. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> defaultPolicy {
            get {
                return this.defaultPolicyField;
            }
            set {
                this.defaultPolicyField = value;
            }
        }
        
    /// <datatype>
    ///   UserSpecParms
    /// </datatype>
    /// <value>
    ///   Parameters to apply to the user specification for this policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserSpecParms userSpec {
            get {
                return this.userSpecField;
            }
            set {
                this.userSpecField = value;
            }
        }
        
    /// <datatype>
    ///   CardSpecParms
    /// </datatype>
    /// <value>
    ///   Parameters to apply to the card specification for this policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public CardSpecParms cardSpec {
            get {
                return this.cardSpecField;
            }
            set {
                this.cardSpecField = value;
            }
        }
        
    /// <datatype>
    ///   PINSpecParms
    /// </datatype>
    /// <value>
    ///   Parameters to apply to the PIN specification for this policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public PINSpecParms pinSpec {
            get {
                return this.pinSpecField;
            }
            set {
                this.pinSpecField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordRulesParms
    /// </datatype>
    /// <value>
    ///   Parameters to apply to the default password rules for this policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public PasswordRulesParms passwordRules {
            get {
                return this.passwordRulesField;
            }
            set {
                this.passwordRulesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, any named passwords specified in the 
    ///   namedPasswordRules parameter are created. If the named password already exists, 
    ///   an error is returned. 
    ///   This attribute only applies to the policySet operation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> createNamedPasswordRulesOnly {
            get {
                return this.createNamedPasswordRulesOnlyField;
            }
            set {
                this.createNamedPasswordRulesOnlyField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, any named passwords specified in the 
    ///   namedPasswordRules parameter are created. If the named password already exists, 
    ///   an error is returned. 
    ///   This attribute only applies to the policySet operation.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> updateNamedPasswordRulesOnly {
            get {
                return this.updateNamedPasswordRulesOnlyField;
            }
            set {
                this.updateNamedPasswordRulesOnlyField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If specified as true, any named passwords not specified in the 
    ///   namedPasswordRules parameter are removed. This attribute only applies to the 
    ///   policySet operation. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> replaceNamedPasswordRules {
            get {
                return this.replaceNamedPasswordRulesField;
            }
            set {
                this.replaceNamedPasswordRulesField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordRulesParms[]
    /// </datatype>
    /// <value>
    ///   Parameters to apply to the named password rules for this policy. If 
    ///   the named password rules already exist, they are modified. 
    ///   If the name dpassword rules don't exist, they are added.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public PasswordRulesParms[] namedPasswordRules {
            get {
                return this.namedPasswordRulesField;
            }
            set {
                this.namedPasswordRulesField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   A list of named password rules to be removed from this policy. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] removeNamedPasswordRules {
            get {
                return this.removeNamedPasswordRulesField;
            }
            set {
                this.removeNamedPasswordRulesField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Descriptive comments about this policy that could be used to provide a 
    ///   full description of this policy's intended purpose. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Parameters used to modify a user specification policy. All parameters 
    ///   are optional. 
    ///   <p>
    ///   Some of the parameters have restrictions that are affected by other 
    ///   parameters that may or may not be set. In this case, when modifying an 
    ///   existing policy, the resulting policy must obey the restrictions 
    ///   listed. For example, if only the QAChallengeSize parameter is included, 
    ///   the resulting policy must obey the restrictions placed on the 
    ///   QAChallengeSize. 
    ///   </p>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class UserSpecParms {
        
        private System.Nullable<int> maxAliasesField;
        
        private System.Nullable<int> maxContactInfoNumberField;
        
        private System.Nullable<LockoutMode> lockoutModeField;
        
        private System.Nullable<int> maxFailuresField;
        
        private System.Nullable<int> maxGlobalFailuresField;
        
        private System.Nullable<int> maxCertificateFailuresField;
        
        private System.Nullable<int> maxExternalFailuresField;
        
        private System.Nullable<int> maxGridFailuresField;
        
        private System.Nullable<int> maxTokenCRFailuresField;
        
        private System.Nullable<int> maxTokenROFailuresField;
        
        private System.Nullable<int> maxOTPFailuresField;
        
        private System.Nullable<int> maxQAFailuresField;
        
        private System.Nullable<int> maxRBAIPAuthFailuresField;
        
        private System.Nullable<int> maxRBAMachineAuthFailuresField;
        
        private System.Nullable<int> maxRBACertificateAuthFailuresField;
        
        private System.Nullable<int> maxRBAExternalRiskAuthFailuresField;
        
        private System.Nullable<int> lockoutTimeField;
        
        private System.Nullable<int> maxSecretSizeField;
        
        private System.Nullable<int> maxSecretNumberField;
        
        private AuthenticationType[] genericAuthTypeField;
        
        private AuthenticationType[] enhancedGenericAuthTypeField;
        
        private AuthenticationType[] machineAuthTypeField;
        
        private AuthenticationType[] authTypeCanViewSecretsField;
        
        private AuthenticationType[] authTypeCanModifySecretsField;
        
        private System.Nullable<int> maxMachineSecretsField;
        
        private System.Nullable<int> maxMachineSecretsSizeField;
        
        private System.Nullable<bool> machineSecretRequiresMachineNonceField;
        
        private System.Nullable<bool> machineSecretRequiresSequenceNonceField;
        
        private System.Nullable<int> machineSecretRequiresAppDataField;
        
        private System.Nullable<int> machineSecretAllowsBadAppDataField;
        
        private System.Nullable<int> machineSecretLifetimeField;
        
        private System.Nullable<bool> failedMachineAuthIncrementsLockoutField;
        
        private System.Nullable<int> maxAuthSecretsField;
        
        private System.Nullable<int> maxAuthSecretsSizeField;
        
        private System.Nullable<int> maxQuestionsField;
        
        private System.Nullable<int> maxQASizeField;
        
        private System.Nullable<int> qAChallengeSizeField;
        
        private System.Nullable<int> minQAChallengeSizeField;
        
        private System.Nullable<int> maxQAChallengeSizeField;
        
        private System.Nullable<bool> disableQAChallengeRetentionField;
        
        private System.Nullable<int> qAChallengeLifetimeField;
        
        private System.Nullable<bool> updateLockoutForReplacedQAChallengeField;
        
        private System.Nullable<int> qaDefaultWrongAnswersAllowedField;
        
        private System.Nullable<int> qaMaximumWrongAnswersAllowedField;
        
        private System.Nullable<bool> qaInexactMatchAllowedField;
        
        private string[] oTPCellAlphabetField;
        
        private CellReplacement[] oTPCellReplacementsField;
        
        private System.Nullable<int> oTPLifetimeField;
        
        private System.Nullable<int> oTPLengthField;
        
        private System.Nullable<bool> oTPDeliveryEnabledField;
        
        private System.Nullable<bool> oTPAlwaysGenerateField;
        
        private System.Nullable<bool> oTPDynamicRefreshField;
        
        private System.Nullable<int> oTPNumberOutstandingField;
        
        private System.Nullable<int> oTPRefreshThresholdField;
        
        private System.Nullable<bool> returnAuthSecretWithChallField;
        
        private System.Nullable<bool> autoUnassignTokensField;
        
        private System.Nullable<bool> autoMoveTokensField;
        
        private System.Nullable<bool> disableTokenChallengeRetentionField;
        
        private System.Nullable<int> tokenChallengeLifetimeField;
        
        private System.Nullable<bool> updateLockoutForReplacedTokenChallengeField;
        
        private System.Nullable<int> maxAllowedTokenSetsField;
        
        private System.Nullable<bool> allowNONEAuthenticationField;
        
        private System.Nullable<bool> considerTempPINLastField;
        
        private System.Nullable<bool> storeLastAuthInfoField;
        
        private System.Nullable<bool> allowCreateIfDisabledInRepositoryField;
        
        private System.Nullable<bool> allowCreateIfExpiredInRepositoryField;
        
        private System.Nullable<bool> allowAuthIfDisabledInRepositoryField;
        
        private System.Nullable<bool> allowAuthIfExpiredInRepositoryField;
        
        private System.Nullable<TransactionSignatureType> transactionSignatureTypeField;
        
        private System.Nullable<int> transactionLifetimeField;
        
        private System.Nullable<int> maxNumTransactionDetailsField;
        
        private System.Nullable<bool> allowSelfSignedUserCertField;
        
        private System.Nullable<bool> allowCertNotIssuedByRegisteredCAField;
        
        private System.Nullable<bool> allowAllRegisteredCAsField;
        
        private System.Nullable<bool> addAllowedRegisteredCAsField;
        
        private System.Nullable<bool> removeAllowedRegisteredCAsField;
        
        private string[] allowedRegisteredCAsField;
        
        private System.Nullable<bool> allowCertNotIssuedByManagedCAField;
        
        private System.Nullable<bool> allowAllManagedCAsField;
        
        private System.Nullable<bool> addAllowedManagedCAsField;
        
        private System.Nullable<bool> removeAllowedManagedCAsField;
        
        private string[] allowedManagedCAsField;
        
        private string certificateAuthenticationHashAlgField;
        
        private System.Nullable<int> certificateAuthenticationChallengeSizeField;
        
        private System.Nullable<int> maxCertsPerUserField;
        
        private System.Nullable<bool> autoDeleteUserCertsField;
        
        private System.Nullable<bool> disableCertificateChallengeRetentionField;
        
        private System.Nullable<bool> allowCertificateChallengeDeliveryField;
        
        private System.Nullable<bool> allowCertificateTransactionDeliveryField;
        
        private System.Nullable<bool> allowCertificateSignField;
        
        private System.Nullable<int> certificateChallengeLifetimeField;
        
        private System.Nullable<bool> updateLockoutForReplacedCertificateChallengeField;
        
        private System.Nullable<bool> allowAllSmartCredentialDefinitionsField;
        
        private System.Nullable<bool> addAllowedSmartCredentialDefinitionsField;
        
        private System.Nullable<bool> removeAllowedSmartCredentialDefinitionsField;
        
        private string[] allowedSmartCredentialDefinitionsField;
        
        private System.Nullable<int> maxSmartCredentialsPerUserField;
        
        private string smartCredentialIDPrefixField;
        
        private string smartCredentialTokenVendorField;
        
        private System.Nullable<bool> autoUnassignSmartCredentialsField;
        
        private System.Nullable<bool> autoCancelSmartCredentialsField;
        
        private System.Nullable<bool> autoCancelSmartCredentialsForceField;
        
        private System.Nullable<bool> autoMoveSmartCredentialsField;
        
        private System.Nullable<bool> autoRegisterSmartCredentialsToPACSField;
        
        private System.Nullable<bool> autoSuspendSmartCredentialsFromPACSField;
        
        private System.Nullable<bool> allowSoftwareSmartCredentialsField;
        
        private System.Nullable<PINPromptType> mobileSmartCredentialPINPromptField;
        
        private System.Nullable<int> mobileSmartCredentialSessionTimeoutField;
        
        private System.Nullable<bool> allowAllDigitalIdConfigsField;
        
        private System.Nullable<bool> addAllowedDigitalIdConfigsField;
        
        private System.Nullable<bool> removeAllowedDigitalIdConfigsField;
        
        private string[] allowedDigitalIdConfigsField;
        
        private System.Nullable<int> maxDigitalIdsPerUserField;
        
        private System.Nullable<int> maxClientTypesPerDigitalIdField;
        
        private System.Nullable<bool> autoCancelDigitalIdsField;
        
        private System.Nullable<int> userRegistrationPasswordLifetimeField;
        
        private System.Nullable<int> userRegistrationPasswordLengthField;
        
        private System.Nullable<int> maxFederationsPerUserField;
        
        private System.Nullable<int> maxNumUserPreferencesField;
        
        private System.Nullable<int> maxSizeUserPreferenceField;
        
        private System.Nullable<int> pVNLengthField;
        
        private System.Nullable<bool> pVNChangeRequiredOnAdminResetField;
        
        private AuthenticationType[] authTypesRequiringPVNField;
        
        private System.Nullable<bool> allTokenVendorsRequirePVNField;
        
        private string[] tokenVendorsRequiringPVNField;
        
        private System.Nullable<int> numDaysForActivationField;
        
        private AuthenticationType[] activationAuthTypesField;
        
        private System.Nullable<bool> checkIPAddressInLocationHistoryField;
        
        private System.Nullable<int> maxLocationHistorySizeField;
        
        private System.Nullable<int> locationHistoryLifetimeField;
        
        private System.Nullable<int> maxVelocityField;
        
        private System.Nullable<bool> checkVelocityField;
        
        private string[] countryBlacklistField;
        
        private System.Nullable<bool> addCountryBlacklistField;
        
        private System.Nullable<bool> removeCountryBlacklistField;
        
        private ExpectedLocation[] expectedLocationsField;
        
        private System.Nullable<bool> addExpectedLocationsField;
        
        private System.Nullable<bool> removeExpectedLocationsField;
        
        private System.Nullable<int> maxUserExpectedLocationsSizeField;
        
        private System.Nullable<bool> normalRejectAddField;
        
        private System.Nullable<bool> normalRejectRemoveField;
        
        private RBAExpressionList normalRejectField;
        
        private System.Nullable<bool> normalAuthenticatedAddField;
        
        private System.Nullable<bool> normalAuthenticatedRemoveField;
        
        private RBAExpressionList normalAuthenticatedField;
        
        private System.Nullable<bool> enhancedRejectAddField;
        
        private System.Nullable<bool> enhancedRejectRemoveField;
        
        private RBAExpressionList enhancedRejectField;
        
        private System.Nullable<bool> enhancedAuthenticatedAddField;
        
        private System.Nullable<bool> enhancedAuthenticatedRemoveField;
        
        private RBAExpressionList enhancedAuthenticatedField;
        
        private System.Nullable<int> externalRiskScoreNormalPassField;
        
        private System.Nullable<int> externalRiskScoreNormalFailField;
        
        private System.Nullable<int> externalRiskScoreEnhancedPassField;
        
        private System.Nullable<int> externalRiskScoreEnhancedFailField;
        
        private string externalRiskEngineField;
        
        private System.Nullable<bool> performTransactionDeliveryField;
        
        private System.Nullable<bool> softTokenPINRequiredField;
        
        private System.Nullable<int> softTokenOTPLengthField;
        
        private string commentField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of aliases that can be assigned to a user. A value 
    ///   of 0 means that users are not allowed to have aliases. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxAliases {
            get {
                return this.maxAliasesField;
            }
            set {
                this.maxAliasesField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of contact information entries that can be created 
    ///   for a user. A value of 0 means that no contact information can be 
    ///   stored for a user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxContactInfoNumber {
            get {
                return this.maxContactInfoNumberField;
            }
            set {
                this.maxContactInfoNumberField = value;
            }
        }
        
    /// <datatype>
    ///   LockoutMode
    /// </datatype>
    /// <value>
    ///   The authentication lockout mode.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<LockoutMode> lockoutMode {
            get {
                return this.lockoutModeField;
            }
            set {
                this.lockoutModeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive authentication failures allowed before a 
    ///   user is locked out. A value of 0 means the user is never locked out, no 
    ///   matter how many times they fail to authenticate. 
    ///   The various maxXXXFailures policies should be used instead of this 
    ///   policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxFailures {
            get {
                return this.maxFailuresField;
            }
            set {
                this.maxFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive authentication failures allowed across all 
    ///   authentication types before a user is locked out. A value of 0 means 
    ///   the user is never locked out, no matter how many times they fail to 
    ///   authenticate. 
    ///   This policy is used with the GLOBAL lockout mode.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxGlobalFailures {
            get {
                return this.maxGlobalFailuresField;
            }
            set {
                this.maxGlobalFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive CERTIFICATE authentication failures allowed 
    ///   before a user is locked out. A value of 0 means the user is never 
    ///   locked out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxCertificateFailures {
            get {
                return this.maxCertificateFailuresField;
            }
            set {
                this.maxCertificateFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive EXTERNAL authentication failures allowed 
    ///   before a user is locked out. A value of 0 means the user is never locked 
    ///   out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxExternalFailures {
            get {
                return this.maxExternalFailuresField;
            }
            set {
                this.maxExternalFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive GRID authentication failures allowed before 
    ///   a user is locked out. A value of 0 means the user is never locked 
    ///   out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxGridFailures {
            get {
                return this.maxGridFailuresField;
            }
            set {
                this.maxGridFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive TOKENCR authentication failures allowed 
    ///   before a user is locked out. A value of 0 means the user is never locked 
    ///   out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxTokenCRFailures {
            get {
                return this.maxTokenCRFailuresField;
            }
            set {
                this.maxTokenCRFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive TOKENRO authentication failures allowed 
    ///   before a user is locked out. A value of 0 means the user is never locked 
    ///   out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxTokenROFailures {
            get {
                return this.maxTokenROFailuresField;
            }
            set {
                this.maxTokenROFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive OTP authentication failures allowed before a 
    ///   user is locked out. A value of 0 means the user is never locked out, 
    ///   no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxOTPFailures {
            get {
                return this.maxOTPFailuresField;
            }
            set {
                this.maxOTPFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive QA authentication failures allowed before a 
    ///   user is locked out. A value of 0 means the user is never locked out, 
    ///   no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxQAFailures {
            get {
                return this.maxQAFailuresField;
            }
            set {
                this.maxQAFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive RBA IP authentication failures allowed 
    ///   before a user is locked out. A value of 0 means the user is never locked 
    ///   out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxRBAIPAuthFailures {
            get {
                return this.maxRBAIPAuthFailuresField;
            }
            set {
                this.maxRBAIPAuthFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive RBA Machine authentication failures allowed 
    ///   before a user is locked out. A value of 0 means the user is never 
    ///   locked out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxRBAMachineAuthFailures {
            get {
                return this.maxRBAMachineAuthFailuresField;
            }
            set {
                this.maxRBAMachineAuthFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive RBA Certificate authentication failures 
    ///   allowed before a user is locked out. A value of 0 means the user is never 
    ///   locked out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxRBACertificateAuthFailures {
            get {
                return this.maxRBACertificateAuthFailuresField;
            }
            set {
                this.maxRBACertificateAuthFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive RBA external risk authentication failures 
    ///   allowed before a user is locked out. A value of 0 means the user is 
    ///   never locked out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxRBAExternalRiskAuthFailures {
            get {
                return this.maxRBAExternalRiskAuthFailuresField;
            }
            set {
                this.maxRBAExternalRiskAuthFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of minutes a user remains locked. A value of 0 means the 
    ///   user remains locked until unlocked by an administrator. 
    ///   This policy is used with the GLOBAL, ALL_AUTHENTICATOR and 
    ///   PER_AUTHENTICATOR lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> lockoutTime {
            get {
                return this.lockoutTimeField;
            }
            set {
                this.lockoutTimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size of the shared secrets for a user, in kilobytes. A 
    ///   value of 0 means that users are not allowed to have shared secrets. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxSecretSize {
            get {
                return this.maxSecretSizeField;
            }
            set {
                this.maxSecretSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of shared secrets for a user. A value of 0 means 
    ///   that users are not allowed to have shared secrets. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxSecretNumber {
            get {
                return this.maxSecretNumberField;
            }
            set {
                this.maxSecretNumberField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   The type of authentications that can be used for generic 
    ///   authentication operations with a normal security level. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] genericAuthType {
            get {
                return this.genericAuthTypeField;
            }
            set {
                this.genericAuthTypeField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   The type of authentications that can be used for generic 
    ///   authentication operations with an enhanced security level. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] enhancedGenericAuthType {
            get {
                return this.enhancedGenericAuthTypeField;
            }
            set {
                this.enhancedGenericAuthTypeField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   The type of authentications that can be used for machine registration 
    ///   authentication operations. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] machineAuthType {
            get {
                return this.machineAuthTypeField;
            }
            set {
                this.machineAuthTypeField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   The type of authentications that can view mutual authentication 
    ///   secrets and shared secrets during authentication operations. This list 
    ///   cannot include the authentication type NONE. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] authTypeCanViewSecrets {
            get {
                return this.authTypeCanViewSecretsField;
            }
            set {
                this.authTypeCanViewSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   The type of authentications that can modify mutual authentication 
    ///   secrets and shared secrets during authentication operations. This list 
    ///   cannot include the authentication type NONE. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] authTypeCanModifySecrets {
            get {
                return this.authTypeCanModifySecretsField;
            }
            set {
                this.authTypeCanModifySecretsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of machine secrets for a user. A value of 0 means 
    ///   that no machine secrets can be stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxMachineSecrets {
            get {
                return this.maxMachineSecretsField;
            }
            set {
                this.maxMachineSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size of a single machine secrets for a user, in kilobytes. 
    ///   A value of 0 means that no machine secrets can be stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxMachineSecretsSize {
            get {
                return this.maxMachineSecretsSizeField;
            }
            set {
                this.maxMachineSecretsSizeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if machine secrets must contain the machine nonce 
    ///   when used for authentication. 
    ///   To set this flag to false, the machineSecretRequiresAppData setting 
    ///   must be greater than 0, and the machineSecretAllowsBadAppData setting 
    ///   must be 0. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> machineSecretRequiresMachineNonce {
            get {
                return this.machineSecretRequiresMachineNonceField;
            }
            set {
                this.machineSecretRequiresMachineNonceField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if machine secrets must contain the sequence nonce 
    ///   when used for authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> machineSecretRequiresSequenceNonce {
            get {
                return this.machineSecretRequiresSequenceNonceField;
            }
            set {
                this.machineSecretRequiresSequenceNonceField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   A count indicating how many application data values in a machine 
    ///   secret being used for authentication can be bad before validation fails. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> machineSecretRequiresAppData {
            get {
                return this.machineSecretRequiresAppDataField;
            }
            set {
                this.machineSecretRequiresAppDataField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   A count indicating how many application data values in the machine 
    ///   secret can be bad before validation fails. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> machineSecretAllowsBadAppData {
            get {
                return this.machineSecretAllowsBadAppDataField;
            }
            set {
                this.machineSecretAllowsBadAppDataField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Machine secret lifetime in hours. This must be a value between 0 and 
    ///   876000 inclusive. A value of 0 means infinite lifetime. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> machineSecretLifetime {
            get {
                return this.machineSecretLifetimeField;
            }
            set {
                this.machineSecretLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating whether or not a failed machine authentication 
    ///   results in a user's failed login attempt counter for machine 
    ///   authentication being incremented. If this flag is set to true, too many failed 
    ///   machine authentications will cause a user's account to be locked out. 
    ///   This may be problematic if, at the application level, a failed machine 
    ///   authentication is always followed by a second factor authentication, 
    ///   as the user will be locked out by failed machine authentications 
    ///   before they can attempt the maximum number of second factor 
    ///   authentications allowed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> failedMachineAuthIncrementsLockout {
            get {
                return this.failedMachineAuthIncrementsLockoutField;
            }
            set {
                this.failedMachineAuthIncrementsLockoutField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of authentication secrets for a user. A value of 0 
    ///   means that no authentication secrets can be stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxAuthSecrets {
            get {
                return this.maxAuthSecretsField;
            }
            set {
                this.maxAuthSecretsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size of authentication secrets for a user, in kilobytes. A 
    ///   value of 0 means that no authentication secrets can be stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxAuthSecretsSize {
            get {
                return this.maxAuthSecretsSizeField;
            }
            set {
                this.maxAuthSecretsSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of questions and answer pairs for a user. A value 
    ///   of 0 means that no question and answer pairs can be stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxQuestions {
            get {
                return this.maxQuestionsField;
            }
            set {
                this.maxQuestionsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size of questions and answer (QA) pairs stored for a user, 
    ///   in kilobytes. A value of 0 means that no QA pairs can be stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxQASize {
            get {
                return this.maxQASizeField;
            }
            set {
                this.maxQASizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of questions in a QA challenge. This value must satisfy the 
    ///   restriction 
    ///   1&lt;=minQAChallengeSize&lt;=QAChallengeSize&lt;=maxQAChallengeSize 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> QAChallengeSize {
            get {
                return this.qAChallengeSizeField;
            }
            set {
                this.qAChallengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The minimum number of questions allowed in a question and answer 
    ///   challenge when the call to obtain such a challenge overrides the default. 
    ///   This value must satisfy the restriction 
    ///   1&lt;=minQAChallengeSize&lt;=QAChallengeSize&lt;=maxQAChallengeSize 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> minQAChallengeSize {
            get {
                return this.minQAChallengeSizeField;
            }
            set {
                this.minQAChallengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of questions allowed in a question and answer 
    ///   challenge when the call to obtain such a challenge overrides the default. 
    ///   This value must satisfy the restriction 
    ///   1&lt;=minQAChallengeSize&lt;=QAChallengeSize&lt;=maxQAChallengeSize 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxQAChallengeSize {
            get {
                return this.maxQAChallengeSizeField;
            }
            set {
                this.maxQAChallengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, challenge retention is disabled for QA challenges. This means 
    ///   a new challenge will be generated for every challenge request. 
    ///   Note that doing this allows an attacker who knows some of the users 
    ///   answers to request different challenges until they receive a challenge 
    ///   that they can answer. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> disableQAChallengeRetention {
            get {
                return this.disableQAChallengeRetentionField;
            }
            set {
                this.disableQAChallengeRetentionField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the QA challenge lifetime in seconds. A value of 0 means 
    ///   infinite lifetime. 
    ///   When requesting a challenge, if the retained challenge has exceeded 
    ///   its lifetime a new challenge is generated. When authenticating a 
    ///   challenge, if the retained challenge has exceeded its lifetime a 
    ///   USER_NO_CHALLENGE error is returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> QAChallengeLifetime {
            get {
                return this.qAChallengeLifetimeField;
            }
            set {
                this.qAChallengeLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the lockout count is updated when an existing QA challenge is 
    ///   replaced during a challenge request either because challenge 
    ///   retention is disabled or because its lifetime has expired. If false, the 
    ///   lockout count is not updated. The default for this policy is true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> updateLockoutForReplacedQAChallenge {
            get {
                return this.updateLockoutForReplacedQAChallengeField;
            }
            set {
                this.updateLockoutForReplacedQAChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The default number of wrong answers that are allowed in response to a 
    ///   question and answer challenge and still have the response be 
    ///   considered correct. This value must satisfy the restriction 
    ///   0&lt;=qaDefaultWrongAnswersAllowed&lt;=qaMaximumWrongAnswersAllowed, and 
    ///   qaDefaultWrongAnswersAllowed must be less than QAChallengeSize 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> qaDefaultWrongAnswersAllowed {
            get {
                return this.qaDefaultWrongAnswersAllowedField;
            }
            set {
                this.qaDefaultWrongAnswersAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of wrong answers that are allowed in response to a 
    ///   question and answer challenge and still have the response be 
    ///   considered correct, when the call to authenticate such a challenge overrides 
    ///   the default. This value must satisfy the restriction 
    ///   0&lt;=qaDefaultWrongAnswersAllowed&lt;=qaMaximumWrongAnswersAllowed, and 
    ///   qaMaximumWrongAnswersAllowed must be less than maxQAChallengeSize 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> qaMaximumWrongAnswersAllowed {
            get {
                return this.qaMaximumWrongAnswersAllowedField;
            }
            set {
                this.qaMaximumWrongAnswersAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if word substitutions can be used when comparing the 
    ///   answer and response in a question and answer challenge. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> qaInexactMatchAllowed {
            get {
                return this.qaInexactMatchAllowedField;
            }
            set {
                this.qaInexactMatchAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The characters that can appear in a one-time password (OTP).
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] OTPCellAlphabet {
            get {
                return this.oTPCellAlphabetField;
            }
            set {
                this.oTPCellAlphabetField = value;
            }
        }
        
    /// <datatype>
    ///   CellReplacement[]
    /// </datatype>
    /// <value>
    ///   A list of characters that are replaced in a one-time password (OTP) 
    ///   response before it is validated. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CellReplacement[] OTPCellReplacements {
            get {
                return this.oTPCellReplacementsField;
            }
            set {
                this.oTPCellReplacementsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The lifetime in seconds of a OTP. A value of 0 means an infinite 
    ///   lifetime. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> OTPLifetime {
            get {
                return this.oTPLifetimeField;
            }
            set {
                this.oTPLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of characters in a one-time password (OTP).
    ///   Must be at least 1.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> OTPLength {
            get {
                return this.oTPLengthField;
            }
            set {
                this.oTPLengthField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if a user's one-time password (OTP) can be delivered 
    ///   via an out-of-band delivery mechanism. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> OTPDeliveryEnabled {
            get {
                return this.oTPDeliveryEnabledField;
            }
            set {
                this.oTPDeliveryEnabledField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if the OTP is generated for each challenge request. If 
    ///   set to false, a new OTP is only generated if an OTP doesn't exist or 
    ///   the current OTP is expired. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> OTPAlwaysGenerate {
            get {
                return this.oTPAlwaysGenerateField;
            }
            set {
                this.oTPAlwaysGenerateField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if OTP dynamic refresh is enabled. If set to true, new 
    ///   OTPs are automatically generated after authentication. 
    ///   If set to false, new OTPs are generated as necessary when an OTP 
    ///   challenge is requested. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> OTPDynamicRefresh {
            get {
                return this.oTPDynamicRefreshField;
            }
            set {
                this.oTPDynamicRefreshField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Number of outstanding OTPs allowed for users.
    ///   The value must be a positive integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> OTPNumberOutstanding {
            get {
                return this.oTPNumberOutstandingField;
            }
            set {
                this.oTPNumberOutstandingField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   When the number of OTPs below the number outstanding reaches the 
    ///   specified threshold, new OTPs are generated. This value must be a positive 
    ///   integer not exceeding the OTPNumberOutstanding policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> OTPRefreshThreshold {
            get {
                return this.oTPRefreshThresholdField;
            }
            set {
                this.oTPRefreshThresholdField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if mutual authentication secrets can be returned with 
    ///   a challenge. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ReturnAuthSecretWithChall {
            get {
                return this.returnAuthSecretWithChallField;
            }
            set {
                this.returnAuthSecretWithChallField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if user tokens are automatically unassigned when the 
    ///   user they belong to is deleted. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> autoUnassignTokens {
            get {
                return this.autoUnassignTokensField;
            }
            set {
                this.autoUnassignTokensField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if tokens are automatically moved to the user's group 
    ///   during assignment. 
    ///   The administrator requires access to both groups and the tokenSet 
    ///   permission in order to move the token to the user's group. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> autoMoveTokens {
            get {
                return this.autoMoveTokensField;
            }
            set {
                this.autoMoveTokensField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, challenge retention is disabled for TOKENCR challenges. This 
    ///   means a new challenge will be generated for every challenge request. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> disableTokenChallengeRetention {
            get {
                return this.disableTokenChallengeRetentionField;
            }
            set {
                this.disableTokenChallengeRetentionField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the TOKENCR challenge lifetime in seconds. A value of 0 
    ///   means infinite lifetime. 
    ///   When requesting a challenge, if the retained challenge has exceeded 
    ///   its lifetime a new challenge is generated. When authenticating a 
    ///   challenge, if the retained challenge has exceeded its lifetime a 
    ///   USER_NO_CHALLENGE error is returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> tokenChallengeLifetime {
            get {
                return this.tokenChallengeLifetimeField;
            }
            set {
                this.tokenChallengeLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the lockout count is updated when an existing TOKENCR 
    ///   challenge is replaced during a challenge request either because challenge 
    ///   retention is disabled or because its lifetime has expired. If false, 
    ///   the lockout count is not updated. The default for this policy is true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> updateLockoutForReplacedTokenChallenge {
            get {
                return this.updateLockoutForReplacedTokenChallengeField;
            }
            set {
                this.updateLockoutForReplacedTokenChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of allowed token sets for users with this policy. 
    ///   The value must be a positive integer. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxAllowedTokenSets {
            get {
                return this.maxAllowedTokenSetsField;
            }
            set {
                this.maxAllowedTokenSetsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if the NONE authentication type can be used when 
    ///   performing an authentication request. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allowNONEAuthentication {
            get {
                return this.allowNONEAuthenticationField;
            }
            set {
                this.allowNONEAuthenticationField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if the temporary PIN is considered last when Entrust 
    ///   IdentityGuard is selecting a user's authentication type. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> ConsiderTempPINLast {
            get {
                return this.considerTempPINLastField;
            }
            set {
                this.considerTempPINLastField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if information about the last authentication for a 
    ///   user is stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> storeLastAuthInfo {
            get {
                return this.storeLastAuthInfoField;
            }
            set {
                this.storeLastAuthInfoField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if repository entries that are disabled can be used to 
    ///   create Entrust IdentityGuard users. If false (the default), disabled 
    ///   repository entries will be skipped over during user creation. If 
    ///   true, disabled repository entries may be used to store the Entrust 
    ///   IdentityGuard user data. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AllowCreateIfDisabledInRepository {
            get {
                return this.allowCreateIfDisabledInRepositoryField;
            }
            set {
                this.allowCreateIfDisabledInRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if repository entries that are expired can be used to 
    ///   create Entrust IdentityGuard users. If false (the default), expired 
    ///   repository entries will be skipped over during user creation. If true, 
    ///   expired repository entries may be used to store the Entrust 
    ///   IdentityGuard user data. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AllowCreateIfExpiredInRepository {
            get {
                return this.allowCreateIfExpiredInRepositoryField;
            }
            set {
                this.allowCreateIfExpiredInRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if an Entrust IdentityGuard user can perform 
    ///   authentication operations when their repository entry is disabled. 
    ///   If false (the default), users with a disabled repository entry cannot 
    ///   authenticate and any attempt to authenticate will fail. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AllowAuthIfDisabledInRepository {
            get {
                return this.allowAuthIfDisabledInRepositoryField;
            }
            set {
                this.allowAuthIfDisabledInRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if an Entrust IdentityGuard user can perform 
    ///   authentication operations when their repository entry is expired. 
    ///   If false (the default), users with an expired repository entry cannot 
    ///   authenticate and any attempt to authenticate will fail. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AllowAuthIfExpiredInRepository {
            get {
                return this.allowAuthIfExpiredInRepositoryField;
            }
            set {
                this.allowAuthIfExpiredInRepositoryField = value;
            }
        }
        
    /// <datatype>
    ///   TransactionSignatureType
    /// </datatype>
    /// <value>
    ///   Specifies how transaction receipts are signed.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<TransactionSignatureType> transactionSignatureType {
            get {
                return this.transactionSignatureTypeField;
            }
            set {
                this.transactionSignatureTypeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the transaction lifetime in seconds.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> transactionLifetime {
            get {
                return this.transactionLifetimeField;
            }
            set {
                this.transactionLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the maximum number of transaction details that can be 
    ///   specified for a transaction. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxNumTransactionDetails {
            get {
                return this.maxNumTransactionDetailsField;
            }
            set {
                this.maxNumTransactionDetailsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies if self-signed user certificates can be assigned to a user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AllowSelfSignedUserCert {
            get {
                return this.allowSelfSignedUserCertField;
            }
            set {
                this.allowSelfSignedUserCertField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies if a user certificate that isn't self-signed but not issued 
    ///   by a CA registered with Entrust IdentityGuard can be can be assigned 
    ///   to a user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AllowCertNotIssuedByRegisteredCA {
            get {
                return this.allowCertNotIssuedByRegisteredCAField;
            }
            set {
                this.allowCertNotIssuedByRegisteredCAField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies that user certificates issued by any CA registered with 
    ///   Entrust IdentityGuard can be assigned to a user. If this value is set to 
    ///   true, the AllowedRegisteredCAs parameter should not be set. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AllowAllRegisteredCAs {
            get {
                return this.allowAllRegisteredCAsField;
            }
            set {
                this.allowAllRegisteredCAsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the 
    ///   AllowedRegisteredCAs parameter are added to the existing values instead of 
    ///   overwriting them. 
    ///   Both AddAllowedRegisteredCAs and RemoveAllowedRegisteredCAs can not be 
    ///   set to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AddAllowedRegisteredCAs {
            get {
                return this.addAllowedRegisteredCAsField;
            }
            set {
                this.addAllowedRegisteredCAsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the 
    ///   AllowedRegisteredCAs parameter are removed from the existing values instead of 
    ///   overwriting them. 
    ///   Both AddAllowedRegisteredCAs and RemoveAllowedRegisteredCAs can not be 
    ///   set to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RemoveAllowedRegisteredCAs {
            get {
                return this.removeAllowedRegisteredCAsField;
            }
            set {
                this.removeAllowedRegisteredCAsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   User certificates issued by the specified registered CAs can be 
    ///   assigned to a user. 
    ///   If the AllowAllRegisteredCAs policy is set to true, this policy will 
    ///   not be set. If the AllowAllRegistredCAs value is set to true, this 
    ///   value should not be set. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] AllowedRegisteredCAs {
            get {
                return this.allowedRegisteredCAsField;
            }
            set {
                this.allowedRegisteredCAsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies if a user certificate that is not issued by a managed CA can 
    ///   be used to authenticate a user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AllowCertNotIssuedByManagedCA {
            get {
                return this.allowCertNotIssuedByManagedCAField;
            }
            set {
                this.allowCertNotIssuedByManagedCAField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies that user certificates issued by any managed CA can be used 
    ///   to authenticate a user. 
    ///   If this value is set to true, the AllowedManagedCAs parameter should 
    ///   not be set. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AllowAllManagedCAs {
            get {
                return this.allowAllManagedCAsField;
            }
            set {
                this.allowAllManagedCAsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the 
    ///   AllowedManagedCAs parameter are added to the existing values instead of 
    ///   overwriting them. 
    ///   Both AddAllowedManagedCAs and RemoveAllowedManagedCAs can not be set 
    ///   to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AddAllowedManagedCAs {
            get {
                return this.addAllowedManagedCAsField;
            }
            set {
                this.addAllowedManagedCAsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the 
    ///   AllowedManagedCAs parameter are removed from the existing values instead of 
    ///   overwriting them. 
    ///   Both AddAllowedManagedCAs and RemoveAllowedManagedCAs can not be set 
    ///   to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RemoveAllowedManagedCAs {
            get {
                return this.removeAllowedManagedCAsField;
            }
            set {
                this.removeAllowedManagedCAsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   User certificates issued by the specified managed CAs can be used to 
    ///   authenticate a user. 
    ///   If the AllowAllManagedCAs policy is set to true, this policy will not 
    ///   be set. If the AllowAllManagedCAs value is set to true, this value 
    ///   should not be set. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] AllowedManagedCAs {
            get {
                return this.allowedManagedCAsField;
            }
            set {
                this.allowedManagedCAsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Specifies the hashing algorithm used for certificate authentication. 
    ///   Possible values are MD5, SHA-1 and SHA-256. If not specified, this 
    ///   value defaults to SHA-256. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CertificateAuthenticationHashAlg {
            get {
                return this.certificateAuthenticationHashAlgField;
            }
            set {
                this.certificateAuthenticationHashAlgField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the size of the certificate authentication challenge. The 
    ///   value must be between 32 and 1000 and has a default value of 32. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> CertificateAuthenticationChallengeSize {
            get {
                return this.certificateAuthenticationChallengeSizeField;
            }
            set {
                this.certificateAuthenticationChallengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the maximum number of certificates that can be assigned to a 
    ///   user. 
    ///   This value must be a non-negative integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> MaxCertsPerUser {
            get {
                return this.maxCertsPerUserField;
            }
            set {
                this.maxCertsPerUserField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating whether old user certificates are automatically 
    ///   deleted from a user when the user has reached the maximum number of 
    ///   allowed certificates. Certificates are only automatically deleted when new 
    ///   certificates are assigned during authentication. Certificates are 
    ///   not automatically deleted when new certificates are assigned by an 
    ///   administrator. 
    ///   that can be assigned to a user.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AutoDeleteUserCerts {
            get {
                return this.autoDeleteUserCertsField;
            }
            set {
                this.autoDeleteUserCertsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, challenge retention is disabled for CERTIFICATE challenges. 
    ///   This means a new challenge will be generated for every challenge 
    ///   request. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> disableCertificateChallengeRetention {
            get {
                return this.disableCertificateChallengeRetentionField;
            }
            set {
                this.disableCertificateChallengeRetentionField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, challenge delivery is allowed for CERTIFICATE challenges. 
    ///   This means a new challenge can be delivered to mobile smart credentials 
    ///   that are registered to receive certificate challenges. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allowCertificateChallengeDelivery {
            get {
                return this.allowCertificateChallengeDeliveryField;
            }
            set {
                this.allowCertificateChallengeDeliveryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, transaction delivery is allowed for CERTIFICATE challenges. 
    ///   This means transaction details can be delivered to mobile smart 
    ///   credentials that are registered to receive certificate challenges. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allowCertificateTransactionDelivery {
            get {
                return this.allowCertificateTransactionDeliveryField;
            }
            set {
                this.allowCertificateTransactionDeliveryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, signing operations are allowed for smart credentials 
    ///   supporting certificate challenges. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allowCertificateSign {
            get {
                return this.allowCertificateSignField;
            }
            set {
                this.allowCertificateSignField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the CERTIFICATE challenge lifetime in seconds. A value of 0 
    ///   means infinite lifetime. 
    ///   When requesting a challenge, if the retained challenge has exceeded 
    ///   its lifetime a new challenge is generated. When authenticating a 
    ///   challenge, if the retained challenge has exceeded its lifetime a 
    ///   USER_NO_CHALLENGE error is returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> certificateChallengeLifetime {
            get {
                return this.certificateChallengeLifetimeField;
            }
            set {
                this.certificateChallengeLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the lockout count is updated when an existing CERTIFICATE 
    ///   challenge is replaced during a challenge request either because 
    ///   challenge retention is disabled or because its lifetime has expired. If 
    ///   false, the lockout count is not updated. The default for this policy is 
    ///   true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> updateLockoutForReplacedCertificateChallenge {
            get {
                return this.updateLockoutForReplacedCertificateChallengeField;
            }
            set {
                this.updateLockoutForReplacedCertificateChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies that any Smart Credential Definition can be used to create 
    ///   Smart Credentials for a user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AllowAllSmartCredentialDefinitions {
            get {
                return this.allowAllSmartCredentialDefinitionsField;
            }
            set {
                this.allowAllSmartCredentialDefinitionsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the 
    ///   AllowedSmartCredentialDefinitions parameter are added to the existing values 
    ///   instead of overwriting them. 
    ///   Both AddAllowedSmartCredentialDefinitions and 
    ///   RemoveAllowedSmartCredentialDefinitions can not be set to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AddAllowedSmartCredentialDefinitions {
            get {
                return this.addAllowedSmartCredentialDefinitionsField;
            }
            set {
                this.addAllowedSmartCredentialDefinitionsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the 
    ///   AllowedSmartCredentialDefinitions parameter are removed from the existing values 
    ///   instead of overwriting them. 
    ///   Both AddAllowedSmartCredentialDefinitions and 
    ///   RemoveAllowedSmartCredentialDefinitions can not be set to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RemoveAllowedSmartCredentialDefinitions {
            get {
                return this.removeAllowedSmartCredentialDefinitionsField;
            }
            set {
                this.removeAllowedSmartCredentialDefinitionsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   Specifies a list of Smart Credential Definitions that can be used to 
    ///   create Smart Credentials for a user. 
    ///   If the AllowAllSmartCredentialDefinitions policy is set to true, this 
    ///   policy will not be set. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] AllowedSmartCredentialDefinitions {
            get {
                return this.allowedSmartCredentialDefinitionsField;
            }
            set {
                this.allowedSmartCredentialDefinitionsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the maximum number of Smart Credentials that can be created 
    ///   for a user. 
    ///   This value must be a non-negative integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> MaxSmartCredentialsPerUser {
            get {
                return this.maxSmartCredentialsPerUserField;
            }
            set {
                this.maxSmartCredentialsPerUserField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The prefix added to Smart Credential Ids.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SmartCredentialIDPrefix {
            get {
                return this.smartCredentialIDPrefixField;
            }
            set {
                this.smartCredentialIDPrefixField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The token vendor used when creating a token for the Smart Credential 
    ///   OTP applet. 
    ///   If not set, the default token vendor is used. The specified token 
    ///   vendor must support token creation. Specify an empty string value to 
    ///   remove the current value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SmartCredentialTokenVendor {
            get {
                return this.smartCredentialTokenVendorField;
            }
            set {
                this.smartCredentialTokenVendorField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if user smart credentials are automatically unassigned 
    ///   when they or the user they belong to is deleted. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AutoUnassignSmartCredentials {
            get {
                return this.autoUnassignSmartCredentialsField;
            }
            set {
                this.autoUnassignSmartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if user smart credentials are automatically canceled 
    ///   when they are deleted or unassigned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AutoCancelSmartCredentials {
            get {
                return this.autoCancelSmartCredentialsField;
            }
            set {
                this.autoCancelSmartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if the force option is applied when auto-canceling 
    ///   smart credentials. 
    ///   This option only applies when AutoCancelSmartCredentials is true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AutoCancelSmartCredentialsForce {
            get {
                return this.autoCancelSmartCredentialsForceField;
            }
            set {
                this.autoCancelSmartCredentialsForceField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if smart credentials are automatically moved to the 
    ///   user's group during assignment. 
    ///   The administrator requires access to both groups and the 
    ///   smartCredentialSet permission in order to move the smart credentials to the user's 
    ///   group. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AutoMoveSmartCredentials {
            get {
                return this.autoMoveSmartCredentialsField;
            }
            set {
                this.autoMoveSmartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if smart credentials are automatically registered to 
    ///   PACS if appropriate when they are issued. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AutoRegisterSmartCredentialsToPACS {
            get {
                return this.autoRegisterSmartCredentialsToPACSField;
            }
            set {
                this.autoRegisterSmartCredentialsToPACSField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if smart credentials are automatically suspended from 
    ///   PACS if appropriate when they are deleted. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AutoSuspendSmartCredentialsFromPACS {
            get {
                return this.autoSuspendSmartCredentialsFromPACSField;
            }
            set {
                this.autoSuspendSmartCredentialsFromPACSField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if software smart credentials can be activated for 
    ///   users with this policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AllowSoftwareSmartCredentials {
            get {
                return this.allowSoftwareSmartCredentialsField;
            }
            set {
                this.allowSoftwareSmartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   PINPromptType
    /// </datatype>
    /// <value>
    ///   Policy indicating how the mobile smart credential applications will 
    ///   prompt the user for their PIN. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<PINPromptType> MobileSmartCredentialPINPrompt {
            get {
                return this.mobileSmartCredentialPINPromptField;
            }
            set {
                this.mobileSmartCredentialPINPromptField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Policy indicating the session timeout after which the mobile smart 
    ///   credential will prompt the user to re-enter their PIN when the Mobile 
    ///   SmartCredential PIN Prompt policy is set to SESSION. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> MobileSmartCredentialSessionTimeout {
            get {
                return this.mobileSmartCredentialSessionTimeoutField;
            }
            set {
                this.mobileSmartCredentialSessionTimeoutField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Specifies that any Digital Id Configs can be used to create Digital 
    ///   Ids for a user. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AllowAllDigitalIdConfigs {
            get {
                return this.allowAllDigitalIdConfigsField;
            }
            set {
                this.allowAllDigitalIdConfigsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the 
    ///   AllowedDigitalIdConfigs parameter are added to the existing values instead of 
    ///   overwriting them. 
    ///   Both AddAllowedDigitalIdConfigs and RemoveAllowedDigitalIdConfigs can 
    ///   not be set to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AddAllowedDigitalIdConfigs {
            get {
                return this.addAllowedDigitalIdConfigsField;
            }
            set {
                this.addAllowedDigitalIdConfigsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If this value is set to true, the values specified in the 
    ///   AllowedDigitalIdConfigs parameter are removed from the existing values instead of 
    ///   overwriting them. 
    ///   Both AddAllowedDigitalIdConfigs and RemoveAllowedDigitalIdConfigs can 
    ///   not be set to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> RemoveAllowedDigitalIdConfigs {
            get {
                return this.removeAllowedDigitalIdConfigsField;
            }
            set {
                this.removeAllowedDigitalIdConfigsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   Specifies a list of Digital Ids Configs that can be used to create 
    ///   Digital Ids for a user. 
    ///   If the AllowAllDigitalIdConfigs policy is set to true, this policy 
    ///   will not be set. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] AllowedDigitalIdConfigs {
            get {
                return this.allowedDigitalIdConfigsField;
            }
            set {
                this.allowedDigitalIdConfigsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the maximum number of Digital Ids that can be created for a 
    ///   user. 
    ///   This value must be a non-negative integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> MaxDigitalIdsPerUser {
            get {
                return this.maxDigitalIdsPerUserField;
            }
            set {
                this.maxDigitalIdsPerUserField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the maximum number of Client Types per Digital Id.
    ///   This value must be a non-negative integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> MaxClientTypesPerDigitalId {
            get {
                return this.maxClientTypesPerDigitalIdField;
            }
            set {
                this.maxClientTypesPerDigitalIdField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if user digital ids are automatically cancelled when 
    ///   they, a smart credential using the digital Id or the user they belong 
    ///   to is deleted. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> AutoCancelDigitalIds {
            get {
                return this.autoCancelDigitalIdsField;
            }
            set {
                this.autoCancelDigitalIdsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   User registration password lifetime in minutes.
    ///   This value must be a non-negative integer.
    ///   A value of 0 means infinite lifetime.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> UserRegistrationPasswordLifetime {
            get {
                return this.userRegistrationPasswordLifetimeField;
            }
            set {
                this.userRegistrationPasswordLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of random bytes in a user registration password. The value 
    ///   must be between 8 and 32. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> UserRegistrationPasswordLength {
            get {
                return this.userRegistrationPasswordLengthField;
            }
            set {
                this.userRegistrationPasswordLengthField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the maximum number of federations that can be created for a 
    ///   user. 
    ///   This value must be a non-negative integer.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> MaxFederationsPerUser {
            get {
                return this.maxFederationsPerUserField;
            }
            set {
                this.maxFederationsPerUserField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of user preferences allowed for a user. This value 
    ///   must be a non-negative integer. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> MaxNumUserPreferences {
            get {
                return this.maxNumUserPreferencesField;
            }
            set {
                this.maxNumUserPreferencesField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size in characters of the value for a user preference. 
    ///   This value must be a non-negative integer. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> MaxSizeUserPreference {
            get {
                return this.maxSizeUserPreferenceField;
            }
            set {
                this.maxSizeUserPreferenceField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The required length of new personal verification numbers (PVNs). 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> PVNLength {
            get {
                return this.pVNLengthField;
            }
            set {
                this.pVNLengthField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates whether a user is required to change their personal 
    ///   verification number (PVN) after it is set by an administrator. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> PVNChangeRequiredOnAdminReset {
            get {
                return this.pVNChangeRequiredOnAdminResetField;
            }
            set {
                this.pVNChangeRequiredOnAdminResetField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   The authentication types that require a personal verification number 
    ///   to be provided when authenticating. 
    ///   This list can only include the GRID, TOKENRO, TOKENCR and OTP 
    ///   authentication types. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] authTypesRequiringPVN {
            get {
                return this.authTypesRequiringPVNField;
            }
            set {
                this.authTypesRequiringPVNField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If a PVN is required for TOKENRO or TOKENCR authentication, this 
    ///   setting indicates if authentication requests for all token vendors must 
    ///   specify the PVN. If set to false then the tokenVendorsRequringPVN 
    ///   attribute specifies the token vendors that require a PVN. When creating a 
    ///   new policy, this setting defaults to true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> allTokenVendorsRequirePVN {
            get {
                return this.allTokenVendorsRequirePVNField;
            }
            set {
                this.allTokenVendorsRequirePVNField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   If a PVN is required for TOKENRO or TOKENCR authentication, this 
    ///   setting indicates if authentication requests for a specific token vendor 
    ///   must specify the PVN. This attribute is ignored if 
    ///   tokenVendorsRequiringPVN is set to true. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] tokenVendorsRequiringPVN {
            get {
                return this.tokenVendorsRequiringPVNField;
            }
            set {
                this.tokenVendorsRequiringPVNField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of days for user activation.
    ///   A value of 0 means that the user has no grace period, they will need 
    ///   to activate their card or token immediately. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> numDaysForActivation {
            get {
                return this.numDaysForActivationField;
            }
            set {
                this.numDaysForActivationField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType[]
    /// </datatype>
    /// <value>
    ///   The authentication types that trigger user activation on the first 
    ///   successful authentication with one of these types. This list can only 
    ///   include the GRID, TOKENRO, and TOKENCR authentication types. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AuthenticationType[] ActivationAuthTypes {
            get {
                return this.activationAuthTypesField;
            }
            set {
                this.activationAuthTypesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicate if the IP address should be checked when comparing a location 
    ///   to entries in a user's location history. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> checkIPAddressInLocationHistory {
            get {
                return this.checkIPAddressInLocationHistoryField;
            }
            set {
                this.checkIPAddressInLocationHistoryField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size of a user's location history.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxLocationHistorySize {
            get {
                return this.maxLocationHistorySizeField;
            }
            set {
                this.maxLocationHistorySizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The lifetime (in days) of an entry in the user's location history. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> locationHistoryLifetime {
            get {
                return this.locationHistoryLifetimeField;
            }
            set {
                this.locationHistoryLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum velocity (in km/h) a user can travel. This value is used 
    ///   when comparing a user's current location against previous locations 
    ///   during IP authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxVelocity {
            get {
                return this.maxVelocityField;
            }
            set {
                this.maxVelocityField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the velocity check is performed during IP authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> checkVelocity {
            get {
                return this.checkVelocityField;
            }
            set {
                this.checkVelocityField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The country blacklist is a list of country codes. Valid country codes 
    ///   can be obtained from the country information returned by the 
    ///   countryList operation. 
    ///   <p>
    ///   Users authenticating from these countries may not be allowed to 
    ///   authenticate or may require additional authentication. 
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] countryBlacklist {
            get {
                return this.countryBlacklistField;
            }
            set {
                this.countryBlacklistField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The country blacklist is a list of country codes. Users authenticating 
    ///   from these countries may not be allowed to authenticate or may 
    ///   require additional authentication. 
    ///   <p>
    ///   If this attribute is set to true, the countries in the 
    ///   countryBlacklist attribute will be added to the current value. This attribute will 
    ///   be ignored if the countryBlacklist attribute is not set. 
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> addCountryBlacklist {
            get {
                return this.addCountryBlacklistField;
            }
            set {
                this.addCountryBlacklistField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The country blacklist is a list of country codes. Users authenticating 
    ///   from these countries may not be allowed to authenticate or may 
    ///   require additional authentication. 
    ///   <p>
    ///   If this attribute is set, the countries in the countryBlacklist 
    ///   attribute will be removed from the current value. This attribute is ignored 
    ///   if the countryBlacklist is not set. 
    ///   or the addCountryBlacklist attribute is set.
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeCountryBlacklist {
            get {
                return this.removeCountryBlacklistField;
            }
            set {
                this.removeCountryBlacklistField = value;
            }
        }
        
    /// <datatype>
    ///   ExpectedLocation[]
    /// </datatype>
    /// <value>
    ///   The expected locations list is a list of locations that users are 
    ///   expected to authenticate from. Users authenticated from an expected 
    ///   location may require less authentication. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ExpectedLocation[] expectedLocations {
            get {
                return this.expectedLocationsField;
            }
            set {
                this.expectedLocationsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The expected locations list is a list of locations that users are 
    ///   expected to authenticate from. Users authenticated from an expected 
    ///   location may require less authentication. 
    ///   <p>
    ///   If this attribute is set to true, the locations in the 
    ///   expectedLocations attribute will be added to the current value. This attribute will 
    ///   be ignored if the expectedLocation attribute is not set. 
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> addExpectedLocations {
            get {
                return this.addExpectedLocationsField;
            }
            set {
                this.addExpectedLocationsField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   The expected locations list is a list of locations that users are 
    ///   expected to authenticate from. Users authenticated from an expected 
    ///   location may require less authentication. 
    ///   <p>
    ///   If this attribute is set, the locations in the expectedLocations 
    ///   attribute will be removed from the current value. This attribute is 
    ///   ignored if the expectedLocations attribute is not set. or the 
    ///   addExpectedLocations attribute is set. 
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeExpectedLocations {
            get {
                return this.removeExpectedLocationsField;
            }
            set {
                this.removeExpectedLocationsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If the user has their own list of expected locations instead of 
    ///   relying on expectedLocations, this policy defines the maximum size of that 
    ///   list. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxUserExpectedLocationsSize {
            get {
                return this.maxUserExpectedLocationsSizeField;
            }
            set {
                this.maxUserExpectedLocationsSizeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Determines whether the values in the normalReject parameter are added 
    ///   to the existing values or replace the existing values. If 
    ///   normalReject is not specified, this value is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> normalRejectAdd {
            get {
                return this.normalRejectAddField;
            }
            set {
                this.normalRejectAddField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Determines whether the values in the normalReject parameter are 
    ///   removed from the existing values or replace the existing values. If 
    ///   normalReject is not specified, this value is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> normalRejectRemove {
            get {
                return this.normalRejectRemoveField;
            }
            set {
                this.normalRejectRemoveField = value;
            }
        }
        
    /// <datatype>
    ///   RBAExpressionList
    /// </datatype>
    /// <value>
    ///   A list of RBA expressions. If the results of normal RBA authentication 
    ///   match any expression in this list, the request will be rejected. 
    ///   If normalRejectAdd is specified as true, these values are added to the 
    ///   existing values. Otherwise, if normalRejectRemove is specified as 
    ///   true, these values are removed from the existing values. Otherwise, 
    ///   these values replace the existing values. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public RBAExpressionList normalReject {
            get {
                return this.normalRejectField;
            }
            set {
                this.normalRejectField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Determines whether the values in the normalAuthenticated parameter are 
    ///   added to the existing values or replace the existing values. If 
    ///   normalAuthenticated is not specified, this value is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> normalAuthenticatedAdd {
            get {
                return this.normalAuthenticatedAddField;
            }
            set {
                this.normalAuthenticatedAddField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Determines whether the values in the normalAuthenticated parameter are 
    ///   removed from the existing values or replace the existing values. If 
    ///   normalAuthenticated is not specified, this value is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> normalAuthenticatedRemove {
            get {
                return this.normalAuthenticatedRemoveField;
            }
            set {
                this.normalAuthenticatedRemoveField = value;
            }
        }
        
    /// <datatype>
    ///   RBAExpressionList
    /// </datatype>
    /// <value>
    ///   A list of RBA expressions. If the results of normal RBA authentication 
    ///   do not match any in the normalReject list and do match any of the 
    ///   expressions in this list or the enhancedAuthenticated list, the request 
    ///   will be authenticated. 
    ///   If normalAuthenticatedAdd is specified as true, these values are added 
    ///   to the existing values. Otherwise, if normalAuthenticatedRemove is 
    ///   specified as true, these values are removed from the existing values. 
    ///   Otherwise, these values replace the existing values. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public RBAExpressionList normalAuthenticated {
            get {
                return this.normalAuthenticatedField;
            }
            set {
                this.normalAuthenticatedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Determines whether the values in the enhancedReject parameter are 
    ///   added to the existing values or replace the existing values. If 
    ///   enhancedReject is not specified, this value is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> enhancedRejectAdd {
            get {
                return this.enhancedRejectAddField;
            }
            set {
                this.enhancedRejectAddField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Determines whether the values in the enhancedReject parameter are 
    ///   removed from the existing values or replace the existing values. If 
    ///   enhancedReject is not specified, this value is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> enhancedRejectRemove {
            get {
                return this.enhancedRejectRemoveField;
            }
            set {
                this.enhancedRejectRemoveField = value;
            }
        }
        
    /// <datatype>
    ///   RBAExpressionList
    /// </datatype>
    /// <value>
    ///   A list of RBA expressions. If the results of enhanced RBA 
    ///   authentication match any expression in this list or any expression in the 
    ///   normalReject list, the request will be rejected. 
    ///   If enhancedRejectAdd is specified as true, these values are added to 
    ///   the existing values. Otherwise, if enhancedRejectRemove is specified 
    ///   as true, these values are removed from the existing values. Otherwise, 
    ///   these values replace the existing values. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public RBAExpressionList enhancedReject {
            get {
                return this.enhancedRejectField;
            }
            set {
                this.enhancedRejectField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Determines whether the values in the enhancedAuthenticated parameter 
    ///   are added to the existing values or replace the existing values. If 
    ///   enhancedAuthenticated is not specified, this value is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> enhancedAuthenticatedAdd {
            get {
                return this.enhancedAuthenticatedAddField;
            }
            set {
                this.enhancedAuthenticatedAddField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Determines whether the values in the enhancedAuthenticated parameter 
    ///   are removed from the existing values or replace the existing values. 
    ///   If enhancedAuthenticated is not specified, this value is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> enhancedAuthenticatedRemove {
            get {
                return this.enhancedAuthenticatedRemoveField;
            }
            set {
                this.enhancedAuthenticatedRemoveField = value;
            }
        }
        
    /// <datatype>
    ///   RBAExpressionList
    /// </datatype>
    /// <value>
    ///   A list of RBA expressions. If the results of enhanced RBA 
    ///   authentication were not rejected according to the expressions specified in the 
    ///   normalReject and enhancedReject lists and they match any of the 
    ///   expressions in this list, the request will be authenticated. 
    ///   If enhancedAuthenticatedAdd is specified as true, these values are 
    ///   added to the existing values. Otherwise, if enhancedAuthenticatedRemove 
    ///   is specified as true, these values are removed from the existing 
    ///   values. Otherwise, these values replace the existing values. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public RBAExpressionList enhancedAuthenticated {
            get {
                return this.enhancedAuthenticatedField;
            }
            set {
                this.enhancedAuthenticatedField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   A risk score threshold used for normal transactions.
    ///   An external risk score is a value between 0 and 100. If the score is 
    ///   less than the ExternalRiskScoreNormalPass policy, then the external 
    ///   risk score test passes. 
    ///   The ExternalRiskScoreNormalPass value must be less than or equal to 
    ///   the ExternalRiskScoreNormalFail value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> ExternalRiskScoreNormalPass {
            get {
                return this.externalRiskScoreNormalPassField;
            }
            set {
                this.externalRiskScoreNormalPassField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   A risk score threshold used for normal transactions.
    ///   An external risk score is a value between 0 and 100. If the score is 
    ///   greater than the ExternalRiskScoreNormalFail policy, then the external 
    ///   risk score test fails. 
    ///   The ExternalRiskScoreNormalPass value must be less than or equal to 
    ///   the ExternalRiskScoreNormalFail value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> ExternalRiskScoreNormalFail {
            get {
                return this.externalRiskScoreNormalFailField;
            }
            set {
                this.externalRiskScoreNormalFailField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   A risk score threshold used for enhanced transactions.
    ///   An external risk score is a value between 0 and 100. If the score is 
    ///   less than the ExternalRiskScoreEnhancedPass policy, then the external 
    ///   risk score test passes. 
    ///   The ExternalRiskScoreEnhancedPass value must be less than or equal to 
    ///   the ExternalRiskScoreEnhancedFail value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> ExternalRiskScoreEnhancedPass {
            get {
                return this.externalRiskScoreEnhancedPassField;
            }
            set {
                this.externalRiskScoreEnhancedPassField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   A risk score threshold used for enhanced transactions.
    ///   An external risk score is a value between 0 and 100. If the score is 
    ///   greater than the ExternalRiskScoreEnhancedFail policy, then the 
    ///   external risk score test fails. 
    ///   The ExternalRiskScorePass value must be less than or equal to the 
    ///   ExternalRiskScoreEnhancedFail value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> ExternalRiskScoreEnhancedFail {
            get {
                return this.externalRiskScoreEnhancedFailField;
            }
            set {
                this.externalRiskScoreEnhancedFailField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the risk engine to be used to calculate a risk score for 
    ///   the current application session. Specify an empty string value to 
    ///   unset the risk engine policy. 
    ///   If this value is not set, external risk scoring is not available. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ExternalRiskEngine {
            get {
                return this.externalRiskEngineField;
            }
            set {
                this.externalRiskEngineField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if transactions should be delivered to soft tokens 
    ///   that support delivery. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> PerformTransactionDelivery {
            get {
                return this.performTransactionDeliveryField;
            }
            set {
                this.performTransactionDeliveryField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating whether or not soft tokens require users to enter a 
    ///   PIN before generating an OTP. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> SoftTokenPINRequired {
            get {
                return this.softTokenPINRequiredField;
            }
            set {
                this.softTokenPINRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of digits in an OTP response from a soft token. Allowed 
    ///   values are 4, 6, and 8. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> SoftTokenOTPLength {
            get {
                return this.softTokenOTPLengthField;
            }
            set {
                this.softTokenOTPLengthField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Descriptive comments.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Parameters used to modify a card specification policy.
    ///   All parameters are optional.
    ///   <p>
    ///   Some of the parameters have restrictions that are affected by other 
    ///   parameters that may or may not be set. In this case, when modifying an 
    ///   existing policy, the resulting policy must obey the restrictions 
    ///   listed. For example, if only the challengeSize parameter is included, the 
    ///   resulting policy must obey the restrictions placed on the 
    ///   challengeSize. 
    ///   </p>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CardSpecParms {
        
        private System.Nullable<int> numRowsField;
        
        private System.Nullable<int> numColumnsField;
        
        private System.Nullable<int> cellSizeField;
        
        private string[] cellAlphabetField;
        
        private CellReplacement[] cellReplacementsField;
        
        private System.Nullable<int> challengeSizeField;
        
        private System.Nullable<int> minChallengeSizeField;
        
        private System.Nullable<int> maxChallengeSizeField;
        
        private System.Nullable<long> lifetimeField;
        
        private System.Nullable<long> supersedeField;
        
        private System.Nullable<bool> sortChallengeField;
        
        private System.Nullable<bool> userInfoInChallengeField;
        
        private System.Nullable<bool> disableChallengeRetentionField;
        
        private System.Nullable<int> challengeLifetimeField;
        
        private System.Nullable<bool> updateLockoutForReplacedChallengeField;
        
        private System.Nullable<bool> disableAnonymousAuthField;
        
        private System.Nullable<ChallengeGenAlg> challengeGenAlgField;
        
        private System.Nullable<bool> gatherUsageStatisticsField;
        
        private System.Nullable<int> leastUsedCellsPerChallengeField;
        
        private System.Nullable<int> challengeCountWarningThresholdField;
        
        private System.Nullable<int> challengeCountReplacementThresholdField;
        
        private System.Nullable<int> leastUsedCellWarningThresholdField;
        
        private System.Nullable<int> leastUsedCellReplacementThresholdField;
        
        private string commentField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of rows in the card. Must be at least 1, and the product of 
    ///   numRows and numColumns must not exceed one million. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> numRows {
            get {
                return this.numRowsField;
            }
            set {
                this.numRowsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of columns in the card. Must be at least 1, and the product 
    ///   of numRows and numColumns must not exceed one million. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> numColumns {
            get {
                return this.numColumnsField;
            }
            set {
                this.numColumnsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of characters in each cell. This must be at least 1 and at 
    ///   most 20. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> cellSize {
            get {
                return this.cellSizeField;
            }
            set {
                this.cellSizeField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The characters that can appear in a cell.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] cellAlphabet {
            get {
                return this.cellAlphabetField;
            }
            set {
                this.cellAlphabetField = value;
            }
        }
        
    /// <datatype>
    ///   CellReplacement[]
    /// </datatype>
    /// <value>
    ///   A list of characters that are replaced in a challenge response before 
    ///   it is validated. This can be used to make challenge validation 
    ///   case-insensitive, or to make many similar-looking characters such as '1', 
    ///   'l', and 'I' all be treated as the same character during validation. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CellReplacement[] cellReplacements {
            get {
                return this.cellReplacementsField;
            }
            set {
                this.cellReplacementsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The size of the challenge. The challenge size must obey the following 
    ///   constraint: 1 &lt;= minChallengeSize &lt;= challengeSize &lt;= 
    ///   maxChallengeSize &lt;= numRows * numColumns 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> challengeSize {
            get {
                return this.challengeSizeField;
            }
            set {
                this.challengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The minimum size of the challenge. Used to validate the size when the 
    ///   call to obtain a challenge specifies an explicit size. This must obey 
    ///   the following constraint: 1 &lt;= minChallengeSize &lt;= 
    ///   challengeSize &lt;= maxChallengeSize &lt;= numRows * numColumns 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> minChallengeSize {
            get {
                return this.minChallengeSizeField;
            }
            set {
                this.minChallengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum size of the challenge. Used to validate the size when the 
    ///   call to obtain a challenge specifies an explicit size. This must obey 
    ///   the following constraint: 1 &lt;= minChallengeSize &lt;= 
    ///   challengeSize &lt;= maxChallengeSize &lt;= numRows * numColumns 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxChallengeSize {
            get {
                return this.maxChallengeSizeField;
            }
            set {
                this.maxChallengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The lifetime in days of a card created using this policy.
    ///   This value must be at least 0 and at most 36500.
    ///   A value of 0 indicates that cards have infinite lifetime.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> lifetime {
            get {
                return this.lifetimeField;
            }
            set {
                this.lifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The amount of time in days that a superseded card can be used after it 
    ///   is superseded. 
    ///   This value must be at least 0 and at most 36500.
    ///   A value of 0 indicates that superseded cards can be used indefinitely. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> supersede {
            get {
                return this.supersedeField;
            }
            set {
                this.supersedeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, challenges are sorted by column/row after generation. 
    ///   Challenges sorted in this way are easier for a person to respond to. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> sortChallenge {
            get {
                return this.sortChallengeField;
            }
            set {
                this.sortChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If false, don't include the hasPin flag or serial number list in 
    ///   challenges. Including this information in a challenge may be classed as a 
    ///   leak of information since potentially anyone can ask for a challenge 
    ///   for any user in the system. On the other hand, this information can 
    ///   be useful to display to a user who is trying to authenticate, and for 
    ///   configuring the interface where the user responds to the challenge. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> userInfoInChallenge {
            get {
                return this.userInfoInChallengeField;
            }
            set {
                this.userInfoInChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, challenge retention is disabled for GRID challenges. This 
    ///   means a new challenge will be generated for every challenge request. 
    ///   Note that doing this allows an attacker who knows part of the GRID to 
    ///   request different challenges until they receive a challenge that they 
    ///   can answer. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> disableChallengeRetention {
            get {
                return this.disableChallengeRetentionField;
            }
            set {
                this.disableChallengeRetentionField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specifies the GRID challenge lifetime in seconds. A value of 0 means 
    ///   infinite lifetime. 
    ///   When requesting a challenge, if the retained challenge has exceeded 
    ///   its lifetime a new challenge is generated. When authenticating a 
    ///   challenge, if the retained challenge has exceeded its lifetime a 
    ///   USER_NO_CHALLENGE error is returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> challengeLifetime {
            get {
                return this.challengeLifetimeField;
            }
            set {
                this.challengeLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the lockout count is updated when an existing GRID challenge 
    ///   is replaced during a challenge request either because challenge 
    ///   retention is disabled or because its lifetime has expired. If false, the 
    ///   lockout count is not updated. The default for this policy is true. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> updateLockoutForReplacedChallenge {
            get {
                return this.updateLockoutForReplacedChallengeField;
            }
            set {
                this.updateLockoutForReplacedChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, don't allow anonymous authentication operations for users in 
    ///   groups assigned this policy. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> disableAnonymousAuth {
            get {
                return this.disableAnonymousAuthField;
            }
            set {
                this.disableAnonymousAuthField = value;
            }
        }
        
    /// <datatype>
    ///   ChallengeGenAlg
    /// </datatype>
    /// <value>
    ///   Identifies the challenge generation algorithm being used.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ChallengeGenAlg> challengeGenAlg {
            get {
                return this.challengeGenAlgField;
            }
            set {
                this.challengeGenAlgField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Indicates whether or not usage statistics should be gathered. This 
    ///   only applies when the RANDOM challenge generation algorithm is being 
    ///   used; when the LEASTUSED challenge generation algorithm is being used 
    ///   usage statistics are always gathered regardless of this setting. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> gatherUsageStatistics {
            get {
                return this.gatherUsageStatisticsField;
            }
            set {
                this.gatherUsageStatisticsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Indicates the minimum number of least used cells that will be included 
    ///   in every generated challenge; only applies when the LEASTUSED 
    ///   challenge generation algorithm is being used. This value must be at least 
    ///   one, and cannot exceed the maximum challenge size. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> leastUsedCellsPerChallenge {
            get {
                return this.leastUsedCellsPerChallengeField;
            }
            set {
                this.leastUsedCellsPerChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The challenge count warning threshold. Once a card has been used to 
    ///   successfully answer this many challenges, the card should be replaced. 
    ///   When a card that has reached this threshold is used for an 
    ///   authentication, a warning message will be generated in the logs. 
    ///   <p>
    ///   This value must be at least one, and not exceed 
    ///   challengeCountReplacementThreshold. 
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> challengeCountWarningThreshold {
            get {
                return this.challengeCountWarningThresholdField;
            }
            set {
                this.challengeCountWarningThresholdField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The challenge count replacement threshold. Once this many challenges 
    ///   have been reached the card will automatically be moved to the HOLD 
    ///   state and must be replaced. 
    ///   <p>
    ///    This value must be at least challengeCountWarningThreshold.
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> challengeCountReplacementThreshold {
            get {
                return this.challengeCountReplacementThresholdField;
            }
            set {
                this.challengeCountReplacementThresholdField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The least used cell warning threshold. Once the least used cell on the 
    ///   card (the cell that has been used in a successful authentication the 
    ///   least number of times) has been used this many times, the card 
    ///   should be replaced. When a card that has reached this threshold is used 
    ///   for an authentication, a warning message will be generated in the logs. 
    ///   <p>
    ///   This value must be at least one, and not exceed 
    ///   leastUsedCellReplacementThreshold. 
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> leastUsedCellWarningThreshold {
            get {
                return this.leastUsedCellWarningThresholdField;
            }
            set {
                this.leastUsedCellWarningThresholdField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The least used cell replacement threshold.
    ///   Once the least-used cell on the card has been used this many times, 
    ///   the card will automatically be moved to the HOLD state and must be 
    ///   replaced. 
    ///   <p>
    ///    This value must be at least leastUsedCellWarningThreshold.
    ///   </p>
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> leastUsedCellReplacementThreshold {
            get {
                return this.leastUsedCellReplacementThresholdField;
            }
            set {
                this.leastUsedCellReplacementThresholdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional descriptive comments.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Parameters used to modify a temporary PIN specification policy. 
    ///   All parameters are optional.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PINSpecParms {
        
        private System.Nullable<int> cellSizeField;
        
        private string[] cellAlphabetField;
        
        private CellReplacement[] cellReplacementsField;
        
        private System.Nullable<int> challengeSizeField;
        
        private System.Nullable<long> lifetimeField;
        
        private System.Nullable<int> maxUsesField;
        
        private System.Nullable<bool> autoDeleteField;
        
        private string commentField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of characters in each cell.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> cellSize {
            get {
                return this.cellSizeField;
            }
            set {
                this.cellSizeField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The characters that can appear in a cell.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] cellAlphabet {
            get {
                return this.cellAlphabetField;
            }
            set {
                this.cellAlphabetField = value;
            }
        }
        
    /// <datatype>
    ///   CellReplacement[]
    /// </datatype>
    /// <value>
    ///   A list of characters that are replaced in a challenge response before 
    ///   it is validated. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CellReplacement[] cellReplacements {
            get {
                return this.cellReplacementsField;
            }
            set {
                this.cellReplacementsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of cells in a temporary PIN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> challengeSize {
            get {
                return this.challengeSizeField;
            }
            set {
                this.challengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   long
    /// </datatype>
    /// <value>
    ///   The lifetime in hours of a temporary PIN.
    ///   This value must be at least 0 and at most 876000.
    ///   A value of 0 indicates that the pin has infinite lifetime.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> lifetime {
            get {
                return this.lifetimeField;
            }
            set {
                this.lifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of times a temporary PIN can be used for authentication. A 
    ///   value of 0 means the pin can be used an unlimited number of times. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxUses {
            get {
                return this.maxUsesField;
            }
            set {
                this.maxUsesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, a user's temporary PIN is automatically deleted when a card 
    ///   is used to authenticate a challenge. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> autoDelete {
            get {
                return this.autoDeleteField;
            }
            set {
                this.autoDeleteField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional descriptive comments.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Parameters used to modify a password policy.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PasswordRulesParms {
        
        private string passwordNameField;
        
        private System.Nullable<int> minLengthField;
        
        private System.Nullable<int> lifetimeField;
        
        private System.Nullable<int> minLifetimeField;
        
        private System.Nullable<int> historyField;
        
        private System.Nullable<bool> uniqueField;
        
        private System.Nullable<int> idleTimeoutField;
        
        private System.Nullable<int> confirmationIntervalField;
        
        private System.Nullable<PasswordCharacterType> uppercaseField;
        
        private System.Nullable<int> uppercaseRequiredField;
        
        private System.Nullable<PasswordCharacterType> lowercaseField;
        
        private System.Nullable<int> lowercaseRequiredField;
        
        private System.Nullable<PasswordCharacterType> numberField;
        
        private System.Nullable<int> numberRequiredField;
        
        private System.Nullable<PasswordCharacterType> specialField;
        
        private System.Nullable<int> specialRequiredField;
        
        private System.Nullable<AuthenticationType> firstAuthField;
        
        private System.Nullable<AuthenticationType> secondAuthField;
        
        private System.Nullable<bool> samlAuthAllowedField;
        
        private System.Nullable<bool> smartcredentialAuthAllowedField;
        
        private System.Nullable<bool> headerAuthAllowedField;
        
        private System.Nullable<PasswordStorage> storageField;
        
        private System.Nullable<int> maxRepeatedCharsField;
        
        private System.Nullable<int> maxPasswordChangeTimeField;
        
        private System.Nullable<int> maxPasswordFailuresField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of a password. This attribute is required when creating or 
    ///   modifying a named password and is ignored for the default password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string passwordName {
            get {
                return this.passwordNameField;
            }
            set {
                this.passwordNameField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The minimum length of a password.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> minLength {
            get {
                return this.minLengthField;
            }
            set {
                this.minLengthField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The lifetime of a password in days. This must be a value between 0 and 
    ///   36500. A value of 0 means the password has an infinite lifetime. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> lifetime {
            get {
                return this.lifetimeField;
            }
            set {
                this.lifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The minimum lifetime of a password in days. This must be a value 
    ///   between 0 and 36500. A value of 0 means the password has no minimum 
    ///   lifetime. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> minLifetime {
            get {
                return this.minLifetimeField;
            }
            set {
                this.minLifetimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of old passwords kept in history to prevent duplicates. 
    ///   This value must be at least 1. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> history {
            get {
                return this.historyField;
            }
            set {
                this.historyField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, a new password value for this password must be unique with 
    ///   respect to the current password values of all other passwords for the 
    ///   user in addition to not matching any passwords in its history. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> unique {
            get {
                return this.uniqueField;
            }
            set {
                this.uniqueField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The time in minutes before a logged in but idle administration service 
    ///   session requires relogin. 
    ///   A value of 0 means a logged in session will not be timed out by this 
    ///   value. 
    ///   This attribute only applies to the default password rules.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> idleTimeout {
            get {
                return this.idleTimeoutField;
            }
            set {
                this.idleTimeoutField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The interval in seconds that a logged in administration service 
    ///   session is validated to ensure that the administrator is still a valid 
    ///   administrator. A negative value indicates that the administrator is only 
    ///   validated at login time. A value of 0 that the administrator is 
    ///   validated during each request. 
    ///   This value will not be set for named password rules.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> confirmationInterval {
            get {
                return this.confirmationIntervalField;
            }
            set {
                this.confirmationIntervalField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordCharacterType
    /// </datatype>
    /// <value>
    ///   Specify whether an uppercase character is required, allowed or not 
    ///   allowed in the password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<PasswordCharacterType> uppercase {
            get {
                return this.uppercaseField;
            }
            set {
                this.uppercaseField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specify the number of uppercase characters that are required in the 
    ///   password if uppercase characters are required. Most be a positive 
    ///   integer value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> uppercaseRequired {
            get {
                return this.uppercaseRequiredField;
            }
            set {
                this.uppercaseRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordCharacterType
    /// </datatype>
    /// <value>
    ///   Specify whether a lowercase character is required, allowed or not 
    ///   allowed in the password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<PasswordCharacterType> lowercase {
            get {
                return this.lowercaseField;
            }
            set {
                this.lowercaseField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specify the number of lowercase characters that are required in the 
    ///   password if lowercase characters are required. Most be a positive 
    ///   integer value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> lowercaseRequired {
            get {
                return this.lowercaseRequiredField;
            }
            set {
                this.lowercaseRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordCharacterType
    /// </datatype>
    /// <value>
    ///   Specify whether a numeric character is required, allowed or not 
    ///   allowed in the password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<PasswordCharacterType> number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specify the number of numeric characters that are required in the 
    ///   password if numeric characters are required. Most be a positive integer 
    ///   value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> numberRequired {
            get {
                return this.numberRequiredField;
            }
            set {
                this.numberRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordCharacterType
    /// </datatype>
    /// <value>
    ///   Specify whether a non-alphanumeric character is required, allowed or 
    ///   not allowed in the password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<PasswordCharacterType> special {
            get {
                return this.specialField;
            }
            set {
                this.specialField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   Specify the number of special characters that are required in the 
    ///   password if special characters are required. Most be a positive integer 
    ///   value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> specialRequired {
            get {
                return this.specialRequiredField;
            }
            set {
                this.specialRequiredField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType
    /// </datatype>
    /// <value>
    ///   The type of first-factor authentication used by an administrator to 
    ///   login to the administration service. Allowed values are PASSWORD and 
    ///   EXTERNAL. 
    ///   This attribute only applies to the default password rules.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<AuthenticationType> firstAuth {
            get {
                return this.firstAuthField;
            }
            set {
                this.firstAuthField = value;
            }
        }
        
    /// <datatype>
    ///   AuthenticationType
    /// </datatype>
    /// <value>
    ///   If set to one of the values GRID, TOKENRO or TOKENCR then an 
    ///   administrator will require this type of second factor authentication to login 
    ///   to the administration service. If set to the value NONE, the 
    ///   administrator will not require second factor authentication to login. No 
    ///   other authentication types can be specified. This value does not apply to 
    ///   master user login attempts. 
    ///   This attribute only applies to the default password rules.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<AuthenticationType> secondAuth {
            get {
                return this.secondAuthField;
            }
            set {
                this.secondAuthField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, an administrator is allowed to use a SAML assertion to login 
    ///   to the administration service. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> samlAuthAllowed {
            get {
                return this.samlAuthAllowedField;
            }
            set {
                this.samlAuthAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, an administrator is allowed to use Smart Credentials to login 
    ///   to the administration service. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> smartcredentialAuthAllowed {
            get {
                return this.smartcredentialAuthAllowedField;
            }
            set {
                this.smartcredentialAuthAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, an administrator is allowed to use header based 
    ///   authentication to login to the administration service. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> headerAuthAllowed {
            get {
                return this.headerAuthAllowedField;
            }
            set {
                this.headerAuthAllowedField = value;
            }
        }
        
    /// <datatype>
    ///   PasswordStorage
    /// </datatype>
    /// <value>
    ///   Indicates how the password will be stored in the repository.
    ///   This value does not apply to how master user passwords are stored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<PasswordStorage> storage {
            get {
                return this.storageField;
            }
            set {
                this.storageField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of times a character can be repeated consecutively 
    ///   in a password. 
    ///   A value of 0 means there is no restriction.
    ///   The default for a new policy is 0.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxRepeatedChars {
            get {
                return this.maxRepeatedCharsField;
            }
            set {
                this.maxRepeatedCharsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum time in hours in which a password which has been set to 
    ///   require change must be changed. 
    ///   A value of 0 means there is no restriction.
    ///   The default for a new policy is 0.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxPasswordChangeTime {
            get {
                return this.maxPasswordChangeTimeField;
            }
            set {
                this.maxPasswordChangeTimeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of consecutive PASSWORD authentication failures allowed 
    ///   before a user is locked out. A value of 0 means the user is never locked 
    ///   out, no matter how many times they fail to authenticate. 
    ///   This policy is used with the ALL_AUTHENTICATOR and PER_AUTHENTICATOR 
    ///   lockout modes. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> maxPasswordFailures {
            get {
                return this.maxPasswordFailuresField;
            }
            set {
                this.maxPasswordFailuresField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Optional descriptive comments.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   policyGetEx. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PolicyGetExCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the policy to retrieve. If null, it indicates the default 
    ///   policy should be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to policyGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PolicyGetCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the policy to retrieve. If null, it indicates the default 
    ///   policy should be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   policyDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PolicyDeleteCallParms {
        
        private string nameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the policy to delete
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   policyCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PolicyCreateCallParms {
        
        private string nameField;
        
        private PolicyParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the policy to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   PolicyParms
    /// </datatype>
    /// <value>
    ///   Parameters that control the policy settings. Any policy settings not 
    ///   included in this structure will be assigned the relevant default 
    ///   value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PolicyParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure provides information about a Token Vendor.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenVendorInfo {
        
        private string vendorIdField;
        
        private string vendorNameField;
        
        private bool defaultVendorField;
        
        private bool binaryField;
        
        private int minResetResponsesField;
        
        private int maxResetResponsesField;
        
        private bool requiresKeyField;
        
        private bool onlineActivationSupportedField;
        
        private bool onlineActivationSupportsPasswordField;
        
        private bool onlineActivationRequiresPasswordField;
        
        private bool offlineActivationSupportedField;
        
        private bool offlineActivationSupportsPasswordField;
        
        private bool offlineActivationRequiresPasswordField;
        
        private bool createSupportedField;
        
        private bool loadSupportedField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The id of the token vendor.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the token vendor.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VendorName {
            get {
                return this.vendorNameField;
            }
            set {
                this.vendorNameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if this token vendor is the default. At most one token 
    ///   vendor will be the default. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool DefaultVendor {
            get {
                return this.defaultVendorField;
            }
            set {
                this.defaultVendorField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if the token data files loaded by this token vendor 
    ///   are binary or not. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Binary {
            get {
                return this.binaryField;
            }
            set {
                this.binaryField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The minimum number of responses required for the token reset operation 
    ///   on tokens with this vendor. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int minResetResponses {
            get {
                return this.minResetResponsesField;
            }
            set {
                this.minResetResponsesField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The maximum number of responses used for the token reset operation on 
    ///   tokens with this vendor. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxResetResponses {
            get {
                return this.maxResetResponsesField;
            }
            set {
                this.maxResetResponsesField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the token vendor requires a key when loading 
    ///   tokens. If a key is not required, then it is optional. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool requiresKey {
            get {
                return this.requiresKeyField;
            }
            set {
                this.requiresKeyField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if online activation is supported by this token 
    ///   vendor. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool onlineActivationSupported {
            get {
                return this.onlineActivationSupportedField;
            }
            set {
                this.onlineActivationSupportedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the online activation operation performed on 
    ///   tokens from this token vendor supports an activation password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool onlineActivationSupportsPassword {
            get {
                return this.onlineActivationSupportsPasswordField;
            }
            set {
                this.onlineActivationSupportsPasswordField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the online activation operation performed on 
    ///   tokens from this token vendor requires that the activation password be 
    ///   specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool onlineActivationRequiresPassword {
            get {
                return this.onlineActivationRequiresPasswordField;
            }
            set {
                this.onlineActivationRequiresPasswordField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if offline activation is supported by this token 
    ///   vendor. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool offlineActivationSupported {
            get {
                return this.offlineActivationSupportedField;
            }
            set {
                this.offlineActivationSupportedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the offline activation operation performed on 
    ///   tokens from this token vendor supports activation passwords. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool offlineActivationSupportsPassword {
            get {
                return this.offlineActivationSupportsPasswordField;
            }
            set {
                this.offlineActivationSupportsPasswordField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if the offline activation operation performed on 
    ///   tokens from this token vendor requires that the activation password be 
    ///   specified. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool offlineActivationRequiresPassword {
            get {
                return this.offlineActivationRequiresPasswordField;
            }
            set {
                this.offlineActivationRequiresPasswordField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this token vendor supports creation of tokens 
    ///   using the userTokenCreate operations. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool createSupported {
            get {
                return this.createSupportedField;
            }
            set {
                this.createSupportedField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this token vendor supports loading of tokens 
    ///   using the tokenLoad operation. 
    ///   If a vendor does not support loading tokens, the Binary, requiresKey 
    ///   and serialNumberGeneratedByServer fields in this structure are 
    ///   meaningless. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool loadSupported {
            get {
                return this.loadSupportedField;
            }
            set {
                this.loadSupportedField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   tokenVendorGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenVendorGetCallParms {
        
        private string vendorIdField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name or id of the token vendor being retrieved.
    ///   If null is specified for the vendor Id, the default token vendor will 
    ///   be returned. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to regionList. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RegionListCallParms {
        
        private string countryCodeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The code of the country of the regions being retrieved.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string countryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure provides information about a region.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RegionInfo {
        
        private string countryCodeField;
        
        private string regionCodeField;
        
        private string regionNameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The code of the country.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string countryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The code of the region.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string regionCode {
            get {
                return this.regionCodeField;
            }
            set {
                this.regionCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the region.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string regionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to regionGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class RegionGetCallParms {
        
        private string countryCodeField;
        
        private string regionCodeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The code of the country of the region being retrieved.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string countryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The code of the region being retrieved.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string regionCode {
            get {
                return this.regionCodeField;
            }
            set {
                this.regionCodeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to countryGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class CountryGetCallParms {
        
        private string countryCodeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The code of the country being retrieved.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string countryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the location of an IP address.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public partial class IPLocation {
        
        private bool privateAddressField;
        
        private string iPAddressField;
        
        private string countryField;
        
        private string countryNameField;
        
        private string regionField;
        
        private string regionNameField;
        
        private string cityField;
        
        private string iSPField;
        
        private System.Nullable<float> latitudeField;
        
        private System.Nullable<float> longitudeField;
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, this IP address is a private IP address as defined by RFC 
    ///   1918. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool privateAddress {
            get {
                return this.privateAddressField;
            }
            set {
                this.privateAddressField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The IP address of the location.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The country code of the location.
    ///   Private IP addresses do not have a country.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the country of the location.
    ///   Private IP addresses do not have a country.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string countryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The region code of the location.
    ///   Private IP addresses do not have a region.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the region of the location.
    ///   Private IP addresses do not have a region.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string regionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The city of the location.
    ///   Private IP addresses do not have a city.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The ISP of the location.
    ///   Private IP addresses do not have an ISP.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ISP {
            get {
                return this.iSPField;
            }
            set {
                this.iSPField = value;
            }
        }
        
    /// <datatype>
    ///   float
    /// </datatype>
    /// <value>
    ///   The latitude of the location.
    ///   Private IP addresses do not have a latitude.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<float> latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
    /// <datatype>
    ///   float
    /// </datatype>
    /// <value>
    ///   The longitude of the location.
    ///   Private IP addresses do not have a longitude.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<float> longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   ipLocationGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class IPLocationGetCallParms {
        
        private string iPAddressField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The IP address whose location is being retrieved.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines an element wrapping a list of PartitionInfo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PartitionInfoList {
        
        private PartitionInfo[] partitionInfoField;
        
    /// <datatype>
    ///   PartitionInfo[]
    /// </datatype>
    /// <value>
    ///   Set of information about partitions.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public PartitionInfo[] partitionInfo {
            get {
                return this.partitionInfoField;
            }
            set {
                this.partitionInfoField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about a partition. Partitions are used to reserve 
    ///   ranges of user numbers and card serial numbers, allowing for more 
    ///   predictable serial number issuance between different groups. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PartitionInfo {
        
        private string nameField;
        
        private string numUsersField;
        
        private string nextUserNumberField;
        
        private Range[] userNumberRangesField;
        
        private string nextCardSerialNumberField;
        
        private Range[] cardSerialNumberRangesField;
        
        private string numTokensField;
        
        private string numSmartCredentialsField;
        
        private string[] rolesGrantingAccessField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the partition.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   Current number of users in the system issued using this partition. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string numUsers {
            get {
                return this.numUsersField;
            }
            set {
                this.numUsersField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The user number to assign to the next user created by a group using 
    ///   this partition. 
    ///   Will be null if no more users can be created in this partition. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string nextUserNumber {
            get {
                return this.nextUserNumberField;
            }
            set {
                this.nextUserNumberField = value;
            }
        }
        
    /// <datatype>
    ///   Range[]
    /// </datatype>
    /// <value>
    ///   List of ranges of user numbers which can be issued by this policy. 
    ///   Will be null if no user number ranges are assigned. These will be sorted 
    ///   so that the minimum number in each range is in ascending order. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public Range[] userNumberRanges {
            get {
                return this.userNumberRangesField;
            }
            set {
                this.userNumberRangesField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The serial number to assign to the next card created by a group using 
    ///   this partition. Will be null if no more cards can be created in this 
    ///   partition. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string nextCardSerialNumber {
            get {
                return this.nextCardSerialNumberField;
            }
            set {
                this.nextCardSerialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   Range[]
    /// </datatype>
    /// <value>
    ///   List of ranges of card serial numbers which can be issued by this 
    ///   policy. Will be null if no card serial number ranges are assigned. These 
    ///   will be sorted so that the minimum number in each range is in 
    ///   ascending order. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public Range[] cardSerialNumberRanges {
            get {
                return this.cardSerialNumberRangesField;
            }
            set {
                this.cardSerialNumberRangesField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   Current number of licensed soft tokens in the system that are assigned 
    ///   to users who belong to this partition. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string numTokens {
            get {
                return this.numTokensField;
            }
            set {
                this.numTokensField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   Current number of licensed smart credentials in the system that are 
    ///   assigned to users who belong to this partition. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string numSmartCredentials {
            get {
                return this.numSmartCredentialsField;
            }
            set {
                this.numSmartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Descriptive comments about this partition, that could be used to 
    ///   provide a full description of this partition's intended purpose. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a range of integers from a minimum to a maximum.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class Range {
        
        private string minimumField;
        
        private string maximumField;
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The smallest number included in the range. At least zero.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string minimum {
            get {
                return this.minimumField;
            }
            set {
                this.minimumField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The largest number included in the range. At least as large as the 
    ///   minimum value. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string maximum {
            get {
                return this.maximumField;
            }
            set {
                this.maximumField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   partitionSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PartitionSetCallParms {
        
        private string partitionNameField;
        
        private PartitionParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the partition to update.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partitionName {
            get {
                return this.partitionNameField;
            }
            set {
                this.partitionNameField = value;
            }
        }
        
    /// <datatype>
    ///   PartitionParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the modification of the partition.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PartitionParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Parameters that can be applied when creating or modifying a partition. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PartitionParms {
        
        private string nameField;
        
        private System.Nullable<bool> removeUserNumbersField;
        
        private Range userNumberRangeField;
        
        private System.Nullable<bool> removeCardSerialNumbersField;
        
        private Range cardSerialNumberRangeField;
        
        private string commentField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   When modifying a partition, this element is the new name of the 
    ///   partition. When creating a partition, this value is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   When modifying a partition, set this to true to remove a range of user 
    ///   numbers instead of adding a range of user numbers. When creating a 
    ///   partition, or if no user number range is specified, this value is 
    ///   ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeUserNumbers {
            get {
                return this.removeUserNumbersField;
            }
            set {
                this.removeUserNumbersField = value;
            }
        }
        
    /// <datatype>
    ///   Range
    /// </datatype>
    /// <value>
    ///   When creating or modifying a partition, this is the range of user 
    ///   numbers to add to the partition. To remove a range of user numbers, 
    ///   supply this range and set removeUserNumbers to true. When adding a range 
    ///   of user numbers, the minimum value in the range must be at least as 
    ///   large as the next user number to be assigned to a user not created in 
    ///   any partition; this value is available in the SystemInfo structure 
    ///   returned by systemInfoGet. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public Range userNumberRange {
            get {
                return this.userNumberRangeField;
            }
            set {
                this.userNumberRangeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   When modifying a partition, set this to true to remove a range of card 
    ///   serial numbers instead of adding a range of card serial numbers. 
    ///   When creating a partition, or if no card serial number range is 
    ///   specified, this value is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> removeCardSerialNumbers {
            get {
                return this.removeCardSerialNumbersField;
            }
            set {
                this.removeCardSerialNumbersField = value;
            }
        }
        
    /// <datatype>
    ///   Range
    /// </datatype>
    /// <value>
    ///   When creating or modifying a partition, this is the range of card 
    ///   serial numbers to add to the partition. To remove a range of card serial 
    ///   numbers, supply this range and set removeCardSerialNumbers to true. 
    ///   When adding a range of card serial numbers, the minimum value in the 
    ///   range must be at least as large as the next serial number to be 
    ///   assigned to a card not created in any partition; this value is available in 
    ///   the SystemInfo structure returned by systemInfoGet. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public Range cardSerialNumberRange {
            get {
                return this.cardSerialNumberRangeField;
            }
            set {
                this.cardSerialNumberRangeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   Descriptive comments about this partition that could be used to 
    ///   provide a full description of this partition's intended purpose. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   partitionGet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PartitionGetCallParms {
        
        private string partitionNameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the partition to retrieve.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partitionName {
            get {
                return this.partitionNameField;
            }
            set {
                this.partitionNameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   partitionDelete. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PartitionDeleteCallParms {
        
        private string partitionNameField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the partition to delete.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partitionName {
            get {
                return this.partitionNameField;
            }
            set {
                this.partitionNameField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   partitionCreate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class PartitionCreateCallParms {
        
        private string partitionNameField;
        
        private PartitionParms parmsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The name of the partition to create.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partitionName {
            get {
                return this.partitionNameField;
            }
            set {
                this.partitionNameField = value;
            }
        }
        
    /// <datatype>
    ///   PartitionParms
    /// </datatype>
    /// <value>
    ///   Parameters controlling the creation of the partition.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PartitionParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines information about various system settings.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SystemInfo {
        
        private string versionField;
        
        private string patchLevelField;
        
        private string numUsersField;
        
        private string nextUserNumberField;
        
        private string nextCardSerialNumberField;
        
        private string numLicensedTokensField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A string containing the version number of the server.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   A string containing the patch number of the server. This will be an 
    ///   empty string if the server is a commercial release with no patches 
    ///   applied. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string patchLevel {
            get {
                return this.patchLevelField;
            }
            set {
                this.patchLevelField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The current number of users in the system.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string numUsers {
            get {
                return this.numUsersField;
            }
            set {
                this.numUsersField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The smallest user number that may be assigned to the next user created 
    ///   who is not assigned to a partition. 
    ///   Note that the next user created may not be assigned exactly this user 
    ///   number as it may have been reserved by a partition. Any user number 
    ///   range added to a partition must start from at least this value as its 
    ///   minimum. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string nextUserNumber {
            get {
                return this.nextUserNumberField;
            }
            set {
                this.nextUserNumberField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The smallest serial number that may be assigned to the next card 
    ///   created that is not assigned to a partition. 
    ///   Note that the next card created may not be assigned exactly this 
    ///   serial number as it may have been reserved by a partition. Any card serial 
    ///   number range added to a partition must start from at least this 
    ///   value as its minimum. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string nextCardSerialNumber {
            get {
                return this.nextCardSerialNumberField;
            }
            set {
                this.nextCardSerialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The current number of licensed tokens in the system.
    ///   Tokens added to the system with userTokenCreate take up a license and 
    ///   are counted here, while tokens added using tokenLoad are not. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string numLicensedTokens {
            get {
                return this.numLicensedTokensField;
            }
            set {
                this.numLicensedTokensField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialLicenseCheck. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLicenseCheckCallParms {
        
        private SmartCredentialLicenseParms parmsField;
        
    /// <datatype>
    ///   SmartCredentialLicenseParms
    /// </datatype>
    /// <value>
    ///   Parameters that may include an installation and activation key, or an 
    ///   option to perform a full count of licensed smart credentials in the 
    ///   system. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialLicenseParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Parameters used to update the system's smart credential license 
    ///   settings. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLicenseParms {
        
        private string installKeyField;
        
        private string activationKeyField;
        
        private bool countSmartCredentialsField;
        
        private System.Nullable<int> countLimitPercentField;
        
        private System.Nullable<int> countLimitField;
        
        private System.Nullable<int> timeLimitField;
        
        private System.Nullable<bool> updatePartitionsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The installation key, supplied by Entrust. This may be null during a 
    ///   call to licenseCheck, where the countSmartCredentials flag is set to 
    ///   true. In this case, the tokenLicenseCheck call only performs the count 
    ///   of licensed smart credentials in the system. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string installKey {
            get {
                return this.installKeyField;
            }
            set {
                this.installKeyField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The activation key, supplied by Entrust. This may be null during a 
    ///   call to licenseCheck, where the countSmartCredentials flag is set to 
    ///   true. In this case, the smartCredentialLicenseCheck call only performs 
    ///   the count of licensed smart credentials in the system. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string activationKey {
            get {
                return this.activationKeyField;
            }
            set {
                this.activationKeyField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag that controls whether or not a full licensed token count is 
    ///   performed before updating the license. 
    ///   This is used to make sure the system has an accurate smart credential 
    ///   count, but can be slow as it requires scanning every user entry in 
    ///   the repository. If this value is set to true, make sure your SOAP 
    ///   client allows for long message timeouts. This counting process will result 
    ///   in audits being logged if the current license is nearing expiry or 
    ///   the maximum smart credential limit. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool countSmartCredentials {
            get {
                return this.countSmartCredentialsField;
            }
            set {
                this.countSmartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If countSmartCredentials is true and this value is not null, then a 
    ///   warning audit is written if the number of licensed smart credentials in 
    ///   the system is within this percentage of the number of tokens allowed 
    ///   by the license. For example, if the license allows for 1000 smart 
    ///   credentials, there are 900 smart credentials in the system, and this 
    ///   value is set to 10, a warning audit is written as the number of smart 
    ///   credentials is within 10 percent of the maximum allowed. If both 
    ///   countLimit and countLimitPercent are specified, countLimitPercent is used 
    ///   and countLimit is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> countLimitPercent {
            get {
                return this.countLimitPercentField;
            }
            set {
                this.countLimitPercentField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If countSmartCredentials is true and this value is not null, then a 
    ///   warning audit is written if the number of smart credentials in the 
    ///   system is within countLimit of the number of smart credentials allowed by 
    ///   the license. For example, if the license allows for 1000 smart 
    ///   credentials, there are 950 licensed smart credentials in the system, and 
    ///   this value is set to 100, a warning audit is written as the number of 
    ///   smart credentials is within 100 smart credentials of the maximum 
    ///   allowed. If both countLimit and countLimitPercent are specified, 
    ///   countLimitPercent is used and countLimit is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> countLimit {
            get {
                return this.countLimitField;
            }
            set {
                this.countLimitField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If countSmartCredentials is true and this value is not null, then a 
    ///   warning audit is written if the number of days until the current 
    ///   license expires is less than or equal to timeLimit. For example, if the 
    ///   license expires in 100 days, and this value is set to 150, a warning 
    ///   audit is written. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> timeLimit {
            get {
                return this.timeLimitField;
            }
            set {
                this.timeLimitField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag that controls whether or not smart credential counts in 
    ///   partitions are updated when performing a count of licensed smart credentials 
    ///   in the system because the countTokens flag was true. If 
    ///   countSmartCredentials is true and this flag is null or false, licensed smart 
    ///   credentials in partitions are counted, but any mismatches between the 
    ///   number of smart credentials in the partition and the number counted are 
    ///   logged, but the partitions are not updated. 
    ///   If this flag is true, the partitions are updated in the case of a 
    ///   mismatch. Care must be taken when setting this flag to true to make sure 
    ///   the data in the repository is up to date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> updatePartitions {
            get {
                return this.updatePartitionsField;
            }
            set {
                this.updatePartitionsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   smartCredentialLicenseSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLicenseSetCallParms {
        
        private SmartCredentialLicenseParms parmsField;
        
    /// <datatype>
    ///   SmartCredentialLicenseParms
    /// </datatype>
    /// <value>
    ///   Parameters that include an installation and activation key.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SmartCredentialLicenseParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Information about the system's smart credential license settings. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class SmartCredentialLicenseInfo {
        
        private string numSmartCredentialsField;
        
        private string maxSmartCredentialsField;
        
        private System.Nullable<System.DateTime> expiryDateField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The current number of licensed smart credentials in the system. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string numSmartCredentials {
            get {
                return this.numSmartCredentialsField;
            }
            set {
                this.numSmartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The maximum number of licensed smart credentials that can exist in the 
    ///   system. The system will not allow more than this many smart 
    ///   credentials to be created. 
    ///   If this value is nil, there is no limit to the number of smart 
    ///   credentials in the system, or the licenseCheck operation was called to count 
    ///   licensed smart credentials and did not provide installation and 
    ///   activation keys. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string maxSmartCredentials {
            get {
                return this.maxSmartCredentialsField;
            }
            set {
                this.maxSmartCredentialsField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date at which the smart credential license expires. The system 
    ///   will stop allowing smart credentials to be created after this date. 
    ///   If this value is nil, the current license never expires, or the 
    ///   licenseCheck operation was called to count licensed smart credentials and 
    ///   did not provide installation and activation keys. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   tokenLicenseCheck. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenLicenseCheckCallParms {
        
        private TokenLicenseParms parmsField;
        
    /// <datatype>
    ///   TokenLicenseParms
    /// </datatype>
    /// <value>
    ///   Parameters that may include an installation and activation key, or an 
    ///   option to perform a full count of licensed tokens in the system. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TokenLicenseParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Parameters used to update the system's soft token license settings. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenLicenseParms {
        
        private string installKeyField;
        
        private string activationKeyField;
        
        private bool countTokensField;
        
        private System.Nullable<int> countLimitPercentField;
        
        private System.Nullable<int> countLimitField;
        
        private System.Nullable<int> timeLimitField;
        
        private System.Nullable<bool> updatePartitionsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The installation key, supplied by Entrust. This may be null during a 
    ///   call to licenseCheck, where the countTokens flag is set to true. In 
    ///   this case, the tokenLicenseCheck call only performs the count of 
    ///   licensed tokens in the system. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string installKey {
            get {
                return this.installKeyField;
            }
            set {
                this.installKeyField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The activation key, supplied by Entrust. This may be null during a 
    ///   call to licenseCheck, where the countTokens flag is set to true. In this 
    ///   case, the tokenLicenseCheck call only performs the count of licensed 
    ///   tokens in the system. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string activationKey {
            get {
                return this.activationKeyField;
            }
            set {
                this.activationKeyField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag that controls whether or not a full licensed token count is 
    ///   performed before updating the license. 
    ///   This is used to make sure the system has an accurate token count, but 
    ///   can be slow as it requires scanning every user entry in the 
    ///   repository. If this value is set to true, make sure your SOAP client allows 
    ///   for long message timeouts. This counting process will result in audits 
    ///   being logged if the current license is nearing expiry or the maximum 
    ///   token limit. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool countTokens {
            get {
                return this.countTokensField;
            }
            set {
                this.countTokensField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If countTokens is true and this value is not null, then a warning 
    ///   audit is written if the number of licensed tokens in the system is within 
    ///   this percentage of the number of tokens allowed by the license. For 
    ///   example, if the license allows for 1000 tokens, there are 900 tokens 
    ///   in the system, and this value is set to 10, a warning audit is 
    ///   written as the number of tokens is within 10 percent of the maximum 
    ///   allowed. If both countLimit and countLimitPercent are specified, 
    ///   countLimitPercent is used and countLimit is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> countLimitPercent {
            get {
                return this.countLimitPercentField;
            }
            set {
                this.countLimitPercentField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If countTokens is true and this value is not null, then a warning 
    ///   audit is written if the number of licensed in the system is within 
    ///   countLimit of the number of tokens allowed by the license. For example, if 
    ///   the license allows for 1000 tokens, there are 950 licensed tokens in 
    ///   the system, and this value is set to 100, a warning audit is written 
    ///   as the number of tokens is within 100 tokens of the maximum allowed. 
    ///   If both countLimit and countLimitPercent are specified, 
    ///   countLimitPercent is used and countLimit is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> countLimit {
            get {
                return this.countLimitField;
            }
            set {
                this.countLimitField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If countTokens is true and this value is not null, then a warning 
    ///   audit is written if the number of days until the current license expires 
    ///   is less than or equal to timeLimit. For example, if the license 
    ///   expires in 100 days, and this value is set to 150, a warning audit is 
    ///   written. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> timeLimit {
            get {
                return this.timeLimitField;
            }
            set {
                this.timeLimitField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag that controls whether or not token counts in partitions are 
    ///   updated when performing a count of licensed tokens in the system because 
    ///   the countTokens flag was true. If countTokens is true and this flag is 
    ///   null or false, licensed tokens in partitions are counted, but any 
    ///   mismatches between the number of tokens in the partition and the number 
    ///   counted are logged, but the partitions are not updated. 
    ///   If this flag is true, the partitions are updated in the case of a 
    ///   mismatch. Care must be taken when setting this flag to true to make sure 
    ///   the data in the repository is up to date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> updatePartitions {
            get {
                return this.updatePartitionsField;
            }
            set {
                this.updatePartitionsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   tokenLicenseSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenLicenseSetCallParms {
        
        private TokenLicenseParms parmsField;
        
    /// <datatype>
    ///   TokenLicenseParms
    /// </datatype>
    /// <value>
    ///   Parameters that include an installation and activation key.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TokenLicenseParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Information about the system's token license settings.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class TokenLicenseInfo {
        
        private string numTokensField;
        
        private string maxTokensField;
        
        private System.Nullable<System.DateTime> expiryDateField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The current number of licensed tokens in the system.
    ///   Tokens added to the system using the userTokenCreate operation are 
    ///   considered licensed, in that they count against the maximum allowed by 
    ///   the token license. Tokens added to the system using tokenLoad do not 
    ///   count against the license. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string numTokens {
            get {
                return this.numTokensField;
            }
            set {
                this.numTokensField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The maximum number of licensed tokens that can exist in the system. 
    ///   The system will not allow more than this many soft tokens to be 
    ///   created. 
    ///   If this value is nil, there is no limit to the number of tokens in the 
    ///   system, or the licenseCheck operation was called to count licensed 
    ///   tokens and did not provide installation and activation keys. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string maxTokens {
            get {
                return this.maxTokensField;
            }
            set {
                this.maxTokensField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date at which the token license expires. The system will stop 
    ///   allowing operations on licensed tokens, including authentication, after 
    ///   this date. 
    ///   If this value is nil, the current license never expires, or the 
    ///   licenseCheck operation was called to count licensed tokens and did not 
    ///   provide installation and activation keys. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   licenseCheckEx. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class LicenseCheckExCallParms {
        
        private LicenseParms parmsField;
        
    /// <datatype>
    ///   LicenseParms
    /// </datatype>
    /// <value>
    ///   Parameters that include an installation and activation key.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LicenseParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Parameters used to update the system license settings.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class LicenseParms {
        
        private string installKeyField;
        
        private string activationKeyField;
        
        private bool countUsersField;
        
        private System.Nullable<int> countLimitPercentField;
        
        private System.Nullable<int> countLimitField;
        
        private System.Nullable<int> timeLimitField;
        
        private System.Nullable<bool> updatePartitionsField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The installation key, supplied by Entrust. This may be null during a 
    ///   call to licenseCheck, where the countUsers flag is set to true. In 
    ///   this case, the licenseCheck call only performs the count of users in the 
    ///   system. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string installKey {
            get {
                return this.installKeyField;
            }
            set {
                this.installKeyField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The activation key, supplied by Entrust. This may be null during a 
    ///   call to licenseCheck, where the countUsers flag is set to true. In this 
    ///   case, the licenseCheck call only performs the count of users in the 
    ///   system. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string activationKey {
            get {
                return this.activationKeyField;
            }
            set {
                this.activationKeyField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag that controls whether or not a full user count is performed 
    ///   before updating the license. 
    ///   This is used to make sure the system has an accurate user count, but 
    ///   can be slow as it requires scanning every user entry in the 
    ///   repository. If this value is set to true, make sure your SOAP client allows for 
    ///   long message timeouts. This counting process will result in audits 
    ///   being logged if the current license is nearing expiry or the maximum 
    ///   user limit. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool countUsers {
            get {
                return this.countUsersField;
            }
            set {
                this.countUsersField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If countUsers is true and this value is not null, then a warning audit 
    ///   is written if the number of users in the system is within this 
    ///   percentage of the number of users allowed by the license. For example, if 
    ///   the license allows for 1000 users, there are 900 users in the system, 
    ///   and this value is set to 10, a warning audit is written as the 
    ///   number of users is within 10 percent of the maximum allowed. If both 
    ///   countLimit and countLimitPercent are specified, countLimitPercent is used 
    ///   and countLimit is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> countLimitPercent {
            get {
                return this.countLimitPercentField;
            }
            set {
                this.countLimitPercentField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If countUsers is true and this value is not null, then a warning audit 
    ///   is written if the number of users in the system is within countLimit 
    ///   of the number of users allowed by the license. For example, if the 
    ///   license allows for 1000 users, there are 950 users in the system, and 
    ///   this value is set to 100, a warning audit is written as the number of 
    ///   users is within 100 users of the maximum allowed. If both countLimit 
    ///   and countLimitPercent are specified, countLimitPercent is used and 
    ///   countLimit is ignored. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> countLimit {
            get {
                return this.countLimitField;
            }
            set {
                this.countLimitField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   If countUsers is true and this value is not null, then a warning audit 
    ///   is written if the number of days until the current license expires 
    ///   is less than or equal to timeLimit. For example, if the license 
    ///   expires in 100 days, and this value is set to 150, a warning audit is 
    ///   written. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> timeLimit {
            get {
                return this.timeLimitField;
            }
            set {
                this.timeLimitField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag that controls whether or not user counts in partitions are 
    ///   updated when performing a count of users in the system because the 
    ///   countUsers flag was true. If countUsers is true and this flag is null or 
    ///   false, users in partitions are counted, but any mismatches between the 
    ///   number of users in the partition and the number counted are logged, but 
    ///   the partitions are not updated. 
    ///   If this flag is true, the partitions are updated in the case of a 
    ///   mismatch. Care must be taken when setting this flag to true to make sure 
    ///   the data in the repository is up to date. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> updatePartitions {
            get {
                return this.updatePartitionsField;
            }
            set {
                this.updatePartitionsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   licenseSetEx. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class LicenseSetExCallParms {
        
        private LicenseParms parmsField;
        
    /// <datatype>
    ///   LicenseParms
    /// </datatype>
    /// <value>
    ///   Parameters that include an installation and activation key.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LicenseParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   licenseCheck. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class LicenseCheckCallParms {
        
        private LicenseParms parmsField;
        
    /// <datatype>
    ///   LicenseParms
    /// </datatype>
    /// <value>
    ///   Parameters that may include an installation and activation key, or an 
    ///   option to perform a full count of users in the system. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LicenseParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to licenseSet. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class LicenseSetCallParms {
        
        private LicenseParms parmsField;
        
    /// <datatype>
    ///   LicenseParms
    /// </datatype>
    /// <value>
    ///   Parameters that include an installation and activation key.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LicenseParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
    }
    
    /// <summary>
    ///   Information about the system license settings.
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LicenseInfoEx))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class LicenseInfo {
        
        private string numUsersField;
        
        private string maxUsersField;
        
        private System.Nullable<System.DateTime> expiryDateField;
        
        private string[] rolesGrantingAccessField;
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The current number of users in the system.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string numUsers {
            get {
                return this.numUsersField;
            }
            set {
                this.numUsersField = value;
            }
        }
        
    /// <datatype>
    ///   integer
    /// </datatype>
    /// <value>
    ///   The maximum number of users that can exist in the system. The system 
    ///   will not allow more than this many users to be created. 
    ///   If this value is nil, there is no limit to the number of users in the 
    ///   system, or the licenseCheck operation was called to count users and 
    ///   did not provide installation and activation keys. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", IsNullable=true)]
        public string maxUsers {
            get {
                return this.maxUsersField;
            }
            set {
                this.maxUsersField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date at which the license expires. The system will cease 
    ///   functioning after this date. 
    ///   If this value is nil, the current license never expires, or the 
    ///   licenseCheck operation was called to count users and did not provide 
    ///   installation and activation keys. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   When this structure is returned by an admin service operation, this is 
    ///   the list of the names of the roles that granted access to this 
    ///   structure. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] rolesGrantingAccess {
            get {
                return this.rolesGrantingAccessField;
            }
            set {
                this.rolesGrantingAccessField = value;
            }
        }
    }
    
    /// <summary>
    ///   Information about a license.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class LicenseInfoEx : LicenseInfo {
        
        private LicenseType typeField;
        
    /// <datatype>
    ///   LicenseType
    /// </datatype>
    /// <value>
    ///   The type of license.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LicenseType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the license types supported by Entrust IdentityGuard. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum LicenseType {
        
    /// <value>
    ///   The user license controls the number of users that can be created in 
    ///   this Entrust IdentityGuard system. 
    /// </value>
        USER,
        
    /// <value>
    ///   The soft token license controls the number of soft tokens that can be 
    ///   created in this Entrust IdentityGuard system. 
    /// </value>
        SOFTTOKEN,
        
    /// <value>
    ///   The transaction verification with soft token license controls the 
    ///   number of soft tokens that can be used to perform transaction 
    ///   verification operations in this Entrust IdentityGuard system. 
    /// </value>
        SOFTTOKEN_TRANSACTION_VERIFICATION,
        
    /// <value>
    ///   The smart credential license controls the number of smart credentials 
    ///   that can be created in this Entrust IdentityGuard system. 
    /// </value>
        SMARTCREDENTIAL,
        
    /// <value>
    ///   The mobile smart credential license controls the number of smart 
    ///   credentials that can be encoded as Entrust IdentityGuard Mobile Smart 
    ///   Credentials. 
    /// </value>
        MOBILE_SMARTCREDENTIAL,
        
    /// <value>
    ///   The identity assured with smart credential license controls the number 
    ///   of smart credentials that can be used to perform identity assured 
    ///   operations. 
    /// </value>
        SMARTCREDENTIAL_IDENTITY_ASSURED,
        
    /// <value>
    ///   The biometric license controls the number of biometrics that users in 
    ///   this system can have. 
    /// </value>
        BIOMETRIC,
    }
    
    /// <summary>
    ///   Information about the IdentityGuard Version
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class VersionInfo {
        
        private int majorField;
        
        private int minorField;
        
        private int incrementField;
        
        private string buildField;
        
        private string patchField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The major version number
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int major {
            get {
                return this.majorField;
            }
            set {
                this.majorField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The minor version number.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int minor {
            get {
                return this.minorField;
            }
            set {
                this.minorField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The increment version number.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int increment {
            get {
                return this.incrementField;
            }
            set {
                this.incrementField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The build number
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string build {
            get {
                return this.buildField;
            }
            set {
                this.buildField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The patch name.  Will be null if the build isn't a patch
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string patch {
            get {
                return this.patchField;
            }
            set {
                this.patchField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains the parameters passed in a call to 
    ///   changePassword. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class ChangePasswordCallParms {
        
        private LoginParms parmsField;
        
        private string newpasswordField;
        
    /// <datatype>
    ///   LoginParms
    /// </datatype>
    /// <value>
    ///   Parameters that includes the administrator ID and old password of the 
    ///   administrator that is changing their password. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoginParms parms {
            get {
                return this.parmsField;
            }
            set {
                this.parmsField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The new password of the administrator. This must conform to the 
    ///   password rules. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newpassword {
            get {
                return this.newpasswordField;
            }
            set {
                this.newpasswordField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains details about the card that was used to 
    ///   authenticate a user. It is returned as part of the response after a user 
    ///   successfully authenticates. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public partial class CardData {
        
        private string serialNumberField;
        
        private System.DateTime expiryDateField;
        
        private System.DateTime supersededDateField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the card used for authentication.
    ///   This will be empty if a temporary pin was used for authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The expiry date of the card used for authentication.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The supersede date of the card used for authentication.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime SupersededDate {
            get {
                return this.supersededDateField;
            }
            set {
                this.supersededDateField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains information about a token that can be used to 
    ///   authenticate. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public partial class TokenData {
        
        private string vendorIdField;
        
        private string serialNumberField;
        
        private string tokenSetField;
        
        private bool supportsDataSignatureField;
        
        private bool supportsDeliveryAndSignatureField;
        
        private DeliveryStatus deliveryStatusField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This value will contain the name of the token vendor if defined. 
    ///   Otherwise, this value will contain the vendor id of the token. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The serial number of the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The set of the token.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TokenSet {
            get {
                return this.tokenSetField;
            }
            set {
                this.tokenSetField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this token supports the data signature operation. 
    ///   Note that a value of true does not indicate if the user's policy 
    ///   allows the data signature operation to be performed. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool SupportsDataSignature {
            get {
                return this.supportsDataSignatureField;
            }
            set {
                this.supportsDataSignatureField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   A flag indicating if this token supports the delivery and signature 
    ///   operation where Entrust IdentityGuard delivers transaction details to 
    ///   the user's token where they are used to calculate the token response. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool SupportsDeliveryAndSignature {
            get {
                return this.supportsDeliveryAndSignatureField;
            }
            set {
                this.supportsDeliveryAndSignatureField = value;
            }
        }
        
    /// <datatype>
    ///   DeliveryStatus
    /// </datatype>
    /// <value>
    ///   A value indicating if transaction details were delivered as part of 
    ///   generating the challenge. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DeliveryStatus DeliveryStatus {
            get {
                return this.deliveryStatusField;
            }
            set {
                this.deliveryStatusField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure contains information about a token challenge.
    ///   For a TOKENRO challenge, this includes a list of tokens that can be 
    ///   used to authenticate the challenge. For a TOKENCR challenge, this also 
    ///   includes the token challenge value that must be entered into the 
    ///   token to generate the token response. 
    ///   The token challenge also includes information about the temporary PIN 
    ///   that can be used to respond to a token challenge. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public partial class TokenChallenge {
        
        private string challengeField;
        
        private TokenData[] tokensField;
        
        private System.Nullable<bool> hasTemporaryPINField;
        
        private string temporaryPINCellAlphabetField;
        
        private System.Nullable<int> temporaryPINCellSizeField;
        
        private System.Nullable<int> temporaryPINChallengeSizeField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The token challenge. This value will only be set for TOKENCR 
    ///   authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string challenge {
            get {
                return this.challengeField;
            }
            set {
                this.challengeField = value;
            }
        }
        
    /// <datatype>
    ///   TokenData[]
    /// </datatype>
    /// <value>
    ///   The tokens that can be used to authenticate the challenge.
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public TokenData[] tokens {
            get {
                return this.tokensField;
            }
            set {
                this.tokensField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   Flag indicating if user has a temporary PIN.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool> hasTemporaryPIN {
            get {
                return this.hasTemporaryPINField;
            }
            set {
                this.hasTemporaryPINField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The characters allowed in a temporary PIN challenge response. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string temporaryPINCellAlphabet {
            get {
                return this.temporaryPINCellAlphabetField;
            }
            set {
                this.temporaryPINCellAlphabetField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of characters in a temporary PIN cell.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> temporaryPINCellSize {
            get {
                return this.temporaryPINCellSizeField;
            }
            set {
                this.temporaryPINCellSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of cells in a temporary PIN challenge response.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> temporaryPINChallengeSize {
            get {
                return this.temporaryPINChallengeSizeField;
            }
            set {
                this.temporaryPINChallengeSizeField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines a challenge component used for grid authentication.
    ///   A Challenge is a single row/column pair corresponding to a cell in an 
    ///   Entrust IdentityGuard card grid. Note that the indexing method used 
    ///   for cards is zero-based, so the row can be in the range 0 to (number 
    ///   of rows - 1), and the column can be in the range 0 to (number of 
    ///   columns - 1). 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public partial class Challenge {
        
        private int rowField;
        
        private int columnField;
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The row.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Row {
            get {
                return this.rowField;
            }
            set {
                this.rowField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The column.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
            }
        }
    }
    
    /// <summary>
    ///   This structure defines the components returned as part of a grid 
    ///   challenge. It contains an array of Challenges which define the challenge 
    ///   the user must respond to, as well as additional data that describes 
    ///   the format of a valid challenge response. Note that the settings for 
    ///   what is a valid response are based on the most up-to-date policy 
    ///   settings, while the user's card may have been generated with older settings 
    ///   that mean the card is no longer valid according to the new ones. For 
    ///   example, if the user's card was generated with one character per 
    ///   cell, then the policy was changed to two characters per cell, the value 
    ///   in this structure for number of characters per cell would be two, 
    ///   even though the user's card only has one character per cell. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:commonV9")]
    public partial class ChallengeSet {
        
        private string cardCellAlphabetField;
        
        private int cardCellSizeField;
        
        private string[] cardSerialNumbersField;
        
        private Challenge[] challengeField;
        
        private string temporaryPinCellAlphabetField;
        
        private int temporaryPinCellSizeField;
        
        private int temporaryPinChallengeSizeField;
        
        private bool userHasTemporaryPinField;
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   This string includes all the characters allowed in a challenge 
    ///   response. This does not include cell replacements, where, for example, the 
    ///   character 'l' may automatically be replaced by the digit '1' by the 
    ///   server. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string cardCellAlphabet {
            get {
                return this.cardCellAlphabetField;
            }
            set {
                this.cardCellAlphabetField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of characters in a single card cell.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int cardCellSize {
            get {
                return this.cardCellSizeField;
            }
            set {
                this.cardCellSizeField = value;
            }
        }
        
    /// <datatype>
    ///   string[]
    /// </datatype>
    /// <value>
    ///   The list of serial numbers of cards that the user could use to 
    ///   authenticate. This will be null if the system policy settings do not allow 
    ///   returning of this value, the user has a temporary PIN but no active 
    ///   cards or for anonymous authentication. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] cardSerialNumbers {
            get {
                return this.cardSerialNumbersField;
            }
            set {
                this.cardSerialNumbersField = value;
            }
        }
        
    /// <datatype>
    ///   Challenge[]
    /// </datatype>
    /// <value>
    ///   An array of Challenge components. This is the challenge that the user 
    ///   must successfully answer. 
    /// </value>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public Challenge[] challenge {
            get {
                return this.challengeField;
            }
            set {
                this.challengeField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The characters allowed in a temporary PIN challenge response. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string temporaryPinCellAlphabet {
            get {
                return this.temporaryPinCellAlphabetField;
            }
            set {
                this.temporaryPinCellAlphabetField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of characters in a temporary PIN cell.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int temporaryPinCellSize {
            get {
                return this.temporaryPinCellSizeField;
            }
            set {
                this.temporaryPinCellSizeField = value;
            }
        }
        
    /// <datatype>
    ///   int
    /// </datatype>
    /// <value>
    ///   The number of cells in a temporary PIN challenge response.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int temporaryPinChallengeSize {
            get {
                return this.temporaryPinChallengeSizeField;
            }
            set {
                this.temporaryPinChallengeSizeField = value;
            }
        }
        
    /// <datatype>
    ///   boolean
    /// </datatype>
    /// <value>
    ///   If true, the user currently has a temporary PIN assigned.
    ///   If the system does not allow returning of user data in the challenge 
    ///   set, this value will be false, regardless of whether or not the user 
    ///   actually has a temporary PIN. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool userHasTemporaryPin {
            get {
                return this.userHasTemporaryPinField;
            }
            set {
                this.userHasTemporaryPinField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the 2nd-factor authentication challenge returned for a login 
    ///   or changePassword request. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class LoginChallenge {
        
        private AuthenticationType typeField;
        
        private ChallengeSet gridChallengeField;
        
        private TokenChallenge tokenChallengeField;
        
    /// <datatype>
    ///   AuthenticationType
    /// </datatype>
    /// <value>
    ///   The type of the challenge. It will be one of GRID, TOKENRO or TOKENCR. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AuthenticationType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
    /// <datatype>
    ///   ChallengeSet
    /// </datatype>
    /// <value>
    ///   The grid challenge. This value will be set if the challenge type is 
    ///   GRID. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ChallengeSet gridChallenge {
            get {
                return this.gridChallengeField;
            }
            set {
                this.gridChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   TokenChallenge
    /// </datatype>
    /// <value>
    ///   The token challenge. This value will be set if the challenge type is 
    ///   TOKENRO or TOKENCR. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TokenChallenge tokenChallenge {
            get {
                return this.tokenChallengeField;
            }
            set {
                this.tokenChallengeField = value;
            }
        }
    }
    
    /// <summary>
    ///   Defines the information returned from a login or changePassword 
    ///   request. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public partial class LoginResult {
        
        private LoginState stateField;
        
        private string groupNameField;
        
        private string userNameField;
        
        private string delegateGroupNameField;
        
        private string delegateUserNameField;
        
        private LoginChallenge loginChallengeField;
        
        private System.Nullable<System.DateTime> passwordExpiryDateField;
        
        private System.Nullable<System.DateTime> passwordAllowChangeAfterDateField;
        
        private CardData cardField;
        
        private TokenData tokenField;
        
        private AdminServiceFault loginFaultField;
        
    /// <datatype>
    ///   LoginState
    /// </datatype>
    /// <value>
    ///   The state of the login request.
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoginState state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group name of the administrator logging in.
    ///   This value will only be set if the administrator has completed logging 
    ///   in. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name of the administrator logging in.
    ///   This value will only be set if the administrator has completed logging 
    ///   in. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The group name of the administrator logging in by delegation. This 
    ///   value will only be set if the delegation login completed successfully. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string delegateGroupName {
            get {
                return this.delegateGroupNameField;
            }
            set {
                this.delegateGroupNameField = value;
            }
        }
        
    /// <datatype>
    ///   string
    /// </datatype>
    /// <value>
    ///   The user name of the administrator logging in by delegation. This 
    ///   value will only be set if the delegation login completed successfully. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string delegateUserName {
            get {
                return this.delegateUserNameField;
            }
            set {
                this.delegateUserNameField = value;
            }
        }
        
    /// <datatype>
    ///   LoginChallenge
    /// </datatype>
    /// <value>
    ///   A challenge for second-factor authentication.
    ///   This value will only be set if the administrator has passed the 
    ///   first-phase password authentication and second-factor authentication is 
    ///   required for the administrator. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public LoginChallenge loginChallenge {
            get {
                return this.loginChallengeField;
            }
            set {
                this.loginChallengeField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date on which the user's password will expire. A value of Date(0) 
    ///   means the password will never expire. 
    ///   This value will be set if the administrator is using an Entrust 
    ///   IdentityGuard password for first factor authentication and the password has 
    ///   been authenticated. 
    ///   This value will not be set if the administrator is using an external 
    ///   password for first factor authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> passwordExpiryDate {
            get {
                return this.passwordExpiryDateField;
            }
            set {
                this.passwordExpiryDateField = value;
            }
        }
        
    /// <datatype>
    ///   dateTime
    /// </datatype>
    /// <value>
    ///   The date after which a password change will be allowed for the user, 
    ///   accounting for the minimum lifetime policy. 
    ///   This value will be set if the administrator is using an Entrust 
    ///   IdentityGuard password for first factor authentication and the password has 
    ///   been authenticated. 
    ///   This value will not be set if the administrator is using an external 
    ///   password for first factor authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> passwordAllowChangeAfterDate {
            get {
                return this.passwordAllowChangeAfterDateField;
            }
            set {
                this.passwordAllowChangeAfterDateField = value;
            }
        }
        
    /// <datatype>
    ///   CardData
    /// </datatype>
    /// <value>
    ///   The card used for second factor authentication.
    ///   This value will be set if the administrator has successfully used the 
    ///   card for second factor authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public CardData card {
            get {
                return this.cardField;
            }
            set {
                this.cardField = value;
            }
        }
        
    /// <datatype>
    ///   TokenData
    /// </datatype>
    /// <value>
    ///   The token used for second factor authentication.
    ///   This value will be set if the administrator has successfully used the 
    ///   token for second factor authentication. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TokenData token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
    /// <datatype>
    ///   AdminServiceFault
    /// </datatype>
    /// <value>
    ///   This value will be set if this structure is being returned for an 
    ///   invalid response. 
    /// </value>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public AdminServiceFault loginFault {
            get {
                return this.loginFaultField;
            }
            set {
                this.loginFaultField = value;
            }
        }
    }
    
    /// <summary>
    ///   The state of the current login.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum LoginState {
        
    /// <value>
    ///   Login has been completed successfully.
    /// </value>
        COMPLETE,
        
    /// <value>
    ///   Password authentication succeeded, but second-factor authentication is 
    ///   required. 
    /// </value>
        NEED_SECOND_FACTOR,
        
    /// <value>
    ///   This state is a placeholder in case new states are added in future 
    ///   releases. If your application encounters this state it should be 
    ///   upgraded to use the most up-to-date version of the admin service. 
    /// </value>
        UNKNOWN,
    }
    
    /// <summary>
    ///   Type of authenticator provided for delegation login
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:entrust.com:ig:adminV9:wsdl")]
    public enum DelegationAuthType {
        
    /// <value>
    ///   Indicates a SAML assertion authenticates the client.
    /// </value>
        SAML,
        
    /// <value>
    ///   Indicates a Smart Credential authenticates the client.
    /// </value>
        SMART_CREDENTIALS,
        
    /// <value>
    ///   Indicates that an HTTP header authenticates the client.
    /// </value>
        HEADER,
        
    /// <value>
    ///   Indicates that nothing authenticates the client.
    /// </value>
        NONE,
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public LoginResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoginResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void logoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void changePasswordCompletedEventHandler(object sender, changePasswordCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public LoginResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoginResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void keepAliveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void pingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void versionGetCompletedEventHandler(object sender, versionGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class versionGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal versionGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public VersionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VersionInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void licenseGetCompletedEventHandler(object sender, licenseGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class licenseGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal licenseGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public LicenseInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LicenseInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void licenseGetExCompletedEventHandler(object sender, licenseGetExCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class licenseGetExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal licenseGetExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public LicenseInfoEx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LicenseInfoEx[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void licenseSetCompletedEventHandler(object sender, licenseSetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class licenseSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal licenseSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public LicenseInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LicenseInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void licenseCheckCompletedEventHandler(object sender, licenseCheckCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class licenseCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal licenseCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public LicenseInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LicenseInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void licenseSetExCompletedEventHandler(object sender, licenseSetExCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class licenseSetExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal licenseSetExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public LicenseInfoEx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LicenseInfoEx[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void licenseCheckExCompletedEventHandler(object sender, licenseCheckExCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class licenseCheckExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal licenseCheckExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public LicenseInfoEx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LicenseInfoEx[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tokenLicenseGetCompletedEventHandler(object sender, tokenLicenseGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tokenLicenseGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal tokenLicenseGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public TokenLicenseInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TokenLicenseInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tokenLicenseSetCompletedEventHandler(object sender, tokenLicenseSetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tokenLicenseSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal tokenLicenseSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public TokenLicenseInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TokenLicenseInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tokenLicenseCheckCompletedEventHandler(object sender, tokenLicenseCheckCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tokenLicenseCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal tokenLicenseCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public TokenLicenseInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TokenLicenseInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialLicenseGetCompletedEventHandler(object sender, smartCredentialLicenseGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialLicenseGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialLicenseGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialLicenseInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialLicenseInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialLicenseSetCompletedEventHandler(object sender, smartCredentialLicenseSetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialLicenseSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialLicenseSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialLicenseInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialLicenseInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialLicenseCheckCompletedEventHandler(object sender, smartCredentialLicenseCheckCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialLicenseCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialLicenseCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialLicenseInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialLicenseInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void systemInfoGetCompletedEventHandler(object sender, systemInfoGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class systemInfoGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal systemInfoGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SystemInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void partitionCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void partitionDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void partitionGetCompletedEventHandler(object sender, partitionGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class partitionGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal partitionGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public PartitionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PartitionInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void partitionSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void partitionListCompletedEventHandler(object sender, partitionListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class partitionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal partitionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public PartitionInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PartitionInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ipLocationGetCompletedEventHandler(object sender, ipLocationGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ipLocationGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ipLocationGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public IPLocation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IPLocation)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void countryGetCompletedEventHandler(object sender, countryGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class countryGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal countryGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public CountryInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void countryListCompletedEventHandler(object sender, countryListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class countryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal countryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public CountryInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryInfo[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void regionGetCompletedEventHandler(object sender, regionGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class regionGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal regionGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public RegionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegionInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void regionListCompletedEventHandler(object sender, regionListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class regionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal regionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public RegionInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegionInfo[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tokenVendorGetCompletedEventHandler(object sender, tokenVendorGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tokenVendorGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal tokenVendorGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public TokenVendorInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TokenVendorInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tokenVendorListCompletedEventHandler(object sender, tokenVendorListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tokenVendorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal tokenVendorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public TokenVendorInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TokenVendorInfo[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void policyCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void policyDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void policyGetCompletedEventHandler(object sender, policyGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class policyGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal policyGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public PolicyInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PolicyInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void policyGetExCompletedEventHandler(object sender, policyGetExCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class policyGetExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal policyGetExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public PolicyInfoEx Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PolicyInfoEx)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void policySetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void policyListCompletedEventHandler(object sender, policyListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class policyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal policyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public PolicyInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PolicyInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSpecGetCompletedEventHandler(object sender, userSpecGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSpecGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSpecGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserSpecInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSpecInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void cardSpecGetCompletedEventHandler(object sender, cardSpecGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cardSpecGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cardSpecGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public CardSpecInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardSpecInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void pinSpecGetCompletedEventHandler(object sender, pinSpecGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pinSpecGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pinSpecGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public PINSpecInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PINSpecInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void passwordRulesGetCompletedEventHandler(object sender, passwordRulesGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class passwordRulesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal passwordRulesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public PasswordRulesInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PasswordRulesInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void permissionListCompletedEventHandler(object sender, permissionListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class permissionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal permissionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public PermissionsList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionsList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ownRoleGetCompletedEventHandler(object sender, ownRoleGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ownRoleGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ownRoleGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public RoleInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RoleInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void roleCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void roleDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void roleGetCompletedEventHandler(object sender, roleGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class roleGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal roleGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public RoleInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RoleInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void roleSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void roleListCompletedEventHandler(object sender, roleListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class roleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal roleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public RoleInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RoleInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void groupCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void groupDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void groupGetCompletedEventHandler(object sender, groupGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class groupGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal groupGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public GroupInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GroupInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void groupSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void groupListCompletedEventHandler(object sender, groupListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class groupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal groupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public GroupInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GroupInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void managedCaUserListCompletedEventHandler(object sender, managedCaUserListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class managedCaUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal managedCaUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public ManagedCaUserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ManagedCaUserInfo[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ManagedCaCertificateListCompletedEventHandler(object sender, ManagedCaCertificateListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManagedCaCertificateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManagedCaCertificateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public CertificateResponse[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CertificateResponse[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void managedCaScepRaEncryptionCertificateGetCompletedEventHandler(object sender, managedCaScepRaEncryptionCertificateGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class managedCaScepRaEncryptionCertificateGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal managedCaScepRaEncryptionCertificateGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public CertificateResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CertificateResponse)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void managedCaScepRaCertificateListCompletedEventHandler(object sender, managedCaScepRaCertificateListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class managedCaScepRaCertificateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal managedCaScepRaCertificateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public CertificateResponse[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CertificateResponse[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void managedCaScepRaDecryptDataCompletedEventHandler(object sender, managedCaScepRaDecryptDataCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class managedCaScepRaDecryptDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal managedCaScepRaDecryptDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public DecryptedDataInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DecryptedDataInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void managedCaScepRaSignContentCompletedEventHandler(object sender, managedCaScepRaSignContentCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class managedCaScepRaSignContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal managedCaScepRaSignContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public ScepRaSignContentResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScepRaSignContentResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userRegistrationPasswordGetCompletedEventHandler(object sender, userRegistrationPasswordGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userRegistrationPasswordGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userRegistrationPasswordGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserRegistrationPasswordInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserRegistrationPasswordInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userRegistrationPasswordAuthenticateCompletedEventHandler(object sender, userRegistrationPasswordAuthenticateCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userRegistrationPasswordAuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userRegistrationPasswordAuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserRegistrationPasswordResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserRegistrationPasswordResponse)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userRegistrationPasswordGetExCompletedEventHandler(object sender, userRegistrationPasswordGetExCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userRegistrationPasswordGetExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userRegistrationPasswordGetExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserRegistrationPasswordInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserRegistrationPasswordInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userRegistrationPasswordAuthenticateExCompletedEventHandler(object sender, userRegistrationPasswordAuthenticateExCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userRegistrationPasswordAuthenticateExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userRegistrationPasswordAuthenticateExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserRegistrationPasswordResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserRegistrationPasswordResponse)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialDefinitionCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialDefinitionDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialDefinitionGetCompletedEventHandler(object sender, smartCredentialDefinitionGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialDefinitionGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialDefinitionGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialDefinitionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialDefinitionInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialDefinitionTemplateGetCompletedEventHandler(object sender, smartCredentialDefinitionTemplateGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialDefinitionTemplateGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialDefinitionTemplateGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialDefinitionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialDefinitionInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialDefinitionSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialDefinitionListCompletedEventHandler(object sender, smartCredentialDefinitionListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialDefinitionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialDefinitionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialDefinitionInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialDefinitionInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialDefinitionTemplateListCompletedEventHandler(object sender, smartCredentialDefinitionTemplateListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialDefinitionTemplateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialDefinitionTemplateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialDefinitionInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialDefinitionInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialVariableCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialVariableDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialVariableSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialDeliveryGetCompletedEventHandler(object sender, smartCredentialDeliveryGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialDeliveryGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialDeliveryGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialDeliveryInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialDeliveryInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialDeliveryListCompletedEventHandler(object sender, smartCredentialDeliveryListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialDeliveryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialDeliveryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialDeliveryInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialDeliveryInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userDeliveryGetCompletedEventHandler(object sender, userDeliveryGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userDeliveryGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userDeliveryGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserDeliveryInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserDeliveryInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userDeliveryListCompletedEventHandler(object sender, userDeliveryListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userDeliveryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userDeliveryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserDeliveryInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserDeliveryInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialAppletCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialAppletDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialAppletGetCompletedEventHandler(object sender, smartCredentialAppletGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialAppletGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialAppletGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialAppletInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialAppletInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialAppletSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialAppletListCompletedEventHandler(object sender, smartCredentialAppletListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialAppletListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialAppletListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialAppletInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialAppletInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialAppletTemplateGetCompletedEventHandler(object sender, smartCredentialAppletTemplateGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialAppletTemplateGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialAppletTemplateGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialAppletInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialAppletInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialAppletTemplateListCompletedEventHandler(object sender, smartCredentialAppletTemplateListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialAppletTemplateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialAppletTemplateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialAppletInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialAppletInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void pacsCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void pacsDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void pacsGetCompletedEventHandler(object sender, pacsGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pacsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pacsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public PACSInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PACSInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void pacsSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void pacsListCompletedEventHandler(object sender, pacsListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pacsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pacsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public PACSInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PACSInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void proxyCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void proxyDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void proxyGetCompletedEventHandler(object sender, proxyGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class proxyGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal proxyGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public ProxyInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProxyInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void proxySetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void proxyListCompletedEventHandler(object sender, proxyListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class proxyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal proxyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public ProxyInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProxyInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void riskEngineGetCompletedEventHandler(object sender, riskEngineGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class riskEngineGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal riskEngineGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public RiskEngineInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskEngineInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void riskEngineListCompletedEventHandler(object sender, riskEngineListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class riskEngineListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal riskEngineListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public RiskEngineInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskEngineInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void biometricVendorGetCompletedEventHandler(object sender, biometricVendorGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class biometricVendorGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal biometricVendorGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public BiometricVendorInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BiometricVendorInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void biometricVendorListCompletedEventHandler(object sender, biometricVendorListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class biometricVendorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal biometricVendorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public BiometricVendorInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BiometricVendorInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialGraphicCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialGraphicDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialGraphicGetCompletedEventHandler(object sender, smartCredentialGraphicGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialGraphicGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialGraphicGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialGraphicInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialGraphicInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialGraphicSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialGraphicListCompletedEventHandler(object sender, smartCredentialGraphicListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialGraphicListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialGraphicListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialGraphicInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialGraphicInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void digitalIdConfigCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void digitalIdConfigDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void digitalIdConfigGetCompletedEventHandler(object sender, digitalIdConfigGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class digitalIdConfigGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal digitalIdConfigGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public DigitalIdConfigInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DigitalIdConfigInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void digitalIdConfigSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void digitalIdConfigListCompletedEventHandler(object sender, digitalIdConfigListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class digitalIdConfigListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal digitalIdConfigListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public DigitalIdConfigInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DigitalIdConfigInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void digitalIdConfigTemplateListCompletedEventHandler(object sender, digitalIdConfigTemplateListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class digitalIdConfigTemplateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal digitalIdConfigTemplateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public DigitalIdConfigInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DigitalIdConfigInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialLayoutCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialLayoutDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialLayoutGetCompletedEventHandler(object sender, smartCredentialLayoutGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialLayoutGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialLayoutGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialLayoutInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialLayoutInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialLayoutTemplateGetCompletedEventHandler(object sender, smartCredentialLayoutTemplateGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialLayoutTemplateGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialLayoutTemplateGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialLayoutInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialLayoutInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialLayoutSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialLayoutListCompletedEventHandler(object sender, smartCredentialLayoutListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialLayoutListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialLayoutListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialLayoutInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialLayoutInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialLayoutTemplateListCompletedEventHandler(object sender, smartCredentialLayoutTemplateListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialLayoutTemplateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialLayoutTemplateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialLayoutInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialLayoutInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialPrintModuleCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialPrintModuleDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialPrintModuleGetCompletedEventHandler(object sender, smartCredentialPrintModuleGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialPrintModuleGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialPrintModuleGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialPrintModuleInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialPrintModuleInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialPrintModuleSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialPrintModuleListCompletedEventHandler(object sender, smartCredentialPrintModuleListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialPrintModuleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialPrintModuleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialPrintModuleInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialPrintModuleInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialPrintModuleWipeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void repositoryGetCompletedEventHandler(object sender, repositoryGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class repositoryGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal repositoryGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public RepositoryInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RepositoryInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void repositoryListCompletedEventHandler(object sender, repositoryListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class repositoryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal repositoryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public RepositoryInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RepositoryInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userDeliverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userGetCompletedEventHandler(object sender, userGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userListCompletedEventHandler(object sender, userListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userLockoutGetCompletedEventHandler(object sender, userLockoutGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userLockoutGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userLockoutGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserLockoutInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserLockoutInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userLockoutSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userEnrollListCompletedEventHandler(object sender, userEnrollListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userEnrollListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userEnrollListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserEnrollListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserEnrollListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deliveryConfigListCompletedEventHandler(object sender, deliveryConfigListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deliveryConfigListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deliveryConfigListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public DeliveryConfigInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeliveryConfigInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userContactInfoCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userContactInfoDeleteCompletedEventHandler(object sender, userContactInfoDeleteCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userContactInfoDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userContactInfoDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userContactInfoGetCompletedEventHandler(object sender, userContactInfoGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userContactInfoGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userContactInfoGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public ContactInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactInfo[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userContactInfoSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPINCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPINDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPINDeliverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPINGetCompletedEventHandler(object sender, userPINGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userPINGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userPINGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserPINInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserPINInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPINSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userMachineSecretCreateCompletedEventHandler(object sender, userMachineSecretCreateCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userMachineSecretCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userMachineSecretCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public MachineSecretInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MachineSecretInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userMachineSecretDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userMachineSecretGetCompletedEventHandler(object sender, userMachineSecretGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userMachineSecretGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userMachineSecretGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public MachineSecretInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MachineSecretInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userMachineSecretSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userMachineSecretListCompletedEventHandler(object sender, userMachineSecretListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userMachineSecretListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userMachineSecretListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public MachineSecretInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MachineSecretInfo[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPreferenceCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPreferenceDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPreferenceGetCompletedEventHandler(object sender, userPreferenceGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userPreferenceGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userPreferenceGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public NameValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NameValue)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPreferenceSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPreferenceListCompletedEventHandler(object sender, userPreferenceListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userPreferenceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userPreferenceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public NameValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NameValue[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userOTPCreateCompletedEventHandler(object sender, userOTPCreateCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userOTPCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userOTPCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserOTPInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserOTPInfo[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userOTPDeleteCompletedEventHandler(object sender, userOTPDeleteCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userOTPDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userOTPDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userOTPDeliverCompletedEventHandler(object sender, userOTPDeliverCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userOTPDeliverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userOTPDeliverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserOTPDeliverResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserOTPDeliverResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userOTPGetCompletedEventHandler(object sender, userOTPGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userOTPGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userOTPGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserOTPInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserOTPInfo[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userOTPSetCompletedEventHandler(object sender, userOTPSetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userOTPSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userOTPSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPasswordCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPasswordSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPasswordGetCompletedEventHandler(object sender, userPasswordGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userPasswordGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userPasswordGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserPasswordInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserPasswordInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPasswordListCompletedEventHandler(object sender, userPasswordListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userPasswordListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userPasswordListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserPasswordInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserPasswordInfo[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPasswordDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPasswordDeliverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPVNCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPVNSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPVNDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPVNDeliverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPVNGetCompletedEventHandler(object sender, userPVNGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userPVNGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userPVNGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserPVNInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserPVNInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCardCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCardDeleteCompletedEventHandler(object sender, userCardDeleteCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userCardDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userCardDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCardDeliverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCardGetCompletedEventHandler(object sender, userCardGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userCardGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userCardGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserCardInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserCardInfo[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCardSetCompletedEventHandler(object sender, userCardSetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userCardSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userCardSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCardUnassignCompletedEventHandler(object sender, userCardUnassignCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userCardUnassignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userCardUnassignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCardListCompletedEventHandler(object sender, userCardListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userCardListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userCardListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserCardListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserCardListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCardExportCompletedEventHandler(object sender, userCardExportCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userCardExportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userCardExportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public CardExportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardExportResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenAssignCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenCreateCompletedEventHandler(object sender, userTokenCreateCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenDeleteCompletedEventHandler(object sender, userTokenDeleteCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenGetCompletedEventHandler(object sender, userTokenGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserTokenInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTokenInfo[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenSetCompletedEventHandler(object sender, userTokenSetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenUnassignCompletedEventHandler(object sender, userTokenUnassignCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenUnassignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenUnassignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenChallengeGetCompletedEventHandler(object sender, userTokenChallengeGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenChallengeGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenChallengeGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenAuthenticateCompletedEventHandler(object sender, userTokenAuthenticateCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenAuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenAuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenChallengeAuthenticateCompletedEventHandler(object sender, userTokenChallengeAuthenticateCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenChallengeAuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenChallengeAuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenUnlockCompletedEventHandler(object sender, userTokenUnlockCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenUnlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenUnlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserTokenUnlockResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTokenUnlockResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenUnlockExCompletedEventHandler(object sender, userTokenUnlockExCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenUnlockExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenUnlockExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserTokenUnlockResultEx Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTokenUnlockResultEx)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenResponseGetCompletedEventHandler(object sender, userTokenResponseGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenResponseGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenResponseGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserTokenResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTokenResponse)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenActivateCompletedEventHandler(object sender, userTokenActivateCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenActivateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenActivateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserTokenActivateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTokenActivateResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenActivateExCompletedEventHandler(object sender, userTokenActivateExCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenActivateExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenActivateExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserTokenActivateResultEx Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTokenActivateResultEx)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenActivateCompleteCompletedEventHandler(object sender, userTokenActivateCompleteCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenActivateCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenActivateCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserTokenActivateCompleteResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTokenActivateCompleteResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenTransactionValidateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userTokenListCompletedEventHandler(object sender, userTokenListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userTokenListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userTokenListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserTokenListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTokenListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userBiometricCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userBiometricDeleteCompletedEventHandler(object sender, userBiometricDeleteCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userBiometricDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userBiometricDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userBiometricGetCompletedEventHandler(object sender, userBiometricGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userBiometricGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userBiometricGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserBiometricInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserBiometricInfo[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userBiometricSetCompletedEventHandler(object sender, userBiometricSetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userBiometricSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userBiometricSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialCreateCompletedEventHandler(object sender, userSmartCredentialCreateCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialCreateExCompletedEventHandler(object sender, userSmartCredentialCreateExCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialCreateExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialCreateExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialGetCompletedEventHandler(object sender, userSmartCredentialGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserSmartCredentialInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSmartCredentialInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialGetExCompletedEventHandler(object sender, userSmartCredentialGetExCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialGetExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialGetExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserSmartCredentialInfoEx Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSmartCredentialInfoEx)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialChallengeGetCompletedEventHandler(object sender, userSmartCredentialChallengeGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialChallengeGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialChallengeGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialChallengeAuthenticateCompletedEventHandler(object sender, userSmartCredentialChallengeAuthenticateCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialChallengeAuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialChallengeAuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialChallengeCompletedEventHandler(object sender, userSmartCredentialChallengeCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialChallengeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialChallengeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserSmartCredentialChallengeResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSmartCredentialChallengeResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialValidateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialTransactionValidateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialSignStartCompletedEventHandler(object sender, userSmartCredentialSignStartCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialSignStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialSignStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserSmartCredentialSignStartResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSmartCredentialSignStartResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialSignCompleteCompletedEventHandler(object sender, userSmartCredentialSignCompleteCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialSignCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialSignCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserSmartCredentialSignCompleteResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSmartCredentialSignCompleteResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialSetExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialUnblockCompletedEventHandler(object sender, userSmartCredentialUnblockCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialUnblockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialUnblockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserSmartCredentialUnblockResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSmartCredentialUnblockResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialDigitalIdCreateRecoverCompletedEventHandler(object sender, userSmartCredentialDigitalIdCreateRecoverCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialDigitalIdCreateRecoverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialDigitalIdCreateRecoverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserDigitalIdCreateRecoverResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserDigitalIdCreateRecoverResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialDigitalIdCreateRecoverExCompletedEventHandler(object sender, userSmartCredentialDigitalIdCreateRecoverExCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialDigitalIdCreateRecoverExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialDigitalIdCreateRecoverExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserDigitalIdCreateRecoverResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserDigitalIdCreateRecoverResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialTokenCreateCompletedEventHandler(object sender, userSmartCredentialTokenCreateCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialTokenCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialTokenCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserTokenInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTokenInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialPACSGetCompletedEventHandler(object sender, userSmartCredentialPACSGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialPACSGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialPACSGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserSmartCredentialPACSGetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSmartCredentialPACSGetResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialPACSRegisterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialPACSSuspendCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialUnassignCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialCancelCompletedEventHandler(object sender, userSmartCredentialCancelCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialHoldCompletedEventHandler(object sender, userSmartCredentialHoldCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialHoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialHoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialUnholdCompletedEventHandler(object sender, userSmartCredentialUnholdCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialUnholdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialUnholdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialIssueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialDeliverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userSmartCredentialListCompletedEventHandler(object sender, userSmartCredentialListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userSmartCredentialListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userSmartCredentialListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserSmartCredentialListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSmartCredentialListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userDigitalIdCreateRecoverPolicyGetCompletedEventHandler(object sender, userDigitalIdCreateRecoverPolicyGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userDigitalIdCreateRecoverPolicyGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userDigitalIdCreateRecoverPolicyGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserDigitalIdCreateRecoverPolicyGetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserDigitalIdCreateRecoverPolicyGetResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userDigitalIdCreateRecoverCompletedEventHandler(object sender, userDigitalIdCreateRecoverCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userDigitalIdCreateRecoverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userDigitalIdCreateRecoverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserDigitalIdCreateRecoverResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserDigitalIdCreateRecoverResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userDigitalIdDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userDigitalIdSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userDigitalIdGetCompletedEventHandler(object sender, userDigitalIdGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userDigitalIdGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userDigitalIdGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserDigitalIdInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserDigitalIdInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userDigitalIdCancelCompletedEventHandler(object sender, userDigitalIdCancelCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userDigitalIdCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userDigitalIdCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userDigitalIdHoldCompletedEventHandler(object sender, userDigitalIdHoldCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userDigitalIdHoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userDigitalIdHoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userDigitalIdUnholdCompletedEventHandler(object sender, userDigitalIdUnholdCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userDigitalIdUnholdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userDigitalIdUnholdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userDigitalIdListCompletedEventHandler(object sender, userDigitalIdListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userDigitalIdListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userDigitalIdListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserDigitalIdListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserDigitalIdListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCertificateAssignCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCertificateAssignVerifyCompletedEventHandler(object sender, userCertificateAssignVerifyCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userCertificateAssignVerifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userCertificateAssignVerifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserCertificateAssignVerifyResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserCertificateAssignVerifyResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCertificateExportCompletedEventHandler(object sender, userCertificateExportCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userCertificateExportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userCertificateExportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserCertificateExportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserCertificateExportResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCertificateDeleteCompletedEventHandler(object sender, userCertificateDeleteCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userCertificateDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userCertificateDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCertificateGetCompletedEventHandler(object sender, userCertificateGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userCertificateGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userCertificateGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserCertificateInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserCertificateInfo[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCertificateSetCompletedEventHandler(object sender, userCertificateSetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userCertificateSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userCertificateSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCertificateChallengeCompletedEventHandler(object sender, userCertificateChallengeCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userCertificateChallengeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userCertificateChallengeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public CertificateChallenge Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CertificateChallenge)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCertificateAuthenticateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userCertificateListCompletedEventHandler(object sender, userCertificateListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userCertificateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userCertificateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserCertificateListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserCertificateListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void preproducedCardCreateCompletedEventHandler(object sender, preproducedCardCreateCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class preproducedCardCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal preproducedCardCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public PreproducedCardCreateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PreproducedCardCreateResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void preproducedCardDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void preproducedCardGetCompletedEventHandler(object sender, preproducedCardGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class preproducedCardGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal preproducedCardGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public PreproducedCardInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PreproducedCardInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void preproducedCardSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void preproducedCardListCompletedEventHandler(object sender, preproducedCardListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class preproducedCardListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal preproducedCardListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public PreproducedCardListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PreproducedCardListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void preproducedCardExportCompletedEventHandler(object sender, preproducedCardExportCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class preproducedCardExportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal preproducedCardExportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public CardExportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardExportResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tokenLoadCompletedEventHandler(object sender, tokenLoadCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tokenLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal tokenLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public TokenLoadResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TokenLoadResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tokenDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tokenInitializeStartCompletedEventHandler(object sender, tokenInitializeStartCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tokenInitializeStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal tokenInitializeStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public TokenInitializeResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TokenInitializeResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tokenInitializeCompleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tokenInitializeCancelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tokenGetCompletedEventHandler(object sender, tokenGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tokenGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal tokenGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public TokenInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TokenInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tokenSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tokenListCompletedEventHandler(object sender, tokenListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tokenListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal tokenListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public TokenListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TokenListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialLoadCompletedEventHandler(object sender, smartCredentialLoadCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialLoadResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialLoadResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialGetCompletedEventHandler(object sender, smartCredentialGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialChallengeGetCompletedEventHandler(object sender, smartCredentialChallengeGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialChallengeGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialChallengeGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialChallengeAuthenticateCompletedEventHandler(object sender, smartCredentialChallengeAuthenticateCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialChallengeAuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialChallengeAuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void smartCredentialListCompletedEventHandler(object sender, smartCredentialListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smartCredentialListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smartCredentialListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public SmartCredentialListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmartCredentialListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void challengeGetCompletedEventHandler(object sender, challengeGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class challengeGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal challengeGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public Challenge[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Challenge[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void challengeAuthenticateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ipListAddCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ipListDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ipListGetCompletedEventHandler(object sender, ipListGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ipListGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ipListGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public IPListEntry Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IPListEntry)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ipListListCompletedEventHandler(object sender, ipListListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ipListListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ipListListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public IPListListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IPListListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void auditGetCompletedEventHandler(object sender, auditGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class auditGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal auditGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public AuditInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuditInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void auditListCompletedEventHandler(object sender, auditListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class auditListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal auditListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public AuditListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuditListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void auditCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void auditDeleteCompletedEventHandler(object sender, auditDeleteCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class auditDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal auditDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void transactionCertificateGetCompletedEventHandler(object sender, transactionCertificateGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class transactionCertificateGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal transactionCertificateGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public TransactionCertificateInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionCertificateInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void transactionCertificateListCompletedEventHandler(object sender, transactionCertificateListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class transactionCertificateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal transactionCertificateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public TransactionCertificateListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionCertificateListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void transactionCertificateCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void transactionCertificateDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void transactionCertificateSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void transactionCertificateExportCompletedEventHandler(object sender, transactionCertificateExportCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class transactionCertificateExportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal transactionCertificateExportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public TransactionCertificateExportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionCertificateExportResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void transactionCertificateImportVerifyCompletedEventHandler(object sender, transactionCertificateImportVerifyCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class transactionCertificateImportVerifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal transactionCertificateImportVerifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public TransactionCertificateImportVerifyResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionCertificateImportVerifyResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void transactionCertificateImportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void caCertificateGetCompletedEventHandler(object sender, caCertificateGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class caCertificateGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal caCertificateGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public CACertificateInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CACertificateInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void caCertificateListCompletedEventHandler(object sender, caCertificateListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class caCertificateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal caCertificateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public CACertificateListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CACertificateListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void caCertificateValidateCompletedEventHandler(object sender, caCertificateValidateCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class caCertificateValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal caCertificateValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void caCertificateLDAPGetCompletedEventHandler(object sender, caCertificateLDAPGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class caCertificateLDAPGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal caCertificateLDAPGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public CACertificateLDAPGetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CACertificateLDAPGetResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void caCertificateLoadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void caCertificateDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void caCertificateSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void caCertificateExportCompletedEventHandler(object sender, caCertificateExportCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class caCertificateExportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal caCertificateExportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public CACertificateExportResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CACertificateExportResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void caCertificateLoadVerifyCompletedEventHandler(object sender, caCertificateLoadVerifyCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class caCertificateLoadVerifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal caCertificateLoadVerifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public CACertificateLoadVerifyResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CACertificateLoadVerifyResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void reportDefinitionGetCompletedEventHandler(object sender, reportDefinitionGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reportDefinitionGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reportDefinitionGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public ReportDefinitionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportDefinitionInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void reportDefinitionListCompletedEventHandler(object sender, reportDefinitionListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reportDefinitionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reportDefinitionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public ReportDefinitionListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportDefinitionListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void reportCreateCompletedEventHandler(object sender, reportCreateCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reportCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reportCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void reportGetCompletedEventHandler(object sender, reportGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reportGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reportGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public ReportInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void reportListCompletedEventHandler(object sender, reportListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reportListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reportListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public ReportListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void reportDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userFederationCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userFederationDeleteCompletedEventHandler(object sender, userFederationDeleteCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userFederationDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userFederationDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userFederationGetCompletedEventHandler(object sender, userFederationGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userFederationGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userFederationGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserFederationInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserFederationInfo[])(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userFederationSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userFederationListCompletedEventHandler(object sender, userFederationListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userFederationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userFederationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public UserFederationListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserFederationListResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void managedCaCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void managedCaDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void managedCaGetCompletedEventHandler(object sender, managedCaGetCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class managedCaGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal managedCaGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public ManagedCaInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ManagedCaInfo)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void managedCaSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void managedCaListCompletedEventHandler(object sender, managedCaListCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class managedCaListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal managedCaListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public ManagedCaInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ManagedCaInfoList)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void managedCaPivSignContentCompletedEventHandler(object sender, managedCaPivSignContentCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class managedCaPivSignContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal managedCaPivSignContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public PivSignContentResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PivSignContentResult)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void isMicrosoftCaSupportAvailableCompletedEventHandler(object sender, isMicrosoftCaSupportAvailableCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isMicrosoftCaSupportAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isMicrosoftCaSupportAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void managedCaIsCertRevokedCompletedEventHandler(object sender, managedCaIsCertRevokedCompletedEventArgs e);
    
    ///  <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class managedCaIsCertRevokedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal managedCaIsCertRevokedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
    ///  <remarks/>
        public ManagedCaIsCertRevokedResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ManagedCaIsCertRevokedResult)(this.results[0]));
            }
        }
    }
   /// <summary> 
   /// A utility class that given an array of UserTokenInfo objects will return
   /// a list of all the sets used by those tokens and will return a list of
   /// tokens corresponding to a given set.
   /// </summary> 
   public class UserTokenSetParser
   {
      /// <summary>
      /// Initialize the class with an array of tokens.
      /// </summary>
      /// <param name="tokens">The list of tokens to be parsed.</param>
      public UserTokenSetParser(UserTokenInfo[] tokens)
      {
         sets = new ArrayList();
         setMap = new Hashtable();

         if (tokens != null)
         {
            for (int i=0; i<tokens.Length; i++)
            {
               string name = tokens[i].TokenSet.ToLower();
               ArrayList list = null;
               if (setMap.Contains(name))
               {
                  list = (ArrayList) setMap[name];
               }
               else
               {
                  list = new ArrayList();
                  setMap.Add(name, list);
                  sets.Add(tokens[i].TokenSet);
               }
               list.Add(tokens[i]);
            }
         }
      }

      /// <summary>
      /// Return a list of all the sets found in the initial list of tokens.
      /// </summary>
      public ArrayList getTokenSets()
      {
         return sets;
      }

      /// <summary>
      /// Return a list of all the tokens with the given set.  If no tokens
      /// exist for the given set, return null.
      /// </summary>
      /// <param name="set">The set whose tokens are to be returned.</param>
      public ArrayList getTokensForSet(string set)
      {
         set = set.ToLower();
         if (setMap.Contains(set))
         {
            return (ArrayList) setMap[set];
         }

         return null;
      }

      private ArrayList sets = null;
      private Hashtable setMap = null;
   }


   /// <summary> 
   /// A utility class that given an array of TokenData objects will return a
   /// list of all the sets used by those tokens and will return a list of
   /// tokens corresponding to a given set.
   /// </summary> 
   public class TokenSetParser
   {
      /// <summary>
      /// Initialize the class with an array of tokens.
      /// </summary>
      /// <param name="tokens">The array of tokens to be parsed.</param>
      public TokenSetParser(TokenData[] tokens)
      {
         sets = new ArrayList();
         setMap = new Hashtable();

         if (tokens != null)
         {
            for (int i=0; i<tokens.Length; i++)
            {
               string name = tokens[i].TokenSet.ToLower();
               ArrayList list = null;
               if (setMap.Contains(name))
               {
                  list = (ArrayList) setMap[name];
               }
               else
               {
                  list = new ArrayList();
                  setMap.Add(name, list);
                  sets.Add(tokens[i].TokenSet);
               }
               list.Add(tokens[i]);
            }
         }
      }

      /// <summary>
      /// Return a list of all the sets found in the initial list of tokens.
      /// </summary>
      public ArrayList getTokenSets()
      {
         return sets;
      }

      /// <summary>
      /// Return a list of all the tokens with the given set.  If no tokens
      /// exist for the given set, return null.
      /// </summary>
      /// <param name="set">The set whose tokens are to be returned.</param>
      public ArrayList getTokensForSet(string set)
      {
         set = set.ToLower();
         if (setMap.Contains(set))
         {
            return (ArrayList) setMap[set];
         }

         return null;
      }

      private ArrayList sets = null;
      private Hashtable setMap = null;
   }
}
